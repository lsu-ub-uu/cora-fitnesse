---
Test
---
!contents -R2 -g -p -f -h
| import |
| se.uu.ub.cora.fitnesseintegration |

!1 Record part permissions
Record part permission makes it possible to set up read and write restrictions on parts of a record. It is only possible to add these restrictions to direct children of the top level dataGroup in the record.

!2 Prepare metadata for testing
Metadata is created in order to be able to test record part permission test cases. A new recordType, testWorkout,  is created that has record part restrictions on the listed children to the top level dataGroup.

Restrictions are set as follows:

 * noRestrictions on workoutName
 * readWrite on instructorId
 * write on numOfParticipants
 * write on instructorName
 * readWrite on popularity

Permissions are given as follows:

 * fitnesseAdmin has read and write on all restricted record parts
 * fitnesseUser has
   * read on instructorId
   * write on numOfParticipants

!***> Create needed metadata

!3 Create needed metadataTextVariables and metadataGroups
!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadataTextVariable | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"id","value":"testWorkoutNameTextVar"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"nameInData","value":"workoutName"},{"name":"regEx","value":".*"},{"name":"textId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleText"}]},{"name":"defTextId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleDefText"}]}],"attributes":{"type":"textVariable"}} | | CREATED |
| $adminAuthToken | metadataTextVariable | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"id","value":"testInstructorIdTextVar"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"nameInData","value":"instructorId"},{"name":"regEx","value":".*"},{"name":"textId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleText"}]},{"name":"defTextId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleDefText"}]}],"attributes":{"type":"textVariable"}} | | CREATED |
| $adminAuthToken | metadataTextVariable | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"id","value":"testNumOfParticipantsTextVar"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"nameInData","value":"numOfParticipants"},{"name":"regEx","value":".*"},{"name":"textId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleText"}]},{"name":"defTextId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleDefText"}]}],"attributes":{"type":"textVariable"}} | | CREATED |
| $adminAuthToken | metadataTextVariable | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"id","value":"testInstructorFirstNameTextVar"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"nameInData","value":"firstName"},{"name":"regEx","value":".*"},{"name":"textId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleText"}]},{"name":"defTextId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleDefText"}]}],"attributes":{"type":"textVariable"}} | | CREATED |
| $adminAuthToken | metadataTextVariable | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"id","value":"testInstructorLastNameTextVar"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"nameInData","value":"lastName"},{"name":"regEx","value":".*"},{"name":"textId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleText"}]},{"name":"defTextId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleDefText"}]}],"attributes":{"type":"textVariable"}} | | CREATED |
| $adminAuthToken | metadataGroup | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"id","value":"testInstructorNameGroup"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"nameInData","value":"instructorName"},{"name":"childReferences","children":[{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataTextVariable"},{"name":"linkedRecordId","value":"testInstructorFirstNameTextVar"}]}],"repeatId":"0"},{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataTextVariable"},{"name":"linkedRecordId","value":"testInstructorLastNameTextVar"}]}],"repeatId":"1"}]},{"name":"textId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleText"}]},{"name":"defTextId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleDefText"}]},{"name":"excludePGroupCreation","value":"true"}],"attributes":{"type":"group"}} | | CREATED |
| $adminAuthToken | metadataTextVariable | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"id","value":"testRatingTextVar"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"nameInData","value":"rating"},{"name":"regEx","value":".*"},{"name":"textId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleText"}]},{"name":"defTextId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleDefText"}]}],"attributes":{"type":"textVariable"}} | | CREATED |
| $adminAuthToken | metadataGroup | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"id","value":"testPopularityGroup"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"nameInData","value":"popularity"},{"name":"childReferences","children":[{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataTextVariable"},{"name":"linkedRecordId","value":"testRatingTextVar"}]}],"repeatId":"0"}]},{"name":"textId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleText"}]},{"name":"defTextId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleDefText"}]},{"name":"excludePGroupCreation","value":"true"}],"attributes":{"type":"group"}} | | CREATED |

Add the created metadataChildren to a top level dataGroup and use that in a new recordType, record part restrictions are added when adding the children to the top level dataGroup. There are two types of constraints, write and readWrite. A child marked with a write constraint can be read by anybody, but only written (created / updated), by a user with permission. However a child marked with readWrite can only be read and therefor written by a user with permission, a user is not allowed to write parts of a record it can not read.

!3 Create a top level dataGroup and a new recordType where it is used
!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadataGroup | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"id","value":"testWorkoutGroup"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"nameInData","value":"workout"},{"name":"childReferences","children":[{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataGroup"},{"name":"linkedRecordId","value":"recordInfoGroup"}]}],"repeatId":"5"},{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataTextVariable"},{"name":"linkedRecordId","value":"testWorkoutNameTextVar"}]}],"repeatId":"0"},{"name":"childReference","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataTextVariable"},{"name":"linkedRecordId","value":"testInstructorIdTextVar"}]},{"name":"recordPartConstraint","value":"readWrite"}],"repeatId":"1"},{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataTextVariable"},{"name":"linkedRecordId","value":"testNumOfParticipantsTextVar"}]},{"name":"recordPartConstraint","value":"write"}],"repeatId":"2"},{"name":"childReference","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataGroup"},{"name":"linkedRecordId","value":"testInstructorNameGroup"}]},{"name":"recordPartConstraint","value":"write"}],"repeatId":"3"},{"name":"childReference","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataGroup"},{"name":"linkedRecordId","value":"testPopularityGroup"}]},{"name":"recordPartConstraint","value":"readWrite"}],"repeatId":"4"}]},{"name":"textId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleText"}]},{"name":"defTextId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleDefText"}]},{"name":"excludePGroupCreation","value":"true"}],"attributes":{"type":"group"}} | | CREATED |
| $adminAuthToken | recordType | {"name":"recordType","children":[{"name":"abstract","value":"false"},{"name":"recordInfo","children":[{"name":"id","value":"testWorkout"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"userSuppliedId","value":"true"},{"name":"groupOfRecordType","value":"other","repeatId":"0"},{"name":"public","value":"false"},{"name":"metadataId","children":[{"name":"linkedRecordType","value":"metadataGroup"},{"name":"linkedRecordId","value":"testWorkoutGroup"}]},{"name":"newMetadataId","children":[{"name":"linkedRecordType","value":"metadataGroup"},{"name":"linkedRecordId","value":"testWorkoutGroup"}]},{"name":"presentationViewId","children":[{"name":"linkedRecordType","value":"presentationGroup"},{"name":"linkedRecordId","value":"testWorkoutGroupPGroup"}]},{"name":"presentationFormId","children":[{"name":"linkedRecordType","value":"presentationGroup"},{"name":"linkedRecordId","value":"testWorkoutGroupPGroup"}]},{"name":"newPresentationFormId","children":[{"name":"linkedRecordType","value":"presentationGroup"},{"name":"linkedRecordId","value":"testWorkoutGroupPGroup"}]},{"name":"menuPresentationViewId","children":[{"name":"linkedRecordType","value":"presentationGroup"},{"name":"linkedRecordId","value":"testWorkoutGroupPGroup"}]},{"name":"listPresentationViewId","children":[{"name":"linkedRecordType","value":"presentationGroup"},{"name":"linkedRecordId","value":"testWorkoutGroupPGroup"}]},{"name":"autocompletePresentationView","children":[{"name":"linkedRecordType","value":"presentationGroup"},{"name":"linkedRecordId","value":"testWorkoutGroupPGroup"}]},{"name":"textId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleText"}]},{"name":"defTextId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleDefText"}]}]} | | CREATED |

!3 Setup metadata to allow fitnesseAdmin to handle the new recordType, including read and write permissions for the restricted record parts
Create a new rule, everythingForTestWorkoutRule, to allow fitnesseAdmin to do everything with recordType testWorkout

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | permissionRule | {"name":"permissionRule","children":[{"name":"recordInfo","children":[{"name":"id","value":"everythingForTestWorkoutRule"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.*","repeatId":"0"}],"attributes":{"type":"action"}},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.testWorkout","repeatId":"0"}],"attributes":{"type":"recordType"}},{"name":"activeStatus","value":"active"},{"name":"readPermissions","children":[{"name":"readPermission","value":"testWorkout.instructorId","repeatId":"0"},{"name":"readPermission","value":"testWorkout.numOfParticipants","repeatId":"1"},{"name":"readPermission","value":"testWorkout.popularity","repeatId":"2"}]},{"name":"writePermissions","children":[{"name":"writePermission","value":"testWorkout.instructorId","repeatId":"0"},{"name":"writePermission","value":"testWorkout.numOfParticipants","repeatId":"1"},{"name":"writePermission","value":"testWorkout.popularity","repeatId":"2"},{"name":"writePermission","value":"testWorkout.instructorName","repeatId":"3"}]}]} | | CREATED |

'''Here we update a role (fitnesseTextAdmin) that fitnesseUser already has, instead of creating a new role, as we have different instances of in memory storage, between where the users roles are created and where the login system reads them.'''

Update permissionRole, everything, adding new rule everythingForTestWorkoutRule

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | permissionRole | everything | {"name":"permissionRole","children":[{"name":"recordInfo","children":[{"name":"id","value":"everything"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"permissionRole"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"systemOneUser"},{"name":"linkedRecordId","value":"12345"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"systemOneUser"},{"name":"linkedRecordId","value":"12345"}]},{"name":"tsUpdated","value":"2017-11-01T17:51:52.000000Z"}],"repeatId":"0"}]},{"name":"permissionRuleLink","children":[{"name":"linkedRecordType","value":"permissionRule"},{"name":"linkedRecordId","value":"everything"}],"repeatId":"0"},{"name":"activeStatus","value":"active"},{"name":"permissionRuleLink","children":[{"name":"linkedRecordType","value":"permissionRule"},{"name":"linkedRecordId","value":"everythingForTestWorkoutRule"}],"repeatId":"1"}]} | | OK |

!3 Setup metadata to allow fitnesseUser to handle the new recordType, including read permission on the restricted record part instructorId
Create a new rule, limitedForTestWorkoutRule, to allow fitnesseUser limited access to recordType testWorkout

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | permissionRule | {"name":"permissionRule","children":[{"name":"recordInfo","children":[{"name":"id","value":"limitedForTestWorkoutRule"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.create","repeatId":"0"},{"name":"permissionRulePartValue","value":"system.read","repeatId":"1"},{"name":"permissionRulePartValue","value":"system.update","repeatId":"2"},{"name":"permissionRulePartValue","value":"system.search","repeatId":"3"},{"name":"permissionRulePartValue","value":"system.list","repeatId":"4"}],"attributes":{"type":"action"}},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.testWorkout","repeatId":"0"}],"attributes":{"type":"recordType"}},{"name":"activeStatus","value":"active"},{"name":"readPermissions","children":[{"name":"readPermission","value":"testWorkout.instructorId","repeatId":"0"}]}]} | | CREATED |

'''Here we update a role (fitnesseTextAdmin) that fitnesseUser already has, instead of creating a new role, as we have different instances of in memory storage, between where the users roles are created and where the login system reads them.'''

Update permissionRole, textAdmin, adding new rule limitedForTestWorkoutRule

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | permissionRole | fitnesseTextAdmin | {"name":"permissionRole","children":[{"name":"recordInfo","children":[{"name":"id","value":"fitnesseTextAdmin"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"permissionRole"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"systemOneUser"},{"name":"linkedRecordId","value":"12345"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"systemOneUser"},{"name":"linkedRecordId","value":"12345"}]},{"name":"tsUpdated","value":"2017-11-01 17:51:52.0"}],"repeatId":"0"}]},{"name":"permissionRuleLink","children":[{"name":"linkedRecordType","value":"permissionRule"},{"name":"linkedRecordId","value":"textAdmin"}],"repeatId":"0"},{"name":"permissionRuleLink","children":[{"name":"linkedRecordType","value":"permissionRule"},{"name":"linkedRecordId","value":"nothing"}],"repeatId":"1"},{"name":"permissionRuleLink","children":[{"name":"linkedRecordType","value":"permissionRule"},{"name":"linkedRecordId","value":"limitedForTestWorkoutRule"}],"repeatId":"2"},{"name":"activeStatus","value":"active"}]} | | OK |

Create metadata needed to search for testWorkout records, a definition of a search

!3 Create a metadataGroup(testWorkoutSearchIncludePartGroup, testWorkoutSearchIncludeGroup, testWorkoutSearchGroup)
!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadataGroup | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"id","value":"testWorkoutSearchIncludePartGroup"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"nameInData","value":"includePart"},{"name":"childReferences","children":[{"name":"childReference","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"searchRecordIdTextVar"}]}],"repeatId":"0"}]},{"name":"excludePGroupCreation","value":"true"}],"attributes":{"type":"group"}} | | CREATED |
| $adminAuthToken | metadataGroup | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"id","value":"testWorkoutSearchIncludeGroup"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]}]},{"name":"nameInData","value":"include"},{"name":"childReferences","children":[{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testWorkoutSearchIncludePartGroup"}]}],"repeatId":"0"}]},{"name":"excludePGroupCreation","value":"true"}],"attributes":{"type":"group"}} | | CREATED |
| $adminAuthToken | metadataGroup | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"id","value":"testWorkoutSearchGroup"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]}]},{"name":"nameInData","value":"searchTestWorkoutExtended"},{"name":"childReferences","children":[{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testWorkoutSearchIncludeGroup"}]}],"repeatId":"0"}]},{"name":"excludePGroupCreation","value":"true"}],"attributes":{"type":"group"}} | | CREATED |

!3 Create data of recordType search
!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | search | {"name":"search","children":[{"name":"recordInfo","children":[{"name":"id","value":"testWorkoutExtendedSearch"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"metadataId","children":[{"name":"linkedRecordType","value":"metadataGroup"},{"name":"linkedRecordId","value":"testWorkoutSearchGroup"}]},{"name":"presentationId","children":[{"name":"linkedRecordType","value":"presentationGroup"},{"name":"linkedRecordId","value":"testWorkoutGroupPGroup"}]},{"name":"recordTypeToSearchIn","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testWorkout"}],"repeatId":"0"},{"name":"searchGroup","value":"autocomplete"}]} | | CREATED |

*!
!2 Create
There are a few different cases for create that can happen, when there are write restrictions:

 * Case 1: A user (fitnesseAdmin) has write permission on all restricted data, create as normal
 * A user (fitnesseUser) has write permission on som but not all restricted data, there are three subcases
   * Case 2: Only recordParts that the user has write permissions for is sent to create, create as normal
   * Case 3: Data for recordParts that the user does not have write permission for is sent to create. The write protected parts that the user does not have write permission for, should not be added to the new record, all other data should be added and the record created.
   * Case 4: A recordPart that the user does not have write permission for is mandatory (must be present), whether the user sends data for the restricted parts or not does not matter, the end result should be that the record is missing the mandatory restricted data parts and record creation should fail with an error

Case 1: A user (fitnesseAdmin) has write permission on all restricted data, create as normal

!***> Case 1

Create a new testWorkout record as fitnesseAdmin, adding unrestricted and all restricted data parts

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | testWorkout | {"name":"workout","children":[{"name":"recordInfo","children":[{"name":"id","value":"cirkelfys1"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testWorkout"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"tsCreated","value":"2018-08-29T14:27:20.307000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"tsUpdated","value":"2018-08-29T14:27:20.307000Z"}],"repeatId":"45"}]},{"name":"workoutName","value":"cirkelfys"},{"name":"numOfParticipants","value":"45"},{"name":"instructorId","value":"3564"},{"name":"instructorName","children":[{"name":"firstName","value":"Anna"},{"name":"lastName","value":"Ledare"}]},{"name":"popularity","children":[{"name":"rating","value":"4"}]}]} | | CREATED |

Make sure all data parts are in the created record, unrestricted (workoutName) and restricted (instructorId, numOfParticipants, instructorName, popularity)

!| ComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContain? |
| $adminAuthToken | testWorkout | cirkelfys1 | {"children":[{"name":"workoutName"},{"name":"instructorId"},{"name":"numOfParticipants"},{"name":"instructorName"},{"name":"popularity"}]} | | OK |

*!
Case 2: Only recordParts that the user has write permissions for is sent to create, create as normal

!***> Case 2

Create a new testWorkout record as fitnesseUser, adding restricted part numOfParticipants, that it has write permission for, making sure it is in the created record

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $userAuthToken | testWorkout | {"name":"workout","children":[{"name":"recordInfo","children":[{"name":"id","value":"cirkelfys2"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testWorkout"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"tsCreated","value":"2018-08-29T14:27:20.307000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"tsUpdated","value":"2018-08-29T14:27:20.307000Z"}],"repeatId":"45"}]},{"name":"workoutName","value":"cirkelfys"},{"name":"numOfParticipants","value":"45"}]} | | CREATED |

Make sure all added data parts are in the created record, unrestricted (workoutName) and restricted (numOfParticipants)

!| ComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContain? |
| $adminAuthToken | testWorkout | cirkelfys2 | {"children":[{"name":"workoutName"},{"name":"numOfParticipants"}]} | | OK |

*!
Case 3: Data for recordParts that the user does not have write  permission for is sent to create. The write protected parts that the  user does not have write permission for, should not be added to the new  record, all other data should be added and the record created.

!***> Case 3

Create a new testWorkout record as fitnesseUser, adding restricted part numOfParticipants and instructorId, that it has write permission for, making sure it is in the created record

no write for instructorId should not be in record

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $userAuthToken | testWorkout | {"name":"workout","children":[{"name":"recordInfo","children":[{"name":"id","value":"cirkelfys3"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testWorkout"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"tsCreated","value":"2018-08-29T14:27:20.307000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"tsUpdated","value":"2018-08-29T14:27:20.307000Z"}],"repeatId":"45"}]},{"name":"workoutName","value":"cirkelfys"},{"name":"numOfParticipants","value":"45"},{"name":"instructorId","value":"3564"},{"name":"instructorName","children":[{"name":"firstName","value":"Anna"},{"name":"lastName","value":"Ledare"}]},{"name":"popularity","children":[{"name":"rating","value":"4"}]}]} | | CREATED |

Make sure all added data parts that the user has permission to write, are in the created record, unrestricted (workoutName) and restricted (numOfParticipants)

!| ComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContain? |
| $adminAuthToken | testWorkout | cirkelfys3 | {"children":[{"name":"workoutName"},{"name":"numOfParticipants"}]} | | OK |

Make sure added data parts that the user does NOT have permission to write,  are NOT present in the created record restricted  (instructorId, instructorName)

!| ComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContain? |
| $adminAuthToken | testWorkout | cirkelfys3 | {"children":[{"name":"instructorId"},{"name":"instructorName"},{"name":"popularity"}]} | | Child with nameInData instructorId is missing.Child with nameInData instructorName is missing.Child with nameInData popularity is missing. |

*!
Case 4: A recordPart that the user does not have write permission for is mandatory (must be present), whether the user sends data for the restricted parts or not does not matter,  the end result should be that the record is missing the mandatory  restricted data parts and record creation should fail with an error

!***> Case 4

Create a new testWorkout record as fitnesseUser, adding restricted part numOfParticipants and instructorId, that it has write permission for, making sure it is in the created record

!| Comment |
| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $userAuthToken | testWorkout | {"name":"workout","children":[{"name":"recordInfo","children":[{"name":"id","value":"cirkelfys"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testWorkout"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"tsCreated","value":"2018-08-29T14:27:20.307000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"tsUpdated","value":"2018-08-29T14:27:20.307000Z"}],"repeatId":"45"}]},{"name":"workoutName","value":"cirkelfys"},{"name":"numOfParticipants","value":"45"},{"name":"instructorId","value":"3564"},{"name":"instructorName","children":[{"name":"firstName","value":"Anna"},{"name":"lastName","value":"Ledare"}]},{"name":"popularity","children":[{"name":"rating","value":"4"}]}]} | | CREATED |

tr

!| ComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContain? |
| $adminAuthToken | testWorkout | cirkelfys | {"children":[{"name":"workoutName"},{"name":"instructorId"},{"name":"numOfParticipants"},{"name":"instructorName"},{"name":"popularity"}]} | | OK |

*!
!2 Read
!***> Läs posten cirkelfys och se att posten innehåller de barn som fitnesseUser har rätt att läsa

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $userAuthToken | testWorkout | cirkelfys | | OK |

!| ComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContain? |
| $userAuthToken | testWorkout | cirkelfys | {"children":[{"name":"recordInfo"},{"name":"workoutName"},{"name":"numOfParticipants"},{"name":"instructorName"}]} | | OK |

*!
!***> Läs posten cirkelfys och se att posten INTE innehåller de barn som fitnesseUser inte har rätt att läsa

!| ComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContain? |
| $userAuthToken | testWorkout | cirkelfys | {"children":[{"name":"instructorId"},{"name":"popularity"}]} | | Child with nameInData popularity is missing. |

*!
!***> Läs posten cirkelfys som fitnesse admin och se att posten innehåller de barn som fitnesseAdmin har rätt att läsa

!| ComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContain? |
| $adminAuthToken | testWorkout | cirkelfys | {"children":[{"name":"workoutName"},{"name":"instructorId"},{"name":"numOfParticipants"},{"name":"instructorName"},{"name":"popularity"}]} | | OK |

*!
!2 Update
Vi uppdaterar en post först med den användare om får uppdatera alla fält. Vi läser den sen och ser att datat är uppdaterat. Därefter försöker vi uppdatera posten med den användaren som INTE har rätt att uppdatera alla fält, för att sedan läsa

posten igen och se att fälten INTE är uppdaterade.

!***> Uppdatera en testWorkout-posten som fitnesseAdmin

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | testWorkout | cirkelfys | {"name":"workout","children":[{"name":"recordInfo","children":[{"name":"id","value":"cirkelfys"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testWorkout"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"tsCreated","value":"2018-08-29T14:27:20.307000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"tsUpdated","value":"2018-08-29T14:27:20.307000Z"}],"repeatId":"1"}]},{"name":"workoutName","value":"cirkelfys"},{"name":"numOfParticipants","value":"30"},{"name":"instructorId","value":"6666"},{"name":"instructorName","children":[{"name":"firstName","value":"Emma"},{"name":"lastName","value":"Instruktör"}]},{"name":"popularity","children":[{"name":"rating","value":"8"}]}]} | | OK |

*!
!***> Läs posten cirkelfys och se att posten innehåller uppdaterade värden för alla fält

!| ComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContainWithValues? |
| $adminAuthToken | testWorkout | cirkelfys | {"children":[{"type":"atomic","name":"workoutName","value":"cirkelfys"},{"type":"atomic","name":"instructorId","value":"6666"},{"type":"atomic","name":"numOfParticipants","value":"30"},{"type":"group","name":"instructorName","children":[{"type":"atomic","name":"firstName","value":"Emma"},{"type":"atomic","name":"lastName","value":"Instruktör"}]},{"type":"group","name":"popularity","children":[{"type":"atomic","name":"rating","value":"8"}]}]} | | OK |

*!
!***> Uppdatera en testWorkout-posten som fitnesseUser, vilken inte har rätt att uppdatera alla fält

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $userAuthToken | testWorkout | cirkelfys | {"name":"workout","children":[{"name":"recordInfo","children":[{"name":"id","value":"cirkelfys"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testWorkout"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"tsCreated","value":"2018-08-29T14:27:20.307000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"tsUpdated","value":"2018-08-29T14:27:20.307000Z"}],"repeatId":"1"}]},{"name":"workoutName","value":"cirkelfys"},{"name":"numOfParticipants","value":"3000"},{"name":"instructorId","value":"123456"},{"name":"instructorName","children":[{"name":"firstName","value":"Rut-Emma"},{"name":"lastName","value":"Projektledare"}]},{"name":"popularity","children":[{"name":"rating","value":"0"}]}]} | | OK |

*!
I children-kolumnen i första raden anger vi de värden som vi försökte uppdatera till. Eftersom fitnesseUser inte får uppdatera dessa fält så förväntar vi oss ett meddelande om fel värden i testReadCheckContainWithValues-kolumnen.

I andra raden anger vi de gamla värdena i children-kolumnen, de som fitnesseAdmin uppdaterade till tidigare. Där förväntar vi oss svaret OK.

!***> Läs posten cirkelfys och se att posten INTE innehåller uppdaterade värden för alla fält

!| ComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContainWithValues? |
| $adminAuthToken | testWorkout | cirkelfys | {"children":[{"type":"atomic","name":"workoutName","value":"cirkelfys"},{"type":"atomic","name":"instructorId","value":"123456"},{"type":"atomic","name":"numOfParticipants","value":"3000"},{"type":"group","name":"instructorName","children":[{"type":"atomic","name":"firstName","value":"Rut-Emma"},{"type":"atomic","name":"lastName","value":"Projektledare"}]},{"type":"group","name":"popularity","children":[{"type":"atomic","name":"rating","value":"0"}]}]} | | Child with nameInData instructorId does not have the correct value. Child with nameInData numOfParticipants does not have the correct value. Child with nameInData firstName does not have the correct value. Child with nameInData lastName does not have the correct value. Child with nameInData rating does not have the correct value. |
| $adminAuthToken | testWorkout | cirkelfys | {"children":[{"type":"atomic","name":"workoutName","value":"cirkelfys"},{"type":"atomic","name":"instructorId","value":"6666"},{"type":"atomic","name":"numOfParticipants","value":"30"},{"type":"group","name":"instructorName","children":[{"type":"atomic","name":"firstName","value":"Emma"},{"type":"atomic","name":"lastName","value":"Instruktör"}]},{"type":"group","name":"popularity","children":[{"type":"atomic","name":"rating","value":"8"}]}]} | | OK |

*!
Om man inte har rätt att skriva delar av en post så ska det vara möjligt att skicka in en post utan de fälten, även om de är obligatoriska. De delar av posten som man inte får skriva hämtas från den tidigare!-
-!lagrade posten.

!***> Uppdatera en testWorkout-posten som fitnesseUser, utan  alla obligatoriska fält

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $userAuthToken | testWorkout | cirkelfys | {"name":"workout","children":[{"name":"recordInfo","children":[{"name":"id","value":"cirkelfys"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testWorkout"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"tsCreated","value":"2018-08-29T14:27:20.307000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"tsUpdated","value":"2018-08-29T14:27:20.307000Z"}],"repeatId":"1"}]},{"name":"workoutName","value":"cirkelfys"},{"name":"instructorName","children":[{"name":"firstName","value":"Rut-Emma"},{"name":"lastName","value":"Projektledare"}]},{"name":"popularity","children":[{"name":"rating","value":"0"}]}]} | | OK |

*!
!2 Lista poster
Om man listar poster så ska varje post i listan bara innehålla det data som användaren har rätt att läsa

!***> Lists testWorkouts och lagra resultatet för att användas i test nedan, admin

!| ComparerFixture |
| authToken | type | testReadRecordListAndStoreRecords? |
| $adminAuthToken | testWorkout | |

*!
!***> Kontrollera barnen i den tidigare upplästa listan, admin

!| ComparerFixture |
| type | children | listIndexToCompareTo | testReadFromListCheckContain? |
| testWorkout | {"children":[{"name":"instructorId"},{"name":"popularity"}]} | 0 | OK |

*!
!***> Lists testWorkouts och lagra resultatet för att användas i test nedan, user

!| ComparerFixture |
| authToken | type | testReadRecordListAndStoreRecords? |
| $userAuthToken | testWorkout | |

*!
!***> Kontrollera barnen i den tidigare upplästa listan, user

!| ComparerFixture |
| type | children | listIndexToCompareTo | testReadFromListCheckContain? |
| testWorkout | {"children":[{"name":"instructorId"},{"name":"popularity"}]} | 0 | Child with nameInData popularity is missing. |

*!
!2 Sök poster
När man söker efter poster ska varje post i resultatet bara innehålla det data som användaren har rätt att läsa

!***> Sök efter testWorkouts och lagra resultatet för att användas i test nedan

!| Comment |
| ComparerFixture |
| authToken | searchId | json | testSearchAndStoreRecords? |
| $adminAuthToken | testWorkoutExtendedSearch | {"name":"searchTestWorkoutExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"recordIdSearchTerm","value":"**"}]}]}]} | |

*!
!***> Kontrollera barnen i resultatet av den tidigare gjorda sökningen

!| Comment |
| ComparerFixture |
| type | children | listIndexToCompareTo | testReadFromListCheckContain? |
| testWorkout | {"children":[{"name":"instructorId"},{"name":"popularity"}]} | 0 | Child with nameInData popularity is missing. |

*!
!2 Skriv - bara skrivbegränsning
!***> Uppdatera metadatagruppen så att barnen bara har skrivbegränsningar

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | metadataGroup | testWorkoutGroup | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"id","value":"testWorkoutGroup"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"metadataGroup"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"name":"tsCreated","value":"2019-09-10T08:52:03.098000Z"}]},{"name":"nameInData","value":"workout"},{"name":"childReferences","children":[{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataGroup"},{"name":"linkedRecordId","value":"recordInfoGroup"}]}],"repeatId":"5"},{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataTextVariable"},{"name":"linkedRecordId","value":"testWorkoutNameTextVar"}]}],"repeatId":"0"},{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataTextVariable"},{"name":"linkedRecordId","value":"testInstructorIdTextVar"}]},{"name":"recordPartConstraint","value":"write"}],"repeatId":"1"},{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataTextVariable"},{"name":"linkedRecordId","value":"testNumOfParticipantsTextVar"}]},{"name":"recordPartConstraint","value":"write"}],"repeatId":"2"},{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataGroup"},{"name":"linkedRecordId","value":"testInstructorNameGroup"}]},{"name":"recordPartConstraint","value":"write"}],"repeatId":"3"},{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataGroup"},{"name":"linkedRecordId","value":"testPopularityGroup"}]},{"name":"recordPartConstraint","value":"write"}],"repeatId":"4"}]},{"name":"textId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleText"}]},{"name":"defTextId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleDefText"}]},{"name":"excludePGroupCreation","value":"true"}],"attributes":{"type":"group"}} | | OK |

*!
!***> Uppdatera en testWorkout-posten som fitnesseUser, vilken inte har rätt att uppdatera alla fält

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $userAuthToken | testWorkout | cirkelfys | {"name":"workout","children":[{"name":"recordInfo","children":[{"name":"id","value":"cirkelfys"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testWorkout"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"tsCreated","value":"2018-08-29T14:27:20.307000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"tsUpdated","value":"2018-08-29T14:27:20.307000Z"}],"repeatId":"1"}]},{"name":"workoutName","value":"cirkelfys"},{"name":"numOfParticipants","value":"99999"},{"name":"instructorId","value":"666"},{"name":"instructorName","children":[{"name":"firstName","value":"Ingen"},{"name":"lastName","value":"LedareAlls"}]},{"name":"popularity","children":[{"name":"rating","value":"-9"}]}]} | | OK |

*!
!***> Läs posten cirkelfys och se att posten INTE innehåller uppdaterade värden för alla fält

!| ComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContainWithValues? |
| $adminAuthToken | testWorkout | cirkelfys | {"children":[{"type":"atomic","name":"workoutName","value":"cirkelfys"},{"type":"atomic","name":"instructorId","value":"666"},{"type":"atomic","name":"numOfParticipants","value":"99999"},{"type":"group","name":"instructorName","children":[{"type":"atomic","name":"firstName","value":"Ingen"},{"type":"atomic","name":"lastName","value":"LedareAlls"}]},{"type":"group","name":"popularity","children":[{"type":"atomic","name":"rating","value":"-9"}]}]} | | Child with nameInData instructorId does not have the correct value. Child with nameInData numOfParticipants does not have the correct value. Child with nameInData firstName does not have the correct value. Child with nameInData lastName does not have the correct value. Child with nameInData rating does not have the correct value. |

*!
!2 Clean up created data
!***> Återställ regel everything ska bort

!| Comment |
| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | permissionRule | everything | {"name":"permissionRule","children":[{"name":"recordInfo","children":[{"name":"id","value":"everything"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"permissionRule"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"systemOneUser"},{"name":"linkedRecordId","value":"12345"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"systemOneUser"},{"name":"linkedRecordId","value":"12345"}]},{"name":"tsUpdated","value":"2017-11-01T17:53:01.000000Z"}],"repeatId":"0"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}]},{"name":"tsUpdated","value":"2020-02-20T14:02:28.618994Z"}],"repeatId":"1"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}]},{"name":"tsUpdated","value":"2020-02-20T14:02:34.442936Z"}],"repeatId":"2"}]},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.*","repeatId":"0"}],"attributes":{"type":"action"}},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.*","repeatId":"0"}],"attributes":{"type":"recordType"}},{"name":"activeStatus","value":"active"}]} | | OK |
| $adminAuthToken | permissionRule | textAdmin | {"name":"permissionRule","children":[{"name":"recordInfo","children":[{"name":"id","value":"textAdmin"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"permissionRule"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"systemOneUser"},{"name":"linkedRecordId","value":"131313"}]},{"name":"tsUpdated","value":"2017-11-01T17:53:01.000000Z"}],"repeatId":"0"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}]},{"name":"tsUpdated","value":"2020-02-20T14:24:05.497330Z"}],"repeatId":"1"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}]},{"name":"tsUpdated","value":"2020-02-20T14:24:09.597702Z"}],"repeatId":"2"}]},{"name":"permissionRulePart","children":testWorkoutSearchIncludePartGroup[{"name":"permissionRulePartValue","value":"system.*","repeatId":"0"},{"name":"permissionRulePartValue","value":"system.search","repeatId":"1"}],"attributes":{"type":"action"}},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.text","repeatId":"0"},{"name":"permissionRulePartValue","value":"system.textSystemOne","repeatId":"1"},{"name":"permissionRulePartValue","value":"system.coraText","repeatId":"2"}],"attributes":{"type":"recordType"}},{"name":"activeStatus","value":"active"}]} | | |

*!
!***> Reset, the role everything to not use the new rule, everythingForTestWorkoutRule.

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | permissionRole | everything | {"name":"permissionRole","children":[{"name":"recordInfo","children":[{"name":"id","value":"everything"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"permissionRole"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"systemOneUser"},{"name":"linkedRecordId","value":"12345"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"systemOneUser"},{"name":"linkedRecordId","value":"12345"}]},{"name":"tsUpdated","value":"2017-11-01T17:51:52.000000Z"}],"repeatId":"0"}]},{"name":"permissionRuleLink","children":[{"name":"linkedRecordType","value":"permissionRule"},{"name":"linkedRecordId","value":"everything"}],"repeatId":"0"},{"name":"activeStatus","value":"active"}]} | | OK |

*!
!***> Reset, the role fitnesseTextAdmin to not use the new rule, limitedForTestWorkoutRule.

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | permissionRole | fitnesseTextAdmin | {"children":[{"children":[{"name":"id","value":"fitnesseTextAdmin"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"permissionRole"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"12345"}]},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}],"name":"dataDivider"}],"name":"recordInfo"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"permissionRule"},{"name":"linkedRecordId","value":"textAdmin"}],"name":"permissionRuleLink"},{"repeatId":"1","children":[{"name":"linkedRecordType","value":"permissionRule"},{"name":"linkedRecordId","value":"nothing"}],"name":"permissionRuleLink"},{"name":"activeStatus","value":"active"}],"name":"permissionRole"} | | OK |

*!
!***> Delete newly created rules

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | permissionRule | everythingForTestWorkoutRule | | OK |
| $adminAuthToken | permissionRule | limitedForTestWorkoutRule | | OK |

*!
!***> Clean up created data

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | testWorkout | cirkelfys | | OK |
| $adminAuthToken | testWorkout | cirkelfys1 | | OK |
| $adminAuthToken | testWorkout | cirkelfys2 | | OK |
| $adminAuthToken | testWorkout | cirkelfys3 | | OK |
| $adminAuthToken | testWorkout | cirkelfys4 | | OK |
| $adminAuthToken | search | testWorkoutSearch | | OK |
| $adminAuthToken | search | testWorkoutExtendedSearch | | OK |
| $adminAuthToken | metadataGroup | testWorkoutSearchGroup | | OK |
| $adminAuthToken | metadataGroup | testWorkoutSearchIncludeGroup | | OK |
| $adminAuthToken | metadataGroup | testWorkoutSearchIncludePartGroup | | OK |
| $adminAuthToken | recordType | testWorkout | | OK |
| $adminAuthToken | presentationGroup | testWorkoutGroupPGroup | | OK |
| $adminAuthToken | metadataGroup | testWorkoutGroup | | OK |
| $adminAuthToken | presentationVar | testWorkoutNamePVar | | OK |
| $adminAuthToken | presentationVar | testWorkoutNameOutputPVar | | OK |
| $adminAuthToken | metadataTextVariable | testWorkoutNameTextVar | | OK |
| $adminAuthToken | presentationVar | testInstructorIdPVar | | OK |
| $adminAuthToken | presentationVar | testInstructorIdOutputPVar | | OK |
| $adminAuthToken | metadataTextVariable | testInstructorIdTextVar | | OK |
| $adminAuthToken | presentationVar | testNumOfParticipantsPVar | | OK |
| $adminAuthToken | presentationVar | testNumOfParticipantsOutputPVar | | OK |
| $adminAuthToken | metadataTextVariable | testNumOfParticipantsTextVar | | OK |
| $adminAuthToken | metadataGroup | testInstructorNameGroup | | OK |
| $adminAuthToken | presentationVar | testInstructorFirstNamePVar | | OK |
| $adminAuthToken | presentationVar | testInstructorFirstNameOutputPVar | | OK |
| $adminAuthToken | metadataTextVariable | testInstructorFirstNameTextVar | | OK |
| $adminAuthToken | presentationVar | testInstructorLastNamePVar | | OK |
| $adminAuthToken | presentationVar | testInstructorLastNameOutputPVar | | OK |
| $adminAuthToken | metadataTextVariable | testInstructorLastNameTextVar | | OK |
| $adminAuthToken | metadataGroup | testPopularityGroup | | OK |
| $adminAuthToken | presentationVar | testRatingPVar | | OK |
| $adminAuthToken | presentationVar | testRatingOutputPVar | | OK |
| $adminAuthToken | metadataTextVariable | testRatingTextVar | | OK |
| $adminAuthToken | coraText | fitnesseExampleText | | OK |
| $adminAuthToken | coraText | fitnesseExampleDefText | | OK |

*!
