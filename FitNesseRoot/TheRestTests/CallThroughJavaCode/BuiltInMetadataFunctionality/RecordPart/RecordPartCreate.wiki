---
Static
---
!2 Create
There are a few different cases for create that can happen, when there are write restrictions:

 * '''Case 1''': A user (fitnesseAdmin) has write permission on all restricted data, create as normal
 * A user (fitnesseUser) has write permission on som but not all restricted data, there are three subcases
   * '''Case 2''': Only recordParts that the user has write permissions for is sent to create, create as normal
   * '''Case 3''': Data for recordParts that the user does not have write permission for is sent to create. The write protected parts that the user does not have write permission for, should not be added to the new record, all other data should be added and the record created.
   * '''Case 4a''': Top level, A recordPart that the user does not have write permission for is mandatory (must be present), whether the user sends data for the restricted parts or not does not matter, the end result should be that the record is missing the mandatory restricted data parts and record creation should fail with an error
   * '''Case 4b''': Below top level, A recordPart that the user does not have write permission for is mandatory (must be present), whether the user sends data for the restricted parts or not does not matter, the end result should be that the record is missing the mandatory restricted data parts and record creation should fail with an error

!***> Case 1
!define currentAuthToken {$adminAuthToken}
!-Create a new testWorkout record as fitnesseAdmin, adding unrestricted and all restricted data parts-!

!include -seamless .TheRestTests.CallThroughJavaCode.BuiltInMetadataFunctionality.RecordPart.dataCirkelfysCirkelfys1
!define expectedCreateResult {CREATED}
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action read_incoming_links is missing.}
!define expectedPermissionResult {OK}
!include -seamless .HelperPages.createCheckReadCheck

*!
!***> Case 2
***************************
!define currentAuthToken {$userAuthToken}
!-Create a new testWorkout record as fitnesseUser, adding restricted part numOfParticipants, that it has write permission for, making sure it is in the created record-!

!include -seamless .TheRestTests.CallThroughJavaCode.BuiltInMetadataFunctionality.RecordPart.dataCirkelfysCirkelfys2
!define expectedCreateResult {CREATED}
!define expectedAnswer {}
!define expectedCompareResult {OK}
!define expectedActionResult {Action delete is missing. Action index is missing. Action read_incoming_links is missing.}
!define expectedPermissionResult {Read permission personNumber is missing. Read permission popularity is missing. Write permission instructorId is missing. Write permission instructorName is missing. Write permission firstName is missing. Write permission personNumber is missing. Write permission popularity is missing. Write permission city is missing. Write permission country is missing.}
!include -seamless .HelperPages.createCheckReadCheck
***************************
Create a new testWorkout record as fitnesseUser, adding restricted part numOfParticipants, that it has write permission for, making sure it is in the created record

!| ChildComparerFixture |
| authToken | type | json | testCreateAndStoreRecord? | getStatusType? |
| $userAuthToken | testWorkout | {"name":"workout","children":[{"name":"recordInfo","children":[{"name":"id","value":"cirkelfys2"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testWorkout"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"tsCreated","value":"2018-08-29T14:27:20.307000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"tsUpdated","value":"2018-08-29T14:27:20.307000Z"}],"repeatId":"45"}]},{"name":"workoutName","value":"cirkelfys"},{"name":"numOfParticipants","value":"45"},{"name":"city","value":"Uppsala"},{"name":"country","value":"Sweden"}]} | | CREATED |

Validate the '''response''' returned on the create call contains the expected record parts.

!| ChildComparerFixture |
| children | testCheckContainWithValues? |
| {"children":[{"type":"atomic","name":"workoutName","value":"cirkelfys"},{"type":"atomic","name":"numOfParticipants","value":"45"},{"type":"atomic","name":"city","value":"Uppsala"},{"type":"atomic","name":"country","value":"Sweden"}]} | OK |

Validate by reading the stored record again. Make sure all added data parts are in the created record, unrestricted (workoutName) and restricted (numOfParticipants)

!| ChildComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContainWithValues? |
| $adminAuthToken | testWorkout | cirkelfys2 | {"children":[{"type":"atomic","name":"workoutName","value":"cirkelfys"},{"type":"atomic","name":"numOfParticipants","value":"45"},{"type":"atomic","name":"city","value":"Uppsala"},{"type":"atomic","name":"country","value":"Sweden"}]} | | OK |

*!
!***> Case 3
Create a new testWorkout record as fitnesseUser, adding restricted part numOfParticipants and instructorId, that it has write permission for, making sure it is in the created record

no write for instructorId should not be in record

!| ChildComparerFixture |
| authToken | type | json | testCreateAndStoreRecord? | getStatusType? |
| $userAuthToken | testWorkout | {"name":"workout","children":[{"name":"recordInfo","children":[{"name":"id","value":"cirkelfys3"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testWorkout"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"tsCreated","value":"2018-08-29T14:27:20.307000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"tsUpdated","value":"2018-08-29T14:27:20.307000Z"}],"repeatId":"45"}]},{"name":"workoutName","value":"cirkelfys"},{"name":"numOfParticipants","value":"45"},{"name":"instructorId","value":"3564"},{"name":"instructorName","children":[{"name":"firstName","value":"Anna"},{"name":"lastName","value":"Ledare"}]},{"name":"popularity","children":[{"name":"rating","value":"4"}]},{"name":"city","value":"Uppsala"},{"name":"country","value":"Sweden"}]} | | CREATED |

Validate the '''response''' returned on the create call contains the expected record parts.

!| ChildComparerFixture |
| children | testCheckContainWithValues? |
| {"children":[{"type":"atomic","name":"workoutName","value":"cirkelfys"},{"type":"atomic","name":"numOfParticipants","value":"45"},{"type":"atomic","name":"city","value":"Uppsala"},{"type":"atomic","name":"country","value":"Sweden"}]} | OK |

Validate by reading the stored record again. Make sure all added data parts that the user has permission to write, are in the created record, unrestricted (workoutName) and restricted (numOfParticipants)

!| ChildComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContainWithValues? |
| $adminAuthToken | testWorkout | cirkelfys3 | {"children":[{"type":"atomic","name":"workoutName","value":"cirkelfys"},{"type":"atomic","name":"numOfParticipants","value":"45"},{"type":"atomic","name":"city","value":"Uppsala"},{"type":"atomic","name":"country","value":"Sweden"}]} | | OK |

Make sure added data parts that the user does NOT have permission to write,  are NOT present in the created record restricted  (instructorId, instructorName)

!| ChildComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContain? |
| $adminAuthToken | testWorkout | cirkelfys3 | {"children":[{"name":"instructorId"},{"name":"instructorName"},{"name":"popularity"}]} | | Child with nameInData instructorId is missing. Child with nameInData instructorName is missing. Child with nameInData popularity is missing. |

*!
!***> Case 4

!include -seamless <RecordPart.RecordPartRemoveWritePermissionOnNumOfParticipants
Create a new testWorkout record as fitnesseUser, adding restricted part numOfParticipants and instructorId, that it has write permission for, making sure it is in the created record

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $userAuthToken | testWorkout | {"name":"workout","children":[{"name":"recordInfo","children":[{"name":"id","value":"cirkelfys"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testWorkout"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"tsCreated","value":"2018-08-29T14:27:20.307000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"tsUpdated","value":"2018-08-29T14:27:20.307000Z"}],"repeatId":"45"}]},{"name":"workoutName","value":"cirkelfys"},{"name":"instructorId","value":"3564"},{"name":"instructorName","children":[{"name":"firstName","value":"Anna"},{"name":"lastName","value":"Ledare"}]},{"name":"popularity","children":[{"name":"rating","value":"4"}]},{"name":"city","value":"Uppsala"},{"name":"country","value":"Sweden"}]} | Data is not valid: [Did not find enough data children with referenceId: testNumOfParticipantsTextVar(with nameInData:numOfParticipants.] | BAD_REQUEST |

!include -seamless <RecordPart.RecordPartReturnWritePermissionOnNumOfParticipants
*!
!***> Clean up no longer needed cirkelfys2 and cirkelfys3

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | testWorkout | cirkelfys2 | | OK |
| $adminAuthToken | testWorkout | cirkelfys3 | | OK |

*!
