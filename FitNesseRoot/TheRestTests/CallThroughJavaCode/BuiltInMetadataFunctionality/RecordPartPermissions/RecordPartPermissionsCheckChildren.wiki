---
Test
---
!contents -R2 -g -p -f -h
!include -c <RecordPartPermissions.RecordPartPermissionsSetUp
| import |
| se.uu.ub.cora.fitnesseintegration |
| se.uu.ub.cora.fitnesseintegration.compare |

!2 Record part permissions
Det ska vara möjligt att i en post, för ett barn på översta nivån, säga  att barnet kräver läs- och/eller skrivrättighet. När en post returneras  från servern ska den bara innehålla de barn som användaren har rätt att läsa. Vid uppdatering ska endast de barn
som användaren har rätt att skriva uppdateras. 
I ett  tidigare steg (en inkluderad sida) har vi skapat metadata för att kunna  skapa, läsa, uppdatera, lista och söka efter poster av typen  testWorkout. I testerna nedan så visar vi på olika sätt att posten  bara innehåller de barn som den
aktuella användaren har, och att användaren bara får uppdatera värden för de barn som de har skrivrättighet för.

!***> Skapa en instans av posttypen workout, som vi skapat metadata för

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | testWorkout | {"name":"workout","children":[{"name":"recordInfo","children":[{"name":"id","value":"cirkelfys"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]}]},{"name":"workoutName","value":"cirkelfys"},{"name":"numOfParticipants","value":"45"},{"name":"instructorId","value":"3564"},{"name":"instructorName","children":[{"name":"firstName","value":"Anna"},{"name":"lastName","value":"Ledare"}]},{"name":"popularity","children":[{"name":"rating","value":"4"}]}]} | | CREATED |

*!
!2 Läs
!***> Läs posten cirkelfys och se att posten innehåller de barn som fitnesseUser har rätt att läsa

!| ChildComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContain? |
| $userAuthToken | testWorkout | cirkelfys | {"children":[{"name":"recordInfo"}, {"name":"workoutName"},{"name":"numOfParticipants"},{"name":"instructorName"}]} | | OK |

*!
!***> Läs posten cirkelfys och se att posten INTE innehåller de barn som fitnesseUser inte har rätt att läsa

!| ChildComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContain? |
| $userAuthToken | testWorkout | cirkelfys | {"children":[{"name":"instructorId"},{"name":"popularity"}]} | | Child with nameInData popularity is missing. |

*!
!***> Läs posten cirkelfys som fitnesse admin och se att posten innehåller de barn som fitnesseAdmin har rätt att läsa

!| ChildComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContain? |
| $adminAuthToken | testWorkout | cirkelfys | {"children":[{"name":"workoutName"},{"name":"instructorId"},{"name":"numOfParticipants"},{"name":"instructorName"},{"name":"popularity"}]} | | OK |

*!
!2 Skriv
Vi uppdaterar en post först med den användare om får uppdatera alla fält. Vi läser den sen och ser att datat är uppdaterat. Därefter försöker vi uppdatera posten med den användaren som INTE har rätt att uppdatera alla fält, för att sedan läsa

posten igen och se att fälten INTE är uppdaterade.

!***> Uppdatera en testWorkout-posten som fitnesseAdmin

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | testWorkout | cirkelfys | {"name":"workout","children":[{"name":"recordInfo","children":[{"name":"id","value":"cirkelfys"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testWorkout"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"tsCreated","value":"2018-08-29T14:27:20.307000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"tsUpdated","value":"2018-08-29T14:27:20.307000Z"}],"repeatId":"1"}]},{"name":"workoutName","value":"cirkelfys"},{"name":"numOfParticipants","value":"30"},{"name":"instructorId","value":"6666"},{"name":"instructorName","children":[{"name":"firstName","value":"Emma"},{"name":"lastName","value":"Instruktör"}]},{"name":"popularity","children":[{"name":"rating","value":"8"}]}]} | | OK |

*!
!***> Läs posten cirkelfys och se att posten innehåller uppdaterade värden för alla fält

!| ChildComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContainWithValues? |
| $adminAuthToken | testWorkout | cirkelfys | {"children":[{"type":"atomic","name":"workoutName","value":"cirkelfys"},{"type":"atomic","name":"instructorId","value":"6666"},{"type":"atomic","name":"numOfParticipants","value":"30"},{"type":"group","name":"instructorName","children":[{"type":"atomic","name":"firstName","value":"Emma"},{"type":"atomic","name":"lastName","value":"Instruktör"}]},{"type":"group","name":"popularity","children":[{"type":"atomic","name":"rating","value":"8"}]}]} | | OK |

*!
!***> Uppdatera en testWorkout-posten som fitnesseUser, vilken inte har rätt att uppdatera alla fält

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $userAuthToken | testWorkout | cirkelfys | {"name":"workout","children":[{"name":"recordInfo","children":[{"name":"id","value":"cirkelfys"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testWorkout"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"tsCreated","value":"2018-08-29T14:27:20.307000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"tsUpdated","value":"2018-08-29T14:27:20.307000Z"}],"repeatId":"1"}]},{"name":"workoutName","value":"cirkelfys"},{"name":"numOfParticipants","value":"3000"},{"name":"instructorId","value":"123456"},{"name":"instructorName","children":[{"name":"firstName","value":"Rut-Emma"},{"name":"lastName","value":"Projektledare"}]},{"name":"popularity","children":[{"name":"rating","value":"0"}]}]} | | OK |

*!
I children-kolumnen i första raden anger vi de värden som vi försökte uppdatera till. Eftersom fitnesseUser inte får uppdatera dessa fält så förväntar vi oss ett meddelande om fel värden i testReadCheckContainWithValues-kolumnen.

I andra raden anger vi de gamla värdena i children-kolumnen, de som fitnesseAdmin uppdaterade till tidigare. Där förväntar vi oss svaret OK.

!***> Läs posten cirkelfys och se att posten INTE innehåller uppdaterade värden för alla fält

!| ChildComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContainWithValues? |
| $adminAuthToken | testWorkout | cirkelfys | {"children":[{"type":"atomic","name":"workoutName","value":"cirkelfys"},{"type":"atomic","name":"instructorId","value":"123456"},{"type":"atomic","name":"numOfParticipants","value":"3000"},{"type":"group","name":"instructorName","children":[{"type":"atomic","name":"firstName","value":"Rut-Emma"},{"type":"atomic","name":"lastName","value":"Projektledare"}]},{"type":"group","name":"popularity","children":[{"type":"atomic","name":"rating","value":"0"}]}]} | | Child with nameInData instructorId does not have the correct value. Child with nameInData numOfParticipants does not have the correct value. Child with nameInData firstName does not have the correct value. Child with nameInData lastName does not have the correct value. Child with nameInData rating does not have the correct value. |
| $adminAuthToken | testWorkout | cirkelfys | {"children":[{"type":"atomic","name":"workoutName","value":"cirkelfys"},{"type":"atomic","name":"instructorId","value":"6666"},{"type":"atomic","name":"numOfParticipants","value":"30"},{"type":"group","name":"instructorName","children":[{"type":"atomic","name":"firstName","value":"Emma"},{"type":"atomic","name":"lastName","value":"Instruktör"}]},{"type":"group","name":"popularity","children":[{"type":"atomic","name":"rating","value":"8"}]}]} | | OK |

*!
Om man inte har rätt att skriva delar av en post så ska det vara möjligt att skicka in en post utan de fälten, även om de är obligatoriska. De delar av posten som man inte får skriva hämtas från den tidigare!-
-!lagrade posten.

!***> Uppdatera en testWorkout-posten som fitnesseUser, utan  alla obligatoriska fält

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $userAuthToken | testWorkout | cirkelfys | {"name":"workout","children":[{"name":"recordInfo","children":[{"name":"id","value":"cirkelfys"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testWorkout"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"tsCreated","value":"2018-08-29T14:27:20.307000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"tsUpdated","value":"2018-08-29T14:27:20.307000Z"}],"repeatId":"1"}]},{"name":"workoutName","value":"cirkelfys"},{"name":"instructorName","children":[{"name":"firstName","value":"Rut-Emma"},{"name":"lastName","value":"Projektledare"}]},{"name":"popularity","children":[{"name":"rating","value":"0"}]}]} | | OK |

*!
!2 Lista poster
Om man listar poster så ska varje post i listan bara innehålla det data som användaren har rätt att läsa

!***> Lists testWorkouts och lagra resultatet för att användas i test nedan, admin

!| ChildComparerFixture |
| authToken | type | testReadRecordListAndStoreRecords? |
| $adminAuthToken | testWorkout | |

*!
!***> Kontrollera barnen i den tidigare upplästa listan, admin

!| ChildComparerFixture |
| type | children | listIndexToCompareTo | testReadFromListCheckContain? |
| testWorkout | {"children":[{"name":"instructorId"},{"name":"popularity"}]} | 0 | OK |

*!
!***> Lists testWorkouts och lagra resultatet för att användas i test nedan, user

!| ChildComparerFixture |
| authToken | type | testReadRecordListAndStoreRecords? |
| $userAuthToken | testWorkout | |

*!
!***> Kontrollera barnen i den tidigare upplästa listan, user

!| ChildComparerFixture |
| type | children | listIndexToCompareTo | testReadFromListCheckContain? |
| testWorkout | {"children":[{"name":"instructorId"},{"name":"popularity"}]} | 0 | Child with nameInData popularity is missing. |

*!
!2 Sök poster
När man söker efter poster ska varje post i resultatet bara innehålla det data som användaren har rätt att läsa

!***> Sök efter testWorkouts och lagra resultatet för att användas i test nedan

!| ChildComparerFixture |
| authToken | searchId | json | testSearchAndStoreRecords? |
| $userAuthToken | testWorkoutExtendedSearch | {"name":"searchTestWorkoutExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"recordIdSearchTerm","value":"**"}]}]}]} | |

*!
!***> Kontrollera barnen i resultatet av den tidigare gjorda sökningen

!| ChildComparerFixture |
| type | children | listIndexToCompareTo | testReadFromListCheckContain? |
| testWorkout | {"children":[{"name":"instructorId"},{"name":"popularity"}]} | 0 | Child with nameInData popularity is missing. |

*!
!2 Skriv - bara skrivbegränsning
!***> Uppdatera metadatagruppen så att barnen bara har skrivbegränsningar

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | metadataGroup | testWorkoutGroup | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"id","value":"testWorkoutGroup"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"metadataGroup"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"name":"tsCreated","value":"2019-09-10T08:52:03.098000Z"}]},{"name":"nameInData","value":"workout"},{"name":"childReferences","children":[{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataGroup"},{"name":"linkedRecordId","value":"recordInfoGroup"}]}],"repeatId":"5"},{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataTextVariable"},{"name":"linkedRecordId","value":"testWorkoutNameTextVar"}]}],"repeatId":"0"},{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataTextVariable"},{"name":"linkedRecordId","value":"testInstructorIdTextVar"}]},{"name":"recordPartConstraint","value":"write"}],"repeatId":"1"},{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataTextVariable"},{"name":"linkedRecordId","value":"testNumOfParticipantsTextVar"}]},{"name":"recordPartConstraint","value":"write"}],"repeatId":"2"},{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataGroup"},{"name":"linkedRecordId","value":"testInstructorNameGroup"}]},{"name":"recordPartConstraint","value":"write"}],"repeatId":"3"},{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadataGroup"},{"name":"linkedRecordId","value":"testPopularityGroup"}]},{"name":"recordPartConstraint","value":"write"}],"repeatId":"4"}]},{"name":"textId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleText"}]},{"name":"defTextId","children":[{"name":"linkedRecordType","value":"coraText"},{"name":"linkedRecordId","value":"fitnesseExampleDefText"}]},{"name":"excludePGroupCreation","value":"true"}],"attributes":{"type":"group"}} | | OK |

*!
!***> Uppdatera en testWorkout-posten som fitnesseUser, vilken inte har rätt att uppdatera alla fält

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $userAuthToken | testWorkout | cirkelfys | {"name":"workout","children":[{"name":"recordInfo","children":[{"name":"id","value":"cirkelfys"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testWorkout"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"tsCreated","value":"2018-08-29T14:27:20.307000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"141414"}]},{"name":"tsUpdated","value":"2018-08-29T14:27:20.307000Z"}],"repeatId":"1"}]},{"name":"workoutName","value":"cirkelfys"},{"name":"numOfParticipants","value":"99999"},{"name":"instructorId","value":"666"},{"name":"instructorName","children":[{"name":"firstName","value":"Ingen"},{"name":"lastName","value":"LedareAlls"}]},{"name":"popularity","children":[{"name":"rating","value":"-9"}]}]} | | OK |

*!
!***> Läs posten cirkelfys och se att posten INTE innehåller uppdaterade värden för alla fält

!| ChildComparerFixture |
| authToken | type | id | children | testReadAndStoreRecord? | testCheckContainWithValues? |
| $adminAuthToken | testWorkout | cirkelfys | {"children":[{"type":"atomic","name":"workoutName","value":"cirkelfys"},{"type":"atomic","name":"instructorId","value":"666"},{"type":"atomic","name":"numOfParticipants","value":"99999"},{"type":"group","name":"instructorName","children":[{"type":"atomic","name":"firstName","value":"Ingen"},{"type":"atomic","name":"lastName","value":"LedareAlls"}]},{"type":"group","name":"popularity","children":[{"type":"atomic","name":"rating","value":"-9"}]}]} | | Child with nameInData instructorId does not have the correct value. Child with nameInData numOfParticipants does not have the correct value. Child with nameInData firstName does not have the correct value. Child with nameInData lastName does not have the correct value. Child with nameInData rating does not have the correct value. |

*!
!2 Clean up created data
!***> Återställ regel everything

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | permissionRule | everything | {"name":"permissionRule","children":[{"name":"recordInfo","children":[{"name":"id","value":"everything"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"permissionRule"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"systemOneUser"},{"name":"linkedRecordId","value":"12345"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"systemOneUser"},{"name":"linkedRecordId","value":"12345"}]},{"name":"tsUpdated","value":"2017-11-01T17:53:01.000000Z"}],"repeatId":"0"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}]},{"name":"tsUpdated","value":"2020-02-20T14:02:28.618994Z"}],"repeatId":"1"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}]},{"name":"tsUpdated","value":"2020-02-20T14:02:34.442936Z"}],"repeatId":"2"}]},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.*","repeatId":"0"}],"attributes":{"type":"action"}},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.*","repeatId":"0"}],"attributes":{"type":"recordType"}},{"name":"activeStatus","value":"active"}]} | | OK |
| $adminAuthToken | permissionRule | textAdmin | {"name":"permissionRule","children":[{"name":"recordInfo","children":[{"name":"id","value":"textAdmin"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"permissionRule"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"systemOneUser"},{"name":"linkedRecordId","value":"131313"}]},{"name":"tsUpdated","value":"2017-11-01T17:53:01.000000Z"}],"repeatId":"0"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}]},{"name":"tsUpdated","value":"2020-02-20T14:24:05.497330Z"}],"repeatId":"1"},{"name":"updated","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}]},{"name":"tsUpdated","value":"2020-02-20T14:24:09.597702Z"}],"repeatId":"2"}]},{"name":"permissionRulePart","children":testWorkoutSearchIncludePartGroup[{"name":"permissionRulePartValue","value":"system.*","repeatId":"0"},{"name":"permissionRulePartValue","value":"system.search","repeatId":"1"}],"attributes":{"type":"action"}},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.text","repeatId":"0"},{"name":"permissionRulePartValue","value":"system.textSystemOne","repeatId":"1"},{"name":"permissionRulePartValue","value":"system.coraText","repeatId":"2"}],"attributes":{"type":"recordType"}},{"name":"activeStatus","value":"active"}]} | | |

*!
!***> Clean up created data

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | testWorkout | cirkelfys | | OK |
| $adminAuthToken | search | testWorkoutSearch | | OK |
| $adminAuthToken | search | testWorkoutExtendedSearch | | OK |
| $adminAuthToken | metadataGroup | testWorkoutSearchGroup | | OK |
| $adminAuthToken | metadataGroup | testWorkoutSearchIncludeGroup | | OK |
| $adminAuthToken | metadataGroup | testWorkoutSearchIncludePartGroup | | OK |
| $adminAuthToken | recordType | testWorkout | | OK |
| $adminAuthToken | presentationGroup | testWorkoutGroupPGroup | | OK |
| $adminAuthToken | metadataGroup | testWorkoutGroup | | OK |
| $adminAuthToken | metadataGroup | testWorkoutNewGroup | | OK |
| $adminAuthToken | presentationVar | testWorkoutNamePVar | | OK |
| $adminAuthToken | presentationVar | testWorkoutNameOutputPVar | | OK |
| $adminAuthToken | metadataTextVariable | testWorkoutNameTextVar | | OK |
| $adminAuthToken | presentationVar | testInstructorIdPVar | | OK |
| $adminAuthToken | presentationVar | testInstructorIdOutputPVar | | OK |
| $adminAuthToken | metadataTextVariable | testInstructorIdTextVar | | OK |
| $adminAuthToken | presentationVar | testNumOfParticipantsPVar | | OK |
| $adminAuthToken | presentationVar | testNumOfParticipantsOutputPVar | | OK |
| $adminAuthToken | metadataTextVariable | testNumOfParticipantsTextVar | | OK |
| $adminAuthToken | metadataGroup | testInstructorNameGroup | | OK |
| $adminAuthToken | presentationVar | testInstructorFirstNamePVar | | OK |
| $adminAuthToken | presentationVar | testInstructorFirstNameOutputPVar | | OK |
| $adminAuthToken | metadataTextVariable | testInstructorFirstNameTextVar | | OK |
| $adminAuthToken | presentationVar | testInstructorLastNamePVar | | OK |
| $adminAuthToken | presentationVar | testInstructorLastNameOutputPVar | | OK |
| $adminAuthToken | metadataTextVariable | testInstructorLastNameTextVar | | OK |
| $adminAuthToken | metadataGroup | testPopularityGroup | | OK |
| $adminAuthToken | presentationVar | testRatingPVar | | OK |
| $adminAuthToken | presentationVar | testRatingOutputPVar | | OK |
| $adminAuthToken | metadataTextVariable | testRatingTextVar | | OK |
| $adminAuthToken | coraText | fitnesseExampleText | | OK |
| $adminAuthToken | coraText | fitnesseExampleDefText | | OK |

*!
