!contents -R2 -g -p -f -h
| import |
| se.uu.ub.cora.fitnesse |

!1 !-BinaryTest-!
A test that first reads all predefined metadata needed to be able to add binary data to the system, and then tests adding and updating images.

!2 Read metadata defined in code to make sure it is correct
!***> Read textVariables (streamIdTextVar, filenameTextVar, filesizeTextVar, mimeTypeTextVar)

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | metadataTextVariable | streamIdTextVar | | OK |
| $adminAuthToken | metadataTextVariable | filenameTextVar | | OK |
| $adminAuthToken | metadataTextVariable | filesizeTextVar | | OK |
| $adminAuthToken | metadataTextVariable | mimeTypeTextVar | | OK |

*!
!***> Read metadataGroups (recordInfoBinaryGroup, binaryGroup, imageNewGroup, imageGroup, soundNewGroup, soundGroup, metadataGroupForResourceLinkGroup, resourceInfoGroup)

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | metadataGroup | binaryGroup | =~/"name":"linkedRecordId","value":"resourceInfoGroup"/ | OK |
| $adminAuthToken | metadataGroup | recordInfoCoraAutogeneratedNewGroup | =~/"name":"linkedRecordId","value":"dataDividerCoraLink"/ | OK |
| $adminAuthToken | metadataGroup | imageNewGroup | | OK |
| $adminAuthToken | metadataGroup | imageGroup | | OK |
| $adminAuthToken | metadataGroup | soundNewGroup | | OK |
| $adminAuthToken | metadataGroup | soundGroup | | OK |
| $adminAuthToken | metadataGroup | metadataGroupForResourceLinkGroup | =~/"name":"linkedRecordId","value":"streamIdTextVar"/ | OK |
| $adminAuthToken | metadataGroup | resourceInfoGroup | | OK |

*!
!***> Read metadataResourceLink (masterResLink)

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | metadataResourceLink | masterResLink | | OK |

*!
!***> Read recordType (binary, image, sound)

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | recordType | binary | | OK |
| $adminAuthToken | recordType | image | | OK |
| $adminAuthToken | recordType | sound | | OK |

*!
!2 Test with new image
!***> Create data of recordType image (autogeneratedId)

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? | getCreatedId? |
| $adminAuthToken | image | {"name":"binary","children":[{"name":"recordInfo","children":[{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}],"name":"dataDivider"}]}],"attributes":{"type":"image"}} | | CREATED | $createdId= |

*!
!***> Read image

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | image | $createdId | =~/"name":"id","value":"$createdId"/ | OK |

*!
!***> Update data of recordType image

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | image | $createdId | {"name":"binary","children":[{"children":[{"name":"id","value":"$createdId"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}],"name":"dataDivider"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"image"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}]}],"name":"recordInfo"}],"attributes":{"type":"image"}} | | OK |

*!
!***> Upload image

(Uses a stream generated at the server)

!| RecordEndpointFixture |
| authToken | type | id | fileName | testUpload? | getStatusType? | getStreamId? |
| $adminAuthToken | image | $createdId | adele.png | | OK | $streamId= |

*!
!***> Read image

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | image | $createdId | | OK |

*!
!***> Download image

(Uses a stream generated at the server)

!| RecordEndpointFixture |
| authToken | type | id | resourceName | testDownload? | getContentLength? | getContentDisposition? | getStatusType? |
| $adminAuthToken | image | $createdId | master | | 8 | attachment; filename=adele.png | OK |

*!
!***> List data(binary, image, sound)

!| RecordEndpointFixture |
| type | testReadRecordList? | getStatusType? |
| binary | | OK |
| image | | OK |

*!
!***> Clean up created data

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | image | $createdId | | OK |

*!
!2 Test with new sound
!***> Create data of recordType sound (autogeneratedId)

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? | getCreatedId? |
| $adminAuthToken | sound | {"name":"binary","children":[{"name":"recordInfo","children":[{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}],"name":"dataDivider"}]}],"attributes":{"type":"sound"}} | | CREATED | $createdId= |

*!
!***> Read sound

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | sound | $createdId | | OK |

*!
!***> Update data of recordType sound

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | sound | $createdId | {"name":"binary","children":[{"children":[{"name":"id","value":"$createdId"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}],"name":"dataDivider"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"sound"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}]}],"name":"recordInfo"}],"attributes":{"type":"sound"}} | | OK |

*!
!***> Upload sound

(Uses a stream generated at the server)

!| RecordEndpointFixture |
| authToken | type | id | fileName | testUpload? | getStatusType? | getStreamId? |
| $adminAuthToken | sound | $createdId | adele.png | | OK | $streamId= |

*!
!***> Read sound

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | sound | $createdId | | OK |

*!
!***> Download sound

(Uses a stream generated at the server)

!| RecordEndpointFixture |
| authToken | type | id | resourceName | testDownload? | getContentLength? | getContentDisposition? | getStatusType? |
| $adminAuthToken | sound | $createdId | master | | 8 | attachment; filename=adele.png | OK |

*!
!***> List data(binary, image, sound)

!| RecordEndpointFixture |
| type | testReadRecordList? | getStatusType? |
| binary | | OK |
| sound | | OK |

*!
!***> Clean up created data

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | sound | $createdId | | OK |

*!
