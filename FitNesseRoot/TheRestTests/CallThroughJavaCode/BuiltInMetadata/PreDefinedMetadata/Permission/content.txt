!contents -R2 -g -p -f -h
| import |
| se.uu.ub.cora.fitnesse |

!1 !-PermissionTest-!
A test that first reads all predefined metadata needed to be able to create permission rules and roles, and then tests adding and updating rules and roles.

!2 Read predefined metadata to make sure it is correct
!***> Read metadataGroups for persmissionRuleParts(permissionRulePartGroup, permissionRulePartActionGroup, permissionRulePartRecordTypeGroup, permissionRulePartPublishGroup, permissionRulePartDeleteGroup)

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | metadataGroup | permissionRulePartGroup | =~/"name":"linkedRecordId","value":"permissionRulePartValueTextVar"/ | OK |
| $adminAuthToken | metadataGroup | permissionRulePartActionGroup | =~/"name":"linkedRecordId","value":"permissionRulePartValueTextVar"/ | OK |
| $adminAuthToken | metadataGroup | permissionRulePartRecordTypeGroup | =~/"name":"linkedRecordId","value":"permissionRulePartValueTextVar"/ | OK |
| $adminAuthToken | metadataGroup | permissionRulePartPublishGroup | =~/"name":"linkedRecordId","value":"permissionRulePartValueTextVar"/ | OK |
| $adminAuthToken | metadataGroup | permissionRulePartDeleteGroup | =~/"name":"linkedRecordId","value":"permissionRulePartValueTextVar"/ | |

*!
!***> Read metadataGroups for persmissionRule and permissionRole (permissionRuleNewGroup, permissionRuleGroup, permissionRoleNewGroup, permissionRoleGroup)

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | metadataGroup | permissionRuleNewGroup | =~/"name":"linkedRecordId","value":"permissionRulePartActionGroup"/ | OK |
| $adminAuthToken | metadataGroup | permissionRuleGroup | =~/"name":"linkedRecordId","value":"activeStatusCollectionVar"/ | OK |
| $adminAuthToken | metadataGroup | permissionRoleNewGroup | =~/"name":"linkedRecordId","value":"permissionRuleLink"/ | OK |
| $adminAuthToken | metadataGroup | permissionRoleGroup | | OK |

*!
!***> Read collectionVars (masterResLink)

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | metadataCollectionVariable | activeStatusCollectionVar | =~/"name":"linkedRecordId","value":"activeStatusItemCollection"/ | OK |
| $adminAuthToken | metadataCollectionVariable | permissionRulePartTypeCollectionVar | =~/"name":"linkedRecordId","value":"permissionRulePartTypeItemCollection"/ | OK |
| $adminAuthToken | metadataCollectionVariable | permissionRulePartTypeActionCollectionVar | | OK |
| $adminAuthToken | metadataCollectionVariable | permissionRulePartTypeRecordTypeCollectionVar | | OK |
| $adminAuthToken | metadataCollectionVariable | permissionRulePartTypePublishCollectionVar | | OK |
| $adminAuthToken | metadataCollectionVariable | permissionRulePartTypeDeleteCollectionVar | | OK |

*!
!***> Read recordType (permissionRule, permissionRole)

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | recordType | permissionRule | | OK |
| $adminAuthToken | recordType | permissionRole | | OK |

*!
!2 Test with new permissionRule
!***> Create data of recordType permissionRule

!| RecordEndpointFixture |
| authToken | type | id | json | testCreateRecordCreatedType? | getStatusType? |
| $adminAuthToken | permissionRule | myPermissionRule | {"name":"permissionRule","children":[{"name":"recordInfo","children":[{"name":"id","value":"myPermissionRule"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]}]},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.read","repeatId":"0"}],"attributes":{"type":"action"}},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.book","repeatId":"0"}],"attributes":{"type":"recordType"}},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.deleted","repeatId":"0"}],"attributes":{"type":"delete"}},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.published","repeatId":"0"}],"attributes":{"type":"publish"}},{"name":"activeStatus","value":"active"}]} | permissionRule | CREATED |

*!
!***> Read permissionRule

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | permissionRule | myPermissionRule | | OK |

*!
!***> Update data of recordType permissionRule

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | permissionRule | myPermissionRule | {"name":"permissionRule","children":[{"name":"recordInfo","children":[{"name":"id","value":"myPermissionRule"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"permissionRule"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]}]},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.read","repeatId":"0"}],"attributes":{"type":"action"}},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.book","repeatId":"0"}],"attributes":{"type":"recordType"}},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.deleted","repeatId":"0"}],"attributes":{"type":"delete"}},{"name":"permissionRulePart","children":[{"name":"permissionRulePartValue","value":"system.unpublished","repeatId":"0"}],"attributes":{"type":"publish"}},{"name":"activeStatus","value":"active"}]} | | OK |

*!
!***> List data(permissionRule)

!| RecordEndpointFixture |
| authToken | type | testReadRecordList? | getStatusType? |
| $adminAuthToken | permissionRule | | OK |

*!
!2 Test with new permissionRole
!***> Create data of recordType permissionRole

!| RecordEndpointFixture |
| authToken | type | id | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | permissionRole | myPermissionRole | {"name":"permissionRole","children":[{"name":"recordInfo","children":[{"name":"id","value":"myPermissionRole"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]}]},{"name":"permissionRuleLink","children":[{"name":"linkedRecordType","value":"permissionRule"},{"name":"linkedRecordId","value":"myPermissionRule"}],"repeatId":"0"},{"name":"activeStatus","value":"active"}]} | | CREATED |

*!
!***> Read permissionRole

!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| $adminAuthToken | permissionRole | myPermissionRole | =~/"name":"activeStatus","value":"active"/ | OK |

*!
!***> Update data of recordType permissionRole

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | permissionRole | myPermissionRole | {"name":"permissionRole","children":[{"name":"recordInfo","children":[{"name":"id","value":"myPermissionRole"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"permissionRole"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]}]},{"name":"permissionRuleLink","children":[{"name":"linkedRecordType","value":"permissionRule"},{"name":"linkedRecordId","value":"myPermissionRule"}],"repeatId":"0"},{"name":"activeStatus","value":"inactive"}]} | =~/"name":"activeStatus","value":"inactive"/ | OK |

*!
!***> List data(permissionRole)

!| RecordEndpointFixture |
| authToken | type | testReadRecordList? | getStatusType? |
| $adminAuthToken | permissionRole | | OK |

*!
!2 Clean up created data
!***> Clean up created data

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | permissionRole | myPermissionRole | | OK |
| $adminAuthToken | permissionRule | myPermissionRule | | OK |

*!
