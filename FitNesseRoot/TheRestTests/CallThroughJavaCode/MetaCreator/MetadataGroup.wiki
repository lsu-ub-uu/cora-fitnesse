---
Test
---
!contents -R2 -g -p -f -h
| import |
| se.uu.ub.cora.fitnesseintegration |

!1 Testing metacompleter and creator for metadataGroup
If text ids are not provided when creating a metadataGroup, the text ids are added and the texts are created in storage if they do not already exist.

Read texts to make sure they do not exist

!***> Read fitnesseBookGroupText and fitnesseBookGroupDefText

!| RecordEndpointFixture |
| id | type | testReadRecord? | getStatusType? |
| fitnesseBookGroupText | coraText | | NOT_FOUND |
| fitnesseBookGroupDefText | coraText | | NOT_FOUND |

*!
When a metadataGroup is created, two presentationGroups are automatically created, one for input and one for output.

Read pGroups to make sure they do not exist

!***> Read fitnesseBookPGroup and fitnesseBookOutputPGroup

!| RecordEndpointFixture |
| id | type | testReadRecord? | getStatusType? |
| fitnesseBookPGroup | presentationGroup | | NOT_FOUND |
| fitnesseBookOutputPGroup | presentationGroup | | NOT_FOUND |

*!
!2 
!2 Create a new metadataGroup
!***> Create a new metadataGroup (fitnesseBookGroup)

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadataGroup | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"id","value":"fitnesseBookGroup"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"nameInData","value":"fitnesseBook"},{"name":"childReferences","children":[{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"recordInfoGroup"}]}],"repeatId":"0"}]}],"attributes":{"type":"group"}} | | CREATED |

*!
Read fitnesseBookGroup to see that links to texts have been added to the metadata

!***> Read fitnesseBookGroup

!| RecordEndpointFixture |
| id | type | testReadRecord? | getStatusType? |
| fitnesseBookGroup | metadataGroup | =~/"name":"linkedRecordId","value":"fitnesseBookGroupText".*"name":"textId".*"name":"linkedRecordId","value":"fitnesseBookGroupDefText".*"name":"defTextId"/ | OK |

*!
Read texts again to see that they have been created

!***> Read fitnesseBookGroupText and fitnesseBookGroupDefText

!| RecordEndpointFixture |
| id | type | testReadRecord? | getStatusType? |
| fitnesseBookGroupText | coraText | | OK |
| fitnesseBookGroupDefText | coraText | | OK |

*!
Read presentationGroups again to see that they have been created

!***> Read fitnesseBookPGroup and fitnesseBookOutputPGroup

!| RecordEndpointFixture |
| id | type | testReadRecord? | getStatusType? |
| fitnesseBookPGroup | presentationGroup | | OK |
| fitnesseBookOutputPGroup | presentationGroup | | OK |

*!
!1 Reset testdata
Remove data created for this test

!***> Delete created metadataGroup, presentationGroups and texts

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | presentationGroup | fitnesseBookPGroup | | OK |
| $adminAuthToken | presentationGroup | fitnesseBookOutputPGroup | | OK |
| $adminAuthToken | metadataGroup | fitnesseBookGroup | | OK |
| $adminAuthToken | coraText | fitnesseBookGroupText | | OK |
| $adminAuthToken | coraText | fitnesseBookGroupDefText | | OK |

*!
!2 Create a new metadataGroup with excludePGroupCreation option set to true
!***> Create a new metadataGroup (fitnesseWithNoPGroupsBookGroup)

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadataGroup | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"id","value":"fitnesseWithNoPGroupsBookGroup"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"nameInData","value":"fitnesseBook"},{"name":"excludePGroupCreation","value":"true"},{"name":"childReferences","children":[{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"recordInfoGroup"}]}],"repeatId":"0"}]}],"attributes":{"type":"group"}} | | CREATED |

*!
Read fitnesseWithNoPGroupsBookGroup to see that links to texts have been added to the metadata

!***> Read fitnesseWithNoPGroupsBookGroup

!| RecordEndpointFixture |
| id | type | testReadRecord? | getStatusType? |
| fitnesseWithNoPGroupsBookGroup | metadataGroup | =~/"name":"linkedRecordId","value":"fitnesseWithNoPGroupsBookGroupText".*"name":"textId".*"name":"linkedRecordId","value":"fitnesseWithNoPGroupsBookGroupDefText".*name":"defTextId"/ | OK |

*!
Read texts again to see that they have been created

!***> Read fitnesseWithNoPGroupsBookGroupText and fitnesseWithNoPGroupsBookGroupDefText

!| RecordEndpointFixture |
| id | type | testReadRecord? | getStatusType? |
| fitnesseWithNoPGroupsBookGroupText | coraText | | OK |
| fitnesseWithNoPGroupsBookGroupDefText | coraText | | OK |

*!
Read presentationGroups to see that they have NOT been created

!***> Read fitnesseWithNoPGroupsBookPGroup and fitnesseWithNoPGroupsBookOutputPGroup

!| RecordEndpointFixture |
| id | type | testReadRecord? | getStatusType? |
| fitnesseWithNoPGroupsBookPGroup | presentationGroup | | NOT_FOUND |
| fitnesseWithNoPGroupsBookOutputPGroup | presentationGroup | | NOT_FOUND |

*!
!1 Reset testdata
Remove data created for this test

!***> Delete created metadataGroup, presentationGroups and texts

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | metadataGroup | fitnesseWithNoPGroupsBookGroup | | OK |
| $adminAuthToken | coraText | fitnesseWithNoPGroupsBookGroupText | | OK |
| $adminAuthToken | coraText | fitnesseWithNoPGroupsBookGroupDefText | | OK |

*!
