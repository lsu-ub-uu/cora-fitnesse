---
Static
---
!4 Read
 * '''Case 1''': User1 should be able to read records with any visibility, fitnesseTextVar should be visible
 * '''Case 2''': User2 should only be able to read records it is allowed by visibility permission term (published, unpublished), fitnesseTextVar should not be visible
 * '''Case 3''': A guest should only be able to read published records, fitnesseTextVar should not be visible
#
!***> '''Case 1''': User1 should be able to read records with any visibility
!define currentAuthToken {$adminAuthToken}
!define expectedUnpublishedStatus {OK}
!define expectedPublishedStatus {OK}
!define expectedUnpublishedResponseRegex {"name":"fitnesseTextVar","value":"en text" AND "name":"visibility","value":"unpublished" AND "name":"tsVisibility","value":"!-\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z-!"}
!define expectedPublishedResponseRegex {"name":"fitnesseTextVar","value":"en text" AND "name":"visibility","value":"published" AND "name":"tsVisibility","value":"!-\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z-!"}

!include -seamless <User.ActionHelpers.ReadRecord

!| script | ExtractSubstringUsingRegex |
| ensure | match found using text | $unpublishedResponseBody | and includes and not excludes | ${expectedUnpublishedResponseRegex} |
| ensure | match found using text | $publishedResponseBody | and includes and not excludes | ${expectedPublishedResponseRegex} |

*!
!***> '''Case 2''': User2 should only be able to read records it is allowed by visibility permission term (published, unpublished)
!define currentAuthToken {$userAuthToken}
!define expectedUnpublishedStatus {OK}
!define expectedPublishedStatus {OK}
!define expectedUnpublishedResponseRegex {NOT "name":"fitnesseTextVar","value":"en text" AND "name":"visibility","value":"unpublished" AND "name":"tsVisibility","value":"!-\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z-!"}
!define expectedPublishedResponseRegex {NOT "name":"fitnesseTextVar","value":"en text" AND "name":"visibility","value":"published" AND "name":"tsVisibility","value":"!-\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z-!"}

!include -seamless <User.ActionHelpers.ReadRecord

!| script | ExtractSubstringUsingRegex |
| ensure | match found using text | $unpublishedResponseBody | and includes and not excludes | ${expectedUnpublishedResponseRegex} |
| ensure | match found using text | $publishedResponseBody | and includes and not excludes | ${expectedPublishedResponseRegex} |

*!
!***> '''Case 3''': A guest should only be able to read published records
!define currentAuthToken {$guestAuthToken}
!define expectedUnpublishedStatus {FORBIDDEN}
!define expectedPublishedStatus {OK}
!define expectedPublishedResponseRegex {NOT "name":"fitnesseTextVar","value":"en text" AND "name":"visibility","value":"published" AND "name":"tsVisibility","value":"!-\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z-!"}

!include -seamless <User.ActionHelpers.ReadRecord

!| script | ExtractSubstringUsingRegex |
| ensure | match found using text | $publishedResponseBody | and includes and not excludes | ${expectedPublishedResponseRegex} |

*!