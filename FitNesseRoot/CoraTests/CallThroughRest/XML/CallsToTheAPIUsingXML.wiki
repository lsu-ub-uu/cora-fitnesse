---
Test
---
!1 Calls to the API using XML
The goal of this testpage is to show how to call the REST API when using XML as the dataformat.

This test creates a recordType that handles the following data:
For new:

 * singleTrainingProgram (group)
   * recordInfo (group, 1-1, '''noRestrictions''')
     * id (textVar, 1-1, '''noRestrictions''')
     * type (link, 1-1, '''noRestrictions''')
     * dataDivider (link, 1-1, '''noRestrictions''')
   * trainingProgram (group, 1-1, '''noRestrictions''')
     * id (textVar, 1-1, '''noRestrictions''')
     * createdBy (link, 1-1, '''noRestrictions''')

For reading/updating:

 * singleTrainingProgram (group)
   * recordInfo (group, 1-1, '''noRestrictions''')
     * id (textVar, 1-1, '''noRestrictions''')
     * type (link, 1-1, '''noRestrictions''')
     * createdBy (link, 1-1, '''noRestrictions''')
     * dataDivider (link, 1-1, '''noRestrictions''')
     * tsCreated (textVar, 1-1, '''noRestrictions''')
     * updated(group, 1-X, '''noRestrictions''')
   * trainingProgram (group, 1-1, '''noRestrictions''')
     * id (textVar, 1-1, '''noRestrictions''')
     * createdBy (link, 1-1, '''noRestrictions''')

!2 Setup
Create needed metadata
!note !-Please note, setup is not used as example of how to do things-!

 * '''Setup 0:''' Login this is currently a call made using a java fixture
 * '''Setup 1:''' Create the metadatagroup trainingProgram, containing two fields, id and createdBy. they are both mandatory (min 1, max 1)
 * '''Setup 2:''' Create a metadatagroup called singleTrainingProgram which must contain one trainingProgram, no less, no more.
 * '''Setup 3:''' Create a recordType which describes a singleTrainingProgram.

!***> Setup
!***> Configure !-RestFixture-!

| Table:smartrics.rest.fitnesse.fixture.RestFixtureConfig | |
| restfixture.default.headers | Accept: application/vnd.cora.record+xml!-
-!Content-Type: application/vnd.cora.recordgroup+xml!-
-!authToken:$adminAuthToken |
| restfixture.content.handlers.map | application/vnd.cora.record+xml=XML |
| http.client.connection.timeout | 7000 |
| restfixture.display.toggle.for.cells.larger.than | 10 |

*!

!***> Create Metadata


Create collectIndexTerms trainingIdIndexTerm
!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | collectTerm | {"name":"collectTerm","children":[{"name":"recordInfo","children":[{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"collectIndexTerm"}]},{"name":"id","value":"trainingIdIndexTerm"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"nameInData","value":"trainingIdIndexTerm"},{"name":"extraData","children":[{"name":"indexFieldName","value":"trainingId"},{"name":"indexType","value":"indexTypeText"}]}],"attributes":{"type":"index"}} | | CREATED |

| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | Accept: application/vnd.cora.record+xml!-
-!Content-Type: application/vnd.cora.recordgroup+xml!-
-!authToken:$adminAuthToken  |
| setBody | <?xml version="1.0" encoding="UTF-8"?>!-
-!<metadata type="group">!-
-!<recordInfo><id>trainingProgramGroup</id>!-
-!<dataDivider>!-
-!<linkedRecordType>system</linkedRecordType>!-
-!<linkedRecordId>cora</linkedRecordId>!-
-!</dataDivider>!-
-!<validationType>!-
-!<linkedRecordType>validationType</linkedRecordType>!-
-!<linkedRecordId>metadataGroup</linkedRecordId>!-
-!</validationType>!-
-!</recordInfo>!-
-!<textId>!-
-!<linkedRecordType>text</linkedRecordType>!-
-!<linkedRecordId>someTestText</linkedRecordId>!-
-!</textId>!-
-!<defTextId>!-
-!<linkedRecordType>text</linkedRecordType>!-
-!<linkedRecordId>someTestDefText</linkedRecordId>!-
-!</defTextId>!-
-!<nameInData>trainingProgram</nameInData>!-
-!<excludePGroupCreation>true</excludePGroupCreation>!-
-!<childReferences>!-
-!<childReference repeatId="1">!-
-!<ref>!-
-!<linkedRecordType>metadata</linkedRecordType>!-
-!<linkedRecordId>idTextVar</linkedRecordId>!-
-!</ref>!-
-!<childRefCollectTerm repeatId="0" type="index">!-
-!<linkedRecordType>collectTerm</linkedRecordType>!-
-!<linkedRecordId>trainingIdIndexTerm</linkedRecordId>!-
-!</childRefCollectTerm>!-
-!<repeatMin>1</repeatMin>!-
-!<repeatMax>1</repeatMax>!-
-!</childReference>!-
-!<childReference repeatId="2">!-
-!<ref>!-
-!<linkedRecordType>metadata</linkedRecordType>!-
-!<linkedRecordId>createdByTextVar</linkedRecordId>!-
-!</ref>!-
-!<repeatMin>1</repeatMin>!-
-!<repeatMax>1</repeatMax>!-
-!</childReference>!-
-!</childReferences>!-
-!</metadata> |
| POST | /rest/record/metadata | 201 |Content-Type: application\/vnd\.cora\.record\+xml | /record/data/metadata[@type = 'group'] |


| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setBody | <?xml version="1.0" encoding="UTF-8"?>!-
-!<metadata type="group">!-
-!<recordInfo>!-
-!<id>singleTrainingProgramNewGroup</id>!-
-!<dataDivider>!-
-!<linkedRecordType>system</linkedRecordType>!-
-!<linkedRecordId>cora</linkedRecordId>!-
-!</dataDivider>!-
-!<validationType>!-
-!<linkedRecordType>validationType</linkedRecordType>!-
-!<linkedRecordId>metadataGroup</linkedRecordId>!-
-!</validationType>!-
-!</recordInfo>!-
-!<textId>!-
-!<linkedRecordType>text</linkedRecordType>!-
-!<linkedRecordId>someTestText</linkedRecordId>!-
-!</textId>!-
-!<defTextId>!-
-!<linkedRecordType>text</linkedRecordType>!-
-!<linkedRecordId>someTestDefText</linkedRecordId>!-
-!</defTextId>!-
-!<nameInData>singleTrainingProgram</nameInData>!-
-!<excludePGroupCreation>true</excludePGroupCreation>!-
-!<childReferences>!-
-!<childReference repeatId="3">!-
-!<ref>!-
-!<linkedRecordType>metadata</linkedRecordType>!-
-!<linkedRecordId>recordInfoNewGroup</linkedRecordId>!-
-!</ref>!-
-!<repeatMin>1</repeatMin>!-
-!<repeatMax>1</repeatMax>!-
-!</childReference>!-
-!<childReference repeatId="1">!-
-!<ref>!-
-!<linkedRecordType>metadata</linkedRecordType>!-
-!<linkedRecordId>trainingProgramGroup</linkedRecordId>!-
-!</ref>!-
-!<repeatMin>1</repeatMin>!-
-!<repeatMax>1</repeatMax>!-
-!</childReference>!-
-!</childReferences>!-
-!</metadata> |
| POST | /rest/record/metadata | 201 | | |

| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setBody | <?xml version="1.0" encoding="UTF-8"?><metadata type="group"><recordInfo><id>singleTrainingProgramGroup</id><validationType><linkedRecordType>validationType</linkedRecordType><linkedRecordId>metadataGroup</linkedRecordId></validationType><dataDivider><linkedRecordType>system</linkedRecordType><linkedRecordId>cora</linkedRecordId></dataDivider></recordInfo><textId><linkedRecordType>text</linkedRecordType><linkedRecordId>someTestText</linkedRecordId></textId><defTextId><linkedRecordType>text</linkedRecordType><linkedRecordId>someTestDefText</linkedRecordId></defTextId><nameInData>singleTrainingProgram</nameInData><excludePGroupCreation>true</excludePGroupCreation><childReferences><childReference repeatId="1"><ref><linkedRecordType>metadata</linkedRecordType><linkedRecordId>trainingProgramGroup</linkedRecordId></ref><repeatMin>1</repeatMin><repeatMax>1</repeatMax></childReference><childReference repeatId="2"><ref><linkedRecordType>metadata</linkedRecordType><linkedRecordId>recordInfoGroup</linkedRecordId></ref><repeatMin>1</repeatMin><repeatMax>1</repeatMax></childReference></childReferences></metadata> |
| POST | /rest/record/metadata | 201 | | |

| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setBody | <?xml version="1.0" encoding="UTF-8"?><presentation type="pGroup"><recordInfo><id>someFitnesseViewPGroup</id><validationType><linkedRecordType>validationType</linkedRecordType><linkedRecordId>presentationGroup</linkedRecordId></validationType><dataDivider><linkedRecordType>system</linkedRecordType><linkedRecordId>testSystem</linkedRecordId></dataDivider></recordInfo><presentationOf><linkedRecordType>metadata</linkedRecordType><linkedRecordId>singleTrainingProgramGroup</linkedRecordId></presentationOf><childReferences><childReference repeatId="0"><refGroup repeatId="0"><ref type="presentation"><linkedRecordType>presentation</linkedRecordType><linkedRecordId>recordInfoOutputPGroup</linkedRecordId></ref></refGroup></childReference></childReferences><mode>output</mode></presentation> |
| POST | /rest/record/presentation | 201 | | |

| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setBody | <?xml version="1.0" encoding="UTF-8"?><presentation type="pGroup"><recordInfo><id>someFitnesseFormPGroup</id><validationType><linkedRecordType>validationType</linkedRecordType><linkedRecordId>presentationGroup</linkedRecordId></validationType><dataDivider><linkedRecordType>system</linkedRecordType><linkedRecordId>testSystem</linkedRecordId></dataDivider></recordInfo><presentationOf><linkedRecordType>metadata</linkedRecordType><linkedRecordId>singleTrainingProgramGroup</linkedRecordId></presentationOf><childReferences><childReference repeatId="0"><refGroup repeatId="0"><ref type="presentation"><linkedRecordType>presentation</linkedRecordType><linkedRecordId>recordInfoPGroup</linkedRecordId></ref></refGroup></childReference></childReferences><mode>output</mode></presentation> |
| POST | /rest/record/presentation | 201 | | |

| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setBody | <?xml version="1.0" encoding="UTF-8"?><presentation type="pGroup"><recordInfo><id>someFitnesseFormNewPGroup</id><validationType><linkedRecordType>validationType</linkedRecordType><linkedRecordId>presentationGroup</linkedRecordId></validationType><dataDivider><linkedRecordType>system</linkedRecordType><linkedRecordId>testSystem</linkedRecordId></dataDivider></recordInfo><presentationOf><linkedRecordType>metadata</linkedRecordType><linkedRecordId>singleTrainingProgramNewGroup</linkedRecordId></presentationOf><childReferences><childReference repeatId="0"><refGroup repeatId="0"><ref type="presentation"><linkedRecordType>presentation</linkedRecordType><linkedRecordId>recordInfoNewPGroup</linkedRecordId></ref></refGroup></childReference></childReferences><mode>output</mode></presentation> |
| POST | /rest/record/presentation | 201 | | |

*!

!***> Create texts needed when creating recordType

| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setBody | <?xml version="1.0" encoding="UTF-8"?><text><recordInfo><id>someFitnesseText</id><validationType><linkedRecordType>validationType</linkedRecordType><linkedRecordId>coraText</linkedRecordId></validationType><dataDivider><linkedRecordType>system</linkedRecordType><linkedRecordId>cora</linkedRecordId></dataDivider></recordInfo><textPart lang="sv" type="default"><text>En text</text></textPart></text> |
| POST | /rest/record/text | 201 | | |
| setBody | <?xml version="1.0" encoding="UTF-8"?><text><recordInfo><id>someFitnesseDefText</id><validationType><linkedRecordType>validationType</linkedRecordType><linkedRecordId>coraText</linkedRecordId></validationType><dataDivider><linkedRecordType>system</linkedRecordType><linkedRecordId>cora</linkedRecordId></dataDivider></recordInfo><textPart lang="sv" type="default"><text>En deftext</text></textPart><textPart lang="en" type="alternative"><text>A defText</text></textPart></text> |
| POST | /rest/record/text | 201 | | |

*!

!***> Create recordType

| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setBody | <?xml version="1.0" encoding="UTF-8"?><recordType><recordInfo><id>singleTrainingProgram</id><validationType><linkedRecordType>validationType</linkedRecordType><linkedRecordId>recordType</linkedRecordId></validationType><dataDivider><linkedRecordType>system</linkedRecordType><linkedRecordId>cora</linkedRecordId></dataDivider></recordInfo><metadataId><linkedRecordType>metadata</linkedRecordType><linkedRecordId>singleTrainingProgramGroup</linkedRecordId></metadataId><presentationViewId><linkedRecordType>presentation</linkedRecordType><linkedRecordId>someFitnesseViewPGroup</linkedRecordId></presentationViewId><menuPresentationViewId><linkedRecordType>presentation</linkedRecordType><linkedRecordId>someFitnesseViewPGroup</linkedRecordId></menuPresentationViewId><listPresentationViewId><linkedRecordType>presentation</linkedRecordType><linkedRecordId>someFitnesseViewPGroup</linkedRecordId></listPresentationViewId><autocompletePresentationView><linkedRecordType>presentation</linkedRecordType><linkedRecordId>someFitnesseViewPGroup</linkedRecordId></autocompletePresentationView><textId><linkedRecordType>text</linkedRecordType><linkedRecordId>someFitnesseText</linkedRecordId></textId><defTextId><linkedRecordType>text</linkedRecordType><linkedRecordId>someFitnesseDefText</linkedRecordId></defTextId><search><linkedRecordType>search</linkedRecordType><linkedRecordId>recordTypeSearch</linkedRecordId></search><groupOfRecordType repeatId="0">metadata</groupOfRecordType><public>false</public><storeInArchive>false</storeInArchive><usePermissionUnit>false</usePermissionUnit><useTrashBin>false</useTrashBin><useVisibility>false</useVisibility><idSource>userSupplied</idSource></recordType> |
| POST | /rest/record/recordType | 201 | | |

*!

!***> Create validationType

| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setBody | <?xml version="1.0" encoding="UTF-8"?><validationType><recordInfo><dataDivider><linkedRecordType>system</linkedRecordType><linkedRecordId>cora</linkedRecordId></dataDivider><id>singleTrainingProgramValidationType</id><validationType><linkedRecordType>validationType</linkedRecordType><linkedRecordId>validationType</linkedRecordId></validationType></recordInfo><textId><linkedRecordType>text</linkedRecordType><linkedRecordId>someFitnesseText</linkedRecordId></textId><defTextId><linkedRecordType>text</linkedRecordType><linkedRecordId>someFitnesseDefText</linkedRecordId></defTextId><newMetadataId><linkedRecordType>metadata</linkedRecordType><linkedRecordId>singleTrainingProgramNewGroup</linkedRecordId></newMetadataId><metadataId><linkedRecordType>metadata</linkedRecordType><linkedRecordId>singleTrainingProgramGroup</linkedRecordId></metadataId><newPresentationFormId><linkedRecordType>presentation</linkedRecordType><linkedRecordId>someFitnesseFormNewPGroup</linkedRecordId></newPresentationFormId><presentationFormId><linkedRecordType>presentation</linkedRecordType><linkedRecordId>someFitnesseFormPGroup</linkedRecordId></presentationFormId><validatesRecordType><linkedRecordType>recordType</linkedRecordType><linkedRecordId>singleTrainingProgram</linkedRecordId></validatesRecordType></validationType> |
| POST | /rest/record/validationType | 201 | | |

*!

Create trainingIdSearchTextVar textVariable for search form
!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataTextVariable"}]},{"name":"id","value":"trainingIdSearchTextVar"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"nameInData","value":"trainingIdSearchTerm"},{"name":"regEx","value":".*"}],"attributes":{"type":"textVariable"}} | | CREATED |

Create trainingSearch groups for search form
!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}]},{"name":"id","value":"trainingSearchIncludePartGroup"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"nameInData","value":"includePart"},{"name":"childReferences","children":[{"name":"childReference","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"trainingIdSearchTextVar"}]}],"repeatId":"0"}]}],"attributes":{"type":"group"}} | | CREATED |
| $adminAuthToken | metadata | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}]},{"name":"id","value":"trainingSearchIncludeGroup"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]}]},{"name":"nameInData","value":"include"},{"name":"childReferences","children":[{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"trainingSearchIncludePartGroup"}]}],"repeatId":"0"}]}],"attributes":{"type":"group"}} | | CREATED |
| $adminAuthToken | metadata | {"name":"metadata","children":[{"name":"recordInfo","children":[{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}]},{"name":"id","value":"trainingSearchGroup"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]}]},{"name":"nameInData","value":"trainingSearch"},{"name":"childReferences","children":[{"name":"childReference","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"name":"ref","children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"trainingSearchIncludeGroup"}]}],"repeatId":"0"}]}],"attributes":{"type":"group"}} | | CREATED |

create searchTerm
!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | searchTerm | {"name":"searchTerm","children":[{"name":"recordInfo","children":[{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"searchTerm"}]},{"name":"id","value":"trainingIdSearchTerm"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"searchTermType","value":"final"},{"name":"indexTerm","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"trainingIdIndexTerm"}]}]} | | CREATED |


Create trainingSearch 
!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | search | {"name":"search","children":[{"name":"recordInfo","children":[{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"search"}]},{"name":"id","value":"trainingSearch"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"metadataId","children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"trainingSearchGroup"}]},{"name":"presentationId","children":[{"name":"linkedRecordType","value":"presentation"},{"name":"linkedRecordId","value":"trainingSearchPGroup"}]},{"name":"recordTypeToSearchIn","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"singleTrainingProgram"}],"repeatId":"0"},{"name":"searchGroup","value":"autocomplete"}]} | | CREATED |


*!

!2 Create record
We will create a trainingProgram using the metadata groups specified. We can only create a trainingProgram if we provide the mandatory elements.

 * '''Case 1:''' Try to create with malformed XML, wrong end tag.
 * '''Case 2:''' The first test is missing id.
 * '''Case 3:''' The second test is missing the entire trainingProgram child
 * '''Case 4:''' Contains everything needed, creates the record
 * '''Case 5:''' Contains everything needed, creates another record

!***> Case 1
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Content-Type: application/vnd.cora.recordgroup+xml!-
-!Accept: application/vnd.cora.record+xml|
| setBody | <?xml version="1.0" encoding="UTF-8"?>!-
-!<singleTrainingProgram>!-
-!<recordInfo>!-
-!<dataDivider>!-
-!<linkedRecordType>system</linkedRecordType>!-
-!<linkedRecordId>cora</linkedRecordId>!-
-!</dataDivider>!-
-!<id>cirkelfys</id>!-
-!<validationType>!-
-!<linkedRecordType>validationType</linkedRecordType>!-
-!<linkedRecordId>singleTrainingProgramValidationType</linkedRecordId>!-
-!</validationType>!-
-!</recordInfo>!-
-!<trainingProgram>!-
-!<createdBy>asta_kask</createdBy>!-
-!</trainingProgram>!-
-!</WRONG_TAG> | Data is missing id inside trainingProgram, should not be possible to create. |
| POST | /rest/record/singleTrainingProgram | 400 | Content-Type: text\/plain;charset=utf-8| Error creating new record for recordType: singleTrainingProgram. Unable to convert from xml to dataElement due to malformed XML:|
*!
!***> Case 2
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Content-Type: application/vnd.cora.recordgroup+xml!-
-!Accept: application/vnd.cora.record+xml|
| setBody | <?xml version="1.0" encoding="UTF-8"?>!-
-!<singleTrainingProgram>!-
-!<recordInfo>!-
-!<dataDivider>!-
-!<linkedRecordType>system</linkedRecordType>!-
-!<linkedRecordId>cora</linkedRecordId>!-
-!</dataDivider>!-
-!<validationType>!-
-!<linkedRecordType>validationType</linkedRecordType>!-
-!<linkedRecordId>singleTrainingProgramValidationType</linkedRecordId>!-
-!</validationType>!-
-!<id>cirkelfys</id>!-
-!</recordInfo>!-
-!<trainingProgram>!-
-!<createdBy>asta_kask</createdBy>!-
-!</trainingProgram></singleTrainingProgram> | Data is missing id inside trainingProgram, should not be possible to create. |
| POST | /rest/record/singleTrainingProgram | 400 | Content-Type: text\/plain;charset=utf-8| Error creating new record for recordType: singleTrainingProgram. Data is not valid: \[Did not find enough data children with referenceId: idTextVar\(with nameInData:id\).\]|
*!
!***> Case 3
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Content-Type: application/vnd.cora.recordgroup+xml!-
-!Accept: application/vnd.cora.record+xml|
| setBody | <?xml version="1.0" encoding="UTF-8"?>!-
-!<singleTrainingProgram>!-
-!<recordInfo>!-
-!<dataDivider>!-
-!<linkedRecordType>system</linkedRecordType>!-
-!<linkedRecordId>cora</linkedRecordId>!-
-!</dataDivider>!-
-!<validationType>!-
-!<linkedRecordType>validationType</linkedRecordType>!-
-!<linkedRecordId>singleTrainingProgramValidationType</linkedRecordId>!-
-!</validationType>!-
-!<id>cirkelfys</id>!-
-!</recordInfo>!-
-!</singleTrainingProgram> | Data is missing the entire trainingProgram group, should not be possible to create. |
| POST | /rest/record/singleTrainingProgram | 400 | Content-Type: text\/plain;charset=utf-8 |Error creating new record for recordType: singleTrainingProgram. Data is not valid: \[Did not find enough data children with referenceId: trainingProgramGroup\(with nameInData:trainingProgram\).\] |
*!
!***> Case 4
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Content-Type: application/vnd.cora.recordgroup+xml!-
-!Accept: application/vnd.cora.record+xml|
| setBody |<?xml version="1.0" encoding="UTF-8"?>!-
-!<singleTrainingProgram>!-
-!<recordInfo>!-
-!<dataDivider>!-
-!<linkedRecordType>system</linkedRecordType>!-
-!<linkedRecordId>cora</linkedRecordId>!-
-!</dataDivider>!-
-!<validationType>!-
-!<linkedRecordType>validationType</linkedRecordType>!-
-!<linkedRecordId>singleTrainingProgramValidationType</linkedRecordId>!-
-!</validationType>!-
-!<id>cirkelfys</id>!-
-!</recordInfo>!-
-!<trainingProgram>!-
-!<id>x1</id>!-
-!<createdBy>asta_kask</createdBy>!-
-!</trainingProgram>!-
-!</singleTrainingProgram>| Data is correct, should be possible to create. |
| POST | /rest/record/singleTrainingProgram | 201 | Content-Type: application\/vnd\.cora\.record\+xml!-
-!Location:/rest/record/singleTrainingProgram/cirkelfys| /record/data/singleTrainingProgram/trainingProgram/id[text()='x1']!-
-!/record/data/singleTrainingProgram/trainingProgram/createdBy[text() = 'asta_kask'] |
*!
!***> Case 5
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Content-Type: application/vnd.cora.recordgroup+xml!-
-!Accept: application/vnd.cora.record+xml|
| setBody |<?xml version="1.0" encoding="UTF-8"?>!-
-!<singleTrainingProgram>!-
-!<recordInfo>!-
-!<dataDivider>!-
-!<linkedRecordType>system</linkedRecordType>!-
-!<linkedRecordId>cora</linkedRecordId>!-
-!</dataDivider>!-
-!<validationType>!-
-!<linkedRecordType>validationType</linkedRecordType>!-
-!<linkedRecordId>singleTrainingProgramValidationType</linkedRecordId>!-
-!</validationType>!-
-!<id>spinning</id>!-
-!</recordInfo>!-
-!<trainingProgram>!-
-!<id>anka1</id>!-
-!<createdBy>kalle_anka</createdBy>!-
-!</trainingProgram>!-
-!</singleTrainingProgram>| Data is correct, should be possible to create. |
| POST | /rest/record/singleTrainingProgram | 201 | Content-Type: application\/vnd\.cora\.record\+xml!-
-!Location:/rest/record/singleTrainingProgram/spinning| /record/data/singleTrainingProgram/trainingProgram/id[text()='anka1']!-
-!/record/data/singleTrainingProgram/trainingProgram/createdBy[text() = 'kalle_anka'] |

*!

!2 Read record
We will read a trainingProgram.

 * '''Case 1:''' Tries to read using wrong recordType
 * '''Case 2:''' Tries to read using wrong recordId
 * '''Case 3:''' Reads using an existing recordType and recordId. Verify actionLinks exists.

!***> Case 1
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Accept: application/vnd.cora.record+xml|
| GET | /rest/record/singleTrainingProgramNOT/cirkelfys | 404 | Content-Type: text\/plain;charset=utf-8| Error reading record with recordType: singleTrainingProgramNOT and recordId: cirkelfys. No record exists with recordId: singleTrainingProgramNOT|
*!
!***> Case 2
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Accept: application/vnd.cora.record+xml|
| GET | /rest/record/singleTrainingProgram/cirkelfysNOT | 404 | Content-Type: text\/plain;charset=utf-8| Error reading record with recordType: singleTrainingProgram and recordId: cirkelfysNOT. No record exists with recordId: cirkelfysNOT |
*!
!***> Case 3
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Accept: application/vnd.cora.record+xml|
| GET | /rest/record/singleTrainingProgram/cirkelfys | 200 | Content-Type: application\/vnd\.cora\.record\+xml| /record/data/singleTrainingProgram/trainingProgram/id[text()='x1']!-
-!/record/data/singleTrainingProgram/trainingProgram/createdBy[text() = 'asta_kask']!-
-!//actionLinks/read/requestMethod[text() = 'GET']!-
-!//actionLinks/update/requestMethod[text() = 'POST']!-
-!//actionLinks/delete/requestMethod[text() = 'DELETE']!-
-!//actionLinks/index/requestMethod[text() = 'POST'] |
*!


!2 Read record decorated
We will read a trainingProgram.

 * '''Case 1:''' Reads using an existing recordType and recordId, using decorated. Verify actionLinks exists.

!***> Case 1
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Accept: application/vnd.cora.record-decorated+xml|
| GET | /rest/record/singleTrainingProgram/cirkelfys | 200 | Content-Type: application\/vnd\.cora\.record-decorated\+xml| /record/data/singleTrainingProgram/trainingProgram/id[text()='x1']!-
-!/record/data/singleTrainingProgram/trainingProgram/createdBy[text() = 'asta_kask']!-
-!//actionLinks/read/requestMethod[text() = 'GET']!-
-!//actionLinks/update/requestMethod[text() = 'POST']!-
-!//actionLinks/delete/requestMethod[text() = 'DELETE']!-
-!//actionLinks/index/requestMethod[text() = 'POST'] |
*!

!2 Read record list
We will read a list of trainingPrograms.

 * '''Case 1:''' Tries to read using wrong recordType
 * '''Case 2:''' Reads using an existing recordType

!***> Case 1
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Accept: application/vnd.cora.recordList+xml|
| GET | /rest/record/singleTrainingProgramNOT/ | 404 | Content-Type: text\/plain;charset=utf-8| Error reading records with recordType: singleTrainingProgramNOT. No record exists with recordId: singleTrainingProgramNOT |
*!
!***> Case 2
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Accept: application/vnd.cora.recordList+xml|
| GET | /rest/record/singleTrainingProgram/ | 200 | Content-Type: application\/vnd\.cora\.recordList\+xml| /dataList/containDataOfType[text()='singleTrainingProgram']!-
-!/dataList/data/record[1]/data/singleTrainingProgram/trainingProgram/id[text()='anka1']!-
-!/dataList/data/record[1]/data/singleTrainingProgram/trainingProgram/createdBy[text() = 'kalle_anka'] !-
-!/dataList/data/record[2]/data/singleTrainingProgram/trainingProgram/id[text()='x1']!-
-!/dataList/data/record[2]/data/singleTrainingProgram/trainingProgram/createdBy[text() = 'asta_kask']|
*!


!2 Update record
We will update a trainingProgram using the metadata groups specified. We can only update a trainingProgram if we provide the mandatory elements.

 * '''Case 1:''' Try to update with malformed XML, wrong end tag.
 * '''Case 2:''' Try to update with missing id.
 * '''Case 3:''' Try to update with  missing the entire trainingProgram child
 * '''Case 4:''' Contains everything needed, updates the record
 * '''Case 5:''' Contains everything needed, updates another record

!***> Case 1
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Content-Type: application/vnd.cora.recordgroup+xml!-
-!Accept: application/vnd.cora.record+xml|
| setBody | <?xml version="1.0" encoding="UTF-8"?>!-
-!<singleTrainingProgram>!-
-!<recordInfo>!-
-!<dataDivider>!-
-!<linkedRecordType>system</linkedRecordType>!-
-!<linkedRecordId>cora</linkedRecordId>!-
-!</dataDivider>!-
-!<validationType>!-
-!<linkedRecordType>validationType</linkedRecordType>!-
-!<linkedRecordId>singleTrainingProgramValidationType</linkedRecordId>!-
-!</validationType>!-
-!<id>cirkelfys</id>!-
-!</recordInfo>!-
-!<trainingProgram>!-
-!<createdBy>asta_kask</createdBy>!-
-!</trainingProgram>!-
-!</WRONG_TAG> | Data is missing id inside trainingProgram, should not be possible to update. |
| POST | /rest/record/singleTrainingProgram/cirkelfys | 400 | Content-Type: text\/plain;charset=utf-8| Error updating record with recordType: singleTrainingProgram and recordId: cirkelfys. Unable to convert from xml to dataElement due to malformed XML:|
*!
!***> Case 2
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Content-Type: application/vnd.cora.recordgroup+xml!-
-!Accept: application/vnd.cora.record+xml|
| setBody | <?xml version="1.0" encoding="UTF-8"?>!-
-!<singleTrainingProgram>!-
-!<recordInfo>!-
-!<ignoreOverwriteProtection>true</ignoreOverwriteProtection>!-
-!<dataDivider>!-
-!<linkedRecordType>system</linkedRecordType>!-
-!<linkedRecordId>cora</linkedRecordId>!-
-!</dataDivider>!-
-!<id>cirkelfys</id>!-
-!<validationType>!-
-!<linkedRecordType>validationType</linkedRecordType>!-
-!<linkedRecordId>singleTrainingProgramValidationType</linkedRecordId>!-
-!</validationType>!-
-!</recordInfo>!-
-!<trainingProgram>!-
-!<createdBy>asta_kask</createdBy>!-
-!</trainingProgram></singleTrainingProgram> | Data is missing id inside trainingProgram, should not be possible to update. |
| POST | /rest/record/singleTrainingProgram/cirkelfys | 400 | Content-Type: text\/plain;charset=utf-8| Error updating record with recordType: singleTrainingProgram and recordId: cirkelfys. Data is not valid: \[Did not find enough data children with referenceId: idTextVar\(with nameInData:id\)\.]|
*!
!***> Case 3
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Content-Type: application/vnd.cora.recordgroup+xml!-
-!Accept: application/vnd.cora.record+xml|
| setBody | <?xml version="1.0" encoding="UTF-8"?>!-
-!<singleTrainingProgram>!-
-!<recordInfo>!-
-!<ignoreOverwriteProtection>true</ignoreOverwriteProtection>!-
-!<dataDivider>!-
-!<linkedRecordType>system</linkedRecordType>!-
-!<linkedRecordId>cora</linkedRecordId>!-
-!</dataDivider>!-
-!<id>cirkelfys</id>!-
-!<validationType>!-
-!<linkedRecordType>validationType</linkedRecordType>!-
-!<linkedRecordId>singleTrainingProgramValidationType</linkedRecordId>!-
-!</validationType>!-
-!</recordInfo>!-
-!</singleTrainingProgram> | Data is missing the entire trainingProgram group, should not be possible to update. |
| POST | /rest/record/singleTrainingProgram/cirkelfys | 400 | Content-Type: text\/plain;charset=utf-8 |Error updating record with recordType: singleTrainingProgram and recordId: cirkelfys\. Data is not valid: \[Did not find enough data children with referenceId: trainingProgramGroup\(with nameInData:trainingProgram\)\.] |
*!
!***> Case 4
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Content-Type: application/vnd.cora.recordgroup+xml!-
-!Accept: application/vnd.cora.record+xml|
| setBody |<?xml version="1.0" encoding="UTF-8"?>!-
-!<singleTrainingProgram>!-
-!<recordInfo>!-
-!<ignoreOverwriteProtection>true</ignoreOverwriteProtection>!-
-!<dataDivider>!-
-!<linkedRecordType>system</linkedRecordType>!-
-!<linkedRecordId>cora</linkedRecordId>!-
-!</dataDivider>!-
-!<type>!-
-!<linkedRecordType>recordType</linkedRecordType>!-
-!<linkedRecordId>singleTrainingProgram</linkedRecordId>!-
-!</type>!-
-!<id>cirkelfys</id>!-
-!<validationType>!-
-!<linkedRecordType>validationType</linkedRecordType>!-
-!<linkedRecordId>singleTrainingProgramValidationType</linkedRecordId>!-
-!</validationType>!-
-!</recordInfo>!-
-!<trainingProgram>!-
-!<id>x12</id>!-
-!<createdBy>asta_kask2</createdBy>!-
-!</trainingProgram>!-
-!</singleTrainingProgram>| Data is correct, should be possible to update. |
| POST | /rest/record/singleTrainingProgram/cirkelfys | 200 | Content-Type: application\/vnd\.cora\.record\+xml| /record/data/singleTrainingProgram/trainingProgram/id[text()='x12']!-
-!/record/data/singleTrainingProgram/trainingProgram/createdBy[text() = 'asta_kask2'] |
*!
!***> Case 5
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Content-Type: application/vnd.cora.recordgroup+xml!-
-!Accept: application/vnd.cora.record+xml|
| setBody |<?xml version="1.0" encoding="UTF-8"?>!-
-!<singleTrainingProgram>!-
-!<recordInfo>!-
-!<ignoreOverwriteProtection>true</ignoreOverwriteProtection>!-
-!<dataDivider>!-
-!<linkedRecordType>system</linkedRecordType>!-
-!<linkedRecordId>cora</linkedRecordId>!-
-!</dataDivider>!-
-!<type>!-
-!<linkedRecordType>recordType</linkedRecordType>!-
-!<linkedRecordId>singleTrainingProgram</linkedRecordId>!-
-!</type>!-
-!<id>spinning</id>!-
-!<validationType>!-
-!<linkedRecordType>validationType</linkedRecordType>!-
-!<linkedRecordId>singleTrainingProgramValidationType</linkedRecordId>!-
-!</validationType>!-
-!</recordInfo>!-
-!<trainingProgram>!-
-!<id>anka12</id>!-
-!<createdBy>kalle_anka2</createdBy>!-
-!</trainingProgram>!-
-!</singleTrainingProgram>| Data is correct, should be possible to update. |
| POST | /rest/record/singleTrainingProgram/spinning | 200 | Content-Type: application\/vnd\.cora\.record\+xml| /record/data/singleTrainingProgram/trainingProgram/id[text()='anka12']!-
-!/record/data/singleTrainingProgram/trainingProgram/createdBy[text() = 'kalle_anka2'] |

#-!Content-Type: application/vnd.cora.recordgroup+xml!-
*!

!2 Search records
 * '''Case 1:''' Try to search with searchId that does not exists.
 * '''Case 2:''' Try to search with wrong searchData.
 * '''Case 3:''' Try to search with malformed searchData.
 * '''Case 4:''' Search record which exists.

!***> Case 1

| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Accept: application/vnd.cora.recordList+xml|
| GET | /rest/record/searchResult/trainingNOTexistsSearch?searchData=%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%3CtrainingSearch%3E%3Cinclude%3E%3CincludePart%3E%3CtrainingIdSearchTerm%3E%2A%2A%3C%2FtrainingIdSearchTerm%3E%3C%2FincludePart%3E%3C%2Finclude%3E%3C%2FtrainingSearch%3E | 404 | Content-Type: text/plain;charset=utf-8 | Error searching record with searchId: trainingNOTexistsSearch. No record exists with recordId: trainingNOTexistsSearch |
*!
!***> Case 2

| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Accept: application/vnd.cora.recordList+xml|
| GET | /rest/record/searchResult/trainingSearch?searchData=%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%3CtrainingOTHERSearch%3E%3Cinclude%3E%3CincludePart%3E%3CtrainingIdSearchTerm%3E%2A%2A%3C%2FtrainingIdSearchTerm%3E%3C%2FincludePart%3E%3C%2Finclude%3E%3C%2FtrainingOTHERSearch%3E | 400 | Content-Type: text/plain;charset=utf-8 | Error searching record with searchId: trainingSearch. Data is not valid: |
*!
!***> Case 3

| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Accept: application/vnd.cora.recordList+xml|
| GET | /rest/record/searchResult/trainingSearch?searchData=%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%3CtrainingWRONGSearch%3E%3Cinclude%3E%3CincludePart%3E%3CtrainingIdSearchTerm%3E%2A%2A%3C%2FtrainingIdSearchTerm%3E%3C%2FincludePart%3E%3C%2Finclude%3E%3C%2FtrainingSearch%3E | 400 | Content-Type: text/plain;charset=utf-8 | Error searching record with searchId: trainingSearch. Unable to convert from xml to dataElement due to malformed XML |
*!
!***> Case 4

Starting with this search XML
<?xml version="1.0" encoding="UTF-8"?>
<trainingSearch>
<include>
<includePart>
<trainingIdSearchTerm>
**
</trainingIdSearchTerm>
</includePart>
</include>
</trainingSearch>

remove all spaces:
<?xml version="1.0" encoding="UTF-8"?><trainingSearch><include><includePart><trainingIdSearchTerm>**</trainingIdSearchTerm></includePart></include></trainingSearch>

url encode, use this in the query:
%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%3CtrainingSearch%3E%3Cinclude%3E%3CincludePart%3E%3CtrainingIdSearchTerm%3E%2A%2A%3C%2FtrainingIdSearchTerm%3E%3C%2FincludePart%3E%3C%2Finclude%3E%3C%2FtrainingSearch%3E

| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Accept: application/vnd.cora.recordList+xml|
| GET | /rest/record/searchResult/trainingSearch?searchData=%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%3CtrainingSearch%3E%3Cinclude%3E%3CincludePart%3E%3CtrainingIdSearchTerm%3E%2A%2A%3C%2FtrainingIdSearchTerm%3E%3C%2FincludePart%3E%3C%2Finclude%3E%3C%2FtrainingSearch%3E | 200 | Content-Type: application\/vnd\.cora\.recordList\+xml | /dataList/totalNo[text()='2']!-
-!/dataList/data/record[2]/data/singleTrainingProgram/trainingProgram/id[text()='anka12']!-
-!/dataList/data/record[2]/data/singleTrainingProgram/trainingProgram/createdBy[text() = 'kalle_anka2'] !-
-!/dataList/data/record[1]/data/singleTrainingProgram/trainingProgram/id[text()='x12']!-
-!/dataList/data/record[1]/data/singleTrainingProgram/trainingProgram/createdBy[text() = 'asta_kask2']|
*!


!2 Clean up created data
!***> Remove metadata

| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| DELETE | /rest/record/singleTrainingProgram/cirkelfys | 200 | | |
| DELETE | /rest/record/singleTrainingProgram/spinning | 200 | | |
| DELETE | /rest/record/search/singleTrainingProgramSearch | 200 | | |
| DELETE | /rest/record/search/trainingSearch | 200 | | |
| DELETE | /rest/record/searchTerm/trainingIdSearchTerm | 200 | | |
| DELETE | /rest/record/presentation/trainingSearchPGroup | 200 | | |
| DELETE | /rest/record/presentation/trainingSearchOutputPGroup | 200 | | |
| DELETE | /rest/record/metadata/trainingSearchGroup | 200 | | |
| DELETE | /rest/record/presentation/trainingSearchIncludePGroup | 200 | | |
| DELETE | /rest/record/presentation/trainingSearchIncludeOutputPGroup | 200 | | |
| DELETE | /rest/record/metadata/trainingSearchIncludeGroup | 200 | | |
| DELETE | /rest/record/presentation/trainingSearchIncludePartPGroup | 200 | | |
| DELETE | /rest/record/presentation/trainingSearchIncludePartOutputPGroup | 200 | | |
| DELETE | /rest/record/metadata/trainingSearchIncludePartGroup | 200 | | |
| DELETE | /rest/record/presentation/trainingIdSearchPVar | 200 | | |
| DELETE | /rest/record/presentation/trainingIdSearchOutputPVar | 200 | | |
| DELETE | /rest/record/metadata/trainingIdSearchTextVar | 200 | | |
| DELETE | /rest/record/validationType/singleTrainingProgramValidationType | 200 | | |
| DELETE | /rest/record/recordType/singleTrainingProgram | 200 | | |
| DELETE | /rest/record/presentation/someFitnesseFormPGroup | 200 | | |
| DELETE | /rest/record/presentation/someFitnesseViewPGroup | 200 | | |
| DELETE | /rest/record/presentation/someFitnesseFormNewPGroup | 200 | | |
| DELETE | /rest/record/metadata/singleTrainingProgramGroup | 200 | | |
| DELETE | /rest/record/metadata/singleTrainingProgramNewGroup | 200 | | |
| DELETE | /rest/record/metadata/trainingProgramGroup | 200 | | |
| DELETE | /rest/record/text/someFitnesseText | 200 | | |
| DELETE | /rest/record/text/someFitnesseDefText | 200 | | |
| DELETE | /rest/record/text/someTestText | 200 | | |
| DELETE | /rest/record/text/someTestDefText | 200 | | |
| DELETE | /rest/record/text/trainingSearchDefText | 200 | | |
| DELETE | /rest/record/text/trainingSearchText | 200 | | |
| DELETE | /rest/record/text/trainingSearchGroupDefText | 200 | | |
| DELETE | /rest/record/text/trainingSearchGroupText | 200 | | |
| DELETE | /rest/record/text/trainingSearchIncludePartGroupDefText | 200 | | |
| DELETE | /rest/record/text/trainingSearchIncludePartGroupText | 200 | | |
| DELETE | /rest/record/text/trainingIdSearchTextVarDefText | 200 | | |
| DELETE | /rest/record/text/trainingIdSearchTextVarText | 200 | | |
| DELETE | /rest/record/collectTerm/trainingIdIndexTerm | 200 | | |

*!
