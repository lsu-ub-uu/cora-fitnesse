---
Test
---
!1 Decorated
The '''Decorated''' option is available when reading or searching a record using the Cora REST API. This option enriches the response with metadata and linked content to help clients interpret the record more easily.

When using this option:
 * The response includes '''definitions''' for each field in the record.
 * Linked records* (up to a depth of 2) within the data part are included.
 * All definitions and enriched metadata are added as attributes, using a naming convention where attribute names start with an underscore (_).

!2 Examples
 * For field definitions: ''' "_sv" ''': "Datadelare"
 * For collection variables, the parent element includes the display value as attributes: ''' "_value_en" ''': "Blue"

!2 Usage
To enable this option, set the '''Accept''' header in your request to one of the following media types:

''application/vnd.cora.record'''-decorated'''+xml''
''application/vnd.cora.record'''-decorated'''+json''

!2 Deviations
 * Linked records in '''recordInfo''' are '''not''' included.
 * If the user does '''not''' have permission to read a linked record, it will be '''omitted''' from the response.

-----

!***> Configure !-RestFixture-!

| Table:smartrics.rest.fitnesse.fixture.RestFixtureConfig | |
| restfixture.default.headers | Accept: application/vnd.cora.record+xml!-
-!Content-Type: application/vnd.cora.recordgroup+xml!-
-!authToken:$adminAuthToken |
| restfixture.content.handlers.map | application/vnd.cora.record+xml=XML |
| http.client.connection.timeout | 7000 |
| restfixture.display.toggle.for.cells.larger.than | 10 |

*!
!***> Setup
!***> '''Case 2''' Jpeg

!define currentAuthToken {$adminAuthToken}
!define expectedAnswer {}
!define expectedUploadAnswer {}
!define expectedActionsForRecord {!-{"actions":["read","update","delete","index","read_incoming_links"]}-!}
!define expectedActionResult {!-Action read_incoming_links is missing.-!}
!define originalFileName {aJpg.jpg}
!define expectedChecksumSha512 {8121447df8b82183f181611f23234247a026d0d66fda7bc421686b96c0cd66c11415f396cf7574dccd86815c26979234f74e64d3a82c6696f1dcfcc6b6bf070e}
!define expectedMimeType {image/jpeg}
!define expectedFileSize {347554}
!define expectedHeight {1690}
!define expectedWidth {1795}
!define expectedResolution {300x300}
!define recordType {binary}
!define thumbnailFileSize {38944}
!define thumbnailMimeType {image/jpeg}
!define thumbnailHeight {94}
!define thumbnailWidth {100}
!define mediumFileSize {64902}
!define mediumMimeType {image/jpeg}
!define mediumHeight {283}
!define mediumWidth {300}
!define largeFileSize {148597}
!define largeMimeType {image/jpeg}
!define largeHeight {565}
!define largeWidth {600}
!define jp2FileSize {1297962}
!define jp2MimeType {image/jp2}
!define jp2Height {1690}
!define jp2Width {1795}
!define binaryType {image}

!include -seamless .CoraTests.CallThroughJavaCode.Data.Binary.UploadImageValidateAnalysisAndConvertion

!define binaryRecordId $tmpRecordId1
*!




| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | Accept: application/vnd.cora.record+json!-
-!Content-Type: application/vnd.cora.recordgroup+json!-
-!authToken:$adminAuthToken  |
| setBody | {"name":"book","children":[{"name":"recordInfo","children":[{"name":"id","value":"demoForFitnesse"},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"demo"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"bookTitle","value":"demoTitle"}]} |
| POST | /rest/record/demo | 201 |Content-Type: application\/vnd\.cora\.record\+json | |
| let | demoTsUpdate | js | response.body.match(/{"name":"tsUpdated","value":"([^"]*)"}/)[1] |  |

| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | Accept: application/vnd.cora.record+json!-
-!Content-Type: application/vnd.cora.recordgroup+json!-
-!authToken:$adminAuthToken  |
| setBody | {"name":"book","children":[{"name":"recordInfo","children":[{"repeatId":"0","children":[{"repeatId":"0","children":[{"name":"tsUpdated","value":"$demoTsUpdate"},{"children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}],"name":"updatedBy"}],"name":"updated"},{"name":"id","value":"demoForFitnesse"},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"demo"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"bookTitle","value":"demoTitle"},{"name":"keeptHis","value":"4"},{"name":"bookCover","repeatId":"0","children":[{"name":"linkedRecordType","value":"binary"},{"name":"linkedRecordId","value":"$tmpRecordId1"}]},{"name":"url","value":""}]} |
| POST | /rest/record/demo | 200 |Content-Type: application\/vnd\.cora\.record\+json | |

| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | Accept: application/vnd.cora.record+xml!-
-!Content-Type: application/vnd.cora.recordgroup+xml!-
-!authToken:$adminAuthToken  |
| setBody | <?xml version="1.0" encoding="UTF-8"?>!- 
-!<fitnesseExample>!-
-!<recordInfo>!-
-!<dataDivider>!-
-!<linkedRecordType>system</linkedRecordType>!-
-!<linkedRecordId>testSystem</linkedRecordId>!-
-!</dataDivider>!-
-!<validationType>!-
-!<linkedRecordType>validationType</linkedRecordType>!-
-!<linkedRecordId>fitnesseValidationType</linkedRecordId>!-
-!</validationType>!-
-!</recordInfo>!-
-!<fitnesseTextVar>someText</fitnesseTextVar>!-
-!<fitnesseAnotherTextVar>omeAnother</fitnesseAnotherTextVar>!-
-!<demo>!-
-!<linkedRecordType>demo</linkedRecordType>!-
-!<linkedRecordId>demoForFitnesse</linkedRecordId>!-
-!</demo>!-
-!<colour>blue</colour>!-
-!</fitnesseExample> |
| POST | /rest/record/fitnesseRecordType | 201 |Content-Type: application\/vnd\.cora\.record\+xml | |
| let | recordId | js | response.body.match(/<id>(.*?)<\/id>/)[1] |  |
*!

!2 Read record decorated
We will read a trainingProgram.

 * '''Case 1:''' Reads record using decorated option, in XML
 * '''Case 2:''' Reads record using decorated option, in JSON

!***> Case 1
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Accept: application/vnd.cora.record-decorated+xml |
| GET | /rest/record/fitnesseRecordType/$recordId | 200 | Content-Type: application\/vnd\.cora\.record-decorated\+xml |  |
| let | linkedRecordTitleEnglish | js | response.body.match(/fitnesseTextVar _en="([^"]*)" _sv="([^"]*)"/)[1] | a text |
| let | linkedRecordTitleSwedish | js | response.body.match(/fitnesseTextVar _en="([^"]*)" _sv="([^"]*)"/)[2] | en text |
| let | linkedRecordTitleEnglish | js | response.body.match(/bookTitle _en="([^"]*)" _sv="([^"]*)"/)[1] | Title for the book |
| let | linkedRecordTitleSwedish | js | response.body.match(/bookTitle _en="([^"]*)" _sv="([^"]*)"/)[2] | Boktitel |
| let | linkedRecordTitleSwedish | js | response.body.match(/<colour _en="([^"]*)" _sv="([^"]*)" _value_en="([^"]*)" _value_sv="([^"]*)">([^"]*)<\/colour>/)[1] | Text for:fitnesseCollectionVarText |
| let | linkedRecordTitleSwedish | js | response.body.match(/<colour _en="([^"]*)" _sv="([^"]*)" _value_en="([^"]*)" _value_sv="([^"]*)">([^"]*)<\/colour>/)[2] | Text för:fitnesseCollectionVarText |
| let | linkedRecordTitleSwedish | js | response.body.match(/<colour _en="([^"]*)" _sv="([^"]*)" _value_en="([^"]*)" _value_sv="([^"]*)">([^"]*)<\/colour>/)[3] | blue |
| let | linkedRecordTitleSwedish | js | response.body.match(/<colour _en="([^"]*)" _sv="([^"]*)" _value_en="([^"]*)" _value_sv="([^"]*)">([^"]*)<\/colour>/)[4] | blå |
| let | linkedRecordTitleSwedish | js | response.body.match(/<colour _en="([^"]*)" _sv="([^"]*)" _value_en="([^"]*)" _value_sv="([^"]*)">([^"]*)<\/colour>/)[5] | blue |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[1] | Resource link |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[2] | Resurslänk |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[3] | binary |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[4] | binary:29475728554942 |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[5] | image/jpeg |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[6] | GET |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[7] | read |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[8] | !-http://localhost:8080/systemone/rest/record/binary/binary:29475728554942/master-! |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[9] | image/jpeg |
*!

!***> Case 2
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Accept: application/vnd.cora.record-decorated+json |
| GET | /rest/record/fitnesseRecordType/$recordId | 200 | Content-Type: application\/vnd\.cora\.record-decorated\+json | |
| let | linkedRecordTitleSwedish | js | response.body.match(/"fitnesseTextVar","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}/)[1] | en text |
| let | linkedRecordTitleEnglish | js | response.body.match(/"fitnesseTextVar","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}/)[2] | a text |
| let | linkedRecordTitleSwedish | js | response.body.match(/"bookTitle","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}/)[1] | Boktitel |
| let | linkedRecordTitleEnglish | js | response.body.match(/"bookTitle","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}/)[2] | Title for the book |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"name":"colour","attributes":{"_value_en":"([^"]*)","_sv":"([^"]*)","_value_sv":"([^"]*)","_en":"([^"]*)"},"value":"([^"]*)"}/)[1] | blue |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"name":"colour","attributes":{"_value_en":"([^"]*)","_sv":"([^"]*)","_value_sv":"([^"]*)","_en":"([^"]*)"},"value":"([^"]*)"}/)[2] | Text för:fitnesseCollectionVarText |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"name":"colour","attributes":{"_value_en":"([^"]*)","_sv":"([^"]*)","_value_sv":"([^"]*)","_en":"([^"]*)"},"value":"([^"]*)"}/)[3] | blå |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"name":"colour","attributes":{"_value_en":"([^"]*)","_sv":"([^"]*)","_value_sv":"([^"]*)","_en":"([^"]*)"},"value":"([^"]*)"}/)[4] | Text for:fitnesseCollectionVarText |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"name":"colour","attributes":{"_value_en":"([^"]*)","_sv":"([^"]*)","_value_sv":"([^"]*)","_en":"([^"]*)"},"value":"([^"]*)"}/)[5] | blue |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[1] | binary |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[2] | binary:29475728554942 |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[3] | image/jpeg |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[4] | GET |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[5] | read |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[6] | !-http://localhost:8080/systemone/rest/record/binary/binary:29475728554942/master-! |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[7] | image/jpeg |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[8] | Resurslänk |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[9] | Resource link |
*!

!***> Clean up
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken |
| DELETE | /rest/record/fitnesseRecordType/$recordId | 200 |  |  |
| DELETE | /rest/record/demo/demoForFitnesse | 200 |  |  |
| DELETE | /rest/record/binary/$tmpRecordId1 | 200 |  |  |
*!

