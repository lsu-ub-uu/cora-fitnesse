---
Test
---
!1 Decorated
The '''Decorated''' option is available when reading or searching a record using the Cora REST API. This option enriches the response with metadata and linked content to help clients interpret the record more easily.

When this option is used:
 * The response includes '''definitions''' for each field in the record.
 * Linked records (up to a depth of 2) within the data section are included.
 * All definitions and enriched metadata are added as attributes, using a naming convention where attribute names start with an underscore (_).

!2 Examples
 * For field definitions: '''"_sv"''': "Datadelare"
 * For collection variables, the parent element includes the display value as an attribute: '''"_value_en"''': "Blue"

!2 Usage
To enable this option, set the '''Accept''' header in your request to one of the following media types:

 * application/vnd.cora.record'''-decorated'''+xml
 * application/vnd.cora.record'''-decorated'''+json

!2 Deviations
 * Linked records in '''recordInfo''' are '''not''' included.
 * If the user does '''not''' have permission to read a linked record, it will be '''omitted''' from the response.

-----

!***> Configure !-RestFixture-!

| Table:smartrics.rest.fitnesse.fixture.RestFixtureConfig | |
| restfixture.default.headers | Accept: application/vnd.cora.record+xml!-
-!Content-Type: application/vnd.cora.recordgroup+xml!-
-!authToken:$adminAuthToken |
| restfixture.content.handlers.map | application/vnd.cora.record+xml=XML |
| http.client.connection.timeout | 7000 |
| restfixture.display.toggle.for.cells.larger.than | 10 |

*!
!***> Setup
!***> Create Binary record and upload an image
!define createBinaryGeneric {!-{"name":"binary","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"genericBinary"}]},{"name":"visibility","value":"unpublished"}]},{"name":"originalFileName","value":"-!${originalFileName}!-"},{"name":"expectedFileSize","value":"-!${expectedFileSize}!-"}],"attributes":{"type":"generic"}}-!}
!define recordType {binary}
!define createData createBinaryGeneric
!define expectedCreateResult {CREATED}

!define originalFileName {aJpg.jpg}
!define expectedFileSize {347554}
!define expectedAnswer {}
!define expectedUploadAnswer {}
!***> Create record, for recordType ${recordType}

!| ChildComparerFixture |
| authToken | type | json | testCreateAndStoreRecord? | getStatusType? | getCreatedId? |
| $adminAuthToken | ${recordType} | ${createData} | ${expectedAnswer} | ${expectedCreateResult} | $binaryRecordId= |

!define uploadRecordId {$binaryRecordId}
!include -seamless .HelperPages.uploadResource
*!
!***> Wait and validate record has been updated using image analyzer and converted to the different representations
!| WaitForRegExReadResultFixture |
| authToken | recordType | recordId | sleepTime | maxNumberOfCalls | regEx | waitUntilUntilRegExpFoundInReadRecord? |
| $adminAuthToken | binary | $binaryRecordId | 250 | 50 | \"name\":\"jp2\" | Found |
*!
*!
!***> Create Demo record with a link to the binary record
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | Accept: application/vnd.cora.record+json!-
-!Content-Type: application/vnd.cora.recordgroup+json!-
-!authToken:$adminAuthToken  |
| setBody | {"name":"book","children":[{"name":"recordInfo","children":[{"name":"id","value":"demoForFitnesse"},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"demo"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]}]},{"name":"bookTitle","value":"demoTitle"}]} |
| POST | /rest/record/demo | 201 |Content-Type: application\/vnd\.cora\.record\+json | |
| let | demoTsUpdate | js | response.body.match(/{"name":"tsUpdated","value":"([^"]*)"}/)[1] |  |

| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | Accept: application/vnd.cora.record+json!-
-!Content-Type: application/vnd.cora.recordgroup+json!-
-!authToken:$adminAuthToken  |
| setBody | {"children":[{"children":[{"name":"id","value":"demoForFitnesse"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"demo"}],"name":"validationType"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"demo"}],"name":"type"},{"children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}],"name":"createdBy"},{"name":"tsCreated","value":"2025-06-25T07:16:09.483816Z"},{"repeatId":"0","children":[{"name":"tsUpdated","value":"$demoTsUpdate"},{"children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}],"name":"updatedBy"}],"name":"updated"}],"name":"recordInfo"},{"name":"bookTitle","value":"demoTitle"},{"name":"bookCover","repeatId":"0","children":[{"name":"linkedRecordType","value":"binary"},{"name":"linkedRecordId","value":"$binaryRecordId"}]},{"name":"keeptHis","value":"4"}],"name":"book"} |
| POST | /rest/record/demo/demoForFitnesse | 200 |Content-Type: application\/vnd\.cora\.record\+json | |
*!
!***> Creates a FitnesseRecordType record with a link to the demo record
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | Accept: application/vnd.cora.record+xml!-
-!Content-Type: application/vnd.cora.recordgroup+xml!-
-!authToken:$adminAuthToken  |
| setBody | <?xml version="1.0" encoding="UTF-8"?>!- 
-!<fitnesseExample>!-
-!<recordInfo>!-
-!<dataDivider>!-
-!<linkedRecordType>system</linkedRecordType>!-
-!<linkedRecordId>testSystem</linkedRecordId>!-
-!</dataDivider>!-
-!<validationType>!-
-!<linkedRecordType>validationType</linkedRecordType>!-
-!<linkedRecordId>fitnesseValidationType</linkedRecordId>!-
-!</validationType>!-
-!</recordInfo>!-
-!<fitnesseTextVar>someText</fitnesseTextVar>!-
-!<fitnesseAnotherTextVar>omeAnother</fitnesseAnotherTextVar>!-
-!<demo>!-
-!<linkedRecordType>demo</linkedRecordType>!-
-!<linkedRecordId>demoForFitnesse</linkedRecordId>!-
-!</demo>!-
-!<colour>blue</colour>!-
-!</fitnesseExample> |
| POST | /rest/record/fitnesseRecordType | 201 |Content-Type: application\/vnd\.cora\.record\+xml | |
| let | recordId | js | response.body.match(/<id>(.*?)<\/id>/)[1] |  |
*!
*!

!2 Read record decorated
We will read a fitnesseRecord.

 * '''Case 1:''' Reads record using decorated option, in XML
 * '''Case 2:''' Reads record using decorated option, in JSON

The test setup creates a fitnesseRecord that links to a demo record which has a link to a binary record with an uploaded image.
The tests validate:
 * Fields now have attributes with their related text in all languages.
 * Validates inclusion of linked records up to depth 2.
 * Validates resource links at level 2.

!***> Case 1
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Accept: application/vnd.cora.record-decorated+xml |
| GET | /rest/record/fitnesseRecordType/$recordId | 200 | Content-Type: application\/vnd\.cora\.record-decorated\+xml |  |
| let | linkedRecordTitleEnglish | js | response.body.match(/fitnesseTextVar _en="([^"]*)" _sv="([^"]*)"/)[1] | a text |
| let | linkedRecordTitleSwedish | js | response.body.match(/fitnesseTextVar _en="([^"]*)" _sv="([^"]*)"/)[2] | en text |
| let | linkedRecordTitleEnglish | js | response.body.match(/bookTitle _en="([^"]*)" _sv="([^"]*)"/)[1] | Title for the book |
| let | linkedRecordTitleSwedish | js | response.body.match(/bookTitle _en="([^"]*)" _sv="([^"]*)"/)[2] | Boktitel |
| let | linkedRecordTitleSwedish | js | response.body.match(/<colour _en="([^"]*)" _sv="([^"]*)" _value_en="([^"]*)" _value_sv="([^"]*)">([^"]*)<\/colour>/)[1] | Text for:fitnesseCollectionVarText |
| let | linkedRecordTitleSwedish | js | response.body.match(/<colour _en="([^"]*)" _sv="([^"]*)" _value_en="([^"]*)" _value_sv="([^"]*)">([^"]*)<\/colour>/)[2] | Text för:fitnesseCollectionVarText |
| let | linkedRecordTitleSwedish | js | response.body.match(/<colour _en="([^"]*)" _sv="([^"]*)" _value_en="([^"]*)" _value_sv="([^"]*)">([^"]*)<\/colour>/)[3] | blue |
| let | linkedRecordTitleSwedish | js | response.body.match(/<colour _en="([^"]*)" _sv="([^"]*)" _value_en="([^"]*)" _value_sv="([^"]*)">([^"]*)<\/colour>/)[4] | blå |
| let | linkedRecordTitleSwedish | js | response.body.match(/<colour _en="([^"]*)" _sv="([^"]*)" _value_en="([^"]*)" _value_sv="([^"]*)">([^"]*)<\/colour>/)[5] | blue |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[1] | Resource link |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[2] | Resurslänk |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[3] | binary |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[4] | $binaryRecordId |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[5] | image/jpeg |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[6] | GET |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[7] | read |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[8] | binary/$binaryRecordId/master |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[9] | image/jpeg |
*!

!***> Case 2
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Accept: application/vnd.cora.record-decorated+json |
| GET | /rest/record/fitnesseRecordType/$recordId | 200 | Content-Type: application\/vnd\.cora\.record-decorated\+json | |
| let | linkedRecordTitleSwedish | js | response.body.match(/"fitnesseTextVar","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}/)[1] | en text |
| let | linkedRecordTitleEnglish | js | response.body.match(/"fitnesseTextVar","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}/)[2] | a text |
| let | linkedRecordTitleSwedish | js | response.body.match(/"bookTitle","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}/)[1] | Boktitel |
| let | linkedRecordTitleEnglish | js | response.body.match(/"bookTitle","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}/)[2] | Title for the book |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"name":"colour","attributes":{"_value_en":"([^"]*)","_sv":"([^"]*)","_value_sv":"([^"]*)","_en":"([^"]*)"},"value":"([^"]*)"}/)[1] | blue |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"name":"colour","attributes":{"_value_en":"([^"]*)","_sv":"([^"]*)","_value_sv":"([^"]*)","_en":"([^"]*)"},"value":"([^"]*)"}/)[2] | Text för:fitnesseCollectionVarText |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"name":"colour","attributes":{"_value_en":"([^"]*)","_sv":"([^"]*)","_value_sv":"([^"]*)","_en":"([^"]*)"},"value":"([^"]*)"}/)[3] | blå |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"name":"colour","attributes":{"_value_en":"([^"]*)","_sv":"([^"]*)","_value_sv":"([^"]*)","_en":"([^"]*)"},"value":"([^"]*)"}/)[4] | Text for:fitnesseCollectionVarText |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"name":"colour","attributes":{"_value_en":"([^"]*)","_sv":"([^"]*)","_value_sv":"([^"]*)","_en":"([^"]*)"},"value":"([^"]*)"}/)[5] | blue |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[1] | binary |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[2] | $binaryRecordId |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[3] | image/jpeg |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[4] | GET |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[5] | read |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[6] | binary/$binaryRecordId/master |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[7] | image/jpeg |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[8] | Resurslänk |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[9] | Resource link |
*!

!2 Search record decorated
We will search for the fitnesseRecord created in the setup.

 * '''Case 1:''' Searches record using decorated option, in XML
 * '''Case 2:''' Searches record using decorated option, in JSON

The test setup creates a fitnesseRecord that links to a demo record which has a link to a binary record with an uploaded image.
The tests validate:
 * Search has the possibility to show records using the decorated option.
 * Fields now have attributes with their related text in all languages.
 * Validates inclusion of linked records up to depth 2.
 * Validates resource links at level 2.

!***> Case 1
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Accept: application/vnd.cora.recordList-decorated+xml |
| GET | /rest/record/searchResult/fitnesseSearch?searchData=%7B%22name%22%3A%22fitnesseSearch%22%2C%22children%22%3A%5B%7B%22name%22%3A%22include%22%2C%22children%22%3A%5B%7B%22name%22%3A%22includePart%22%2C%22children%22%3A%5B%7B%22name%22%3A%22fitnesseSearchTerm%22%2C%22value%22%3A%22**%22%7D%5D%7D%5D%7D%5D%7D | 200 | Content-Type: application\/vnd\.cora\.recordList-decorated\+xml |  |
| let | linkedRecordTitleEnglish | js | response.body.match(/fitnesseTextVar _en="([^"]*)" _sv="([^"]*)"/)[1] | a text |
| let | linkedRecordTitleSwedish | js | response.body.match(/fitnesseTextVar _en="([^"]*)" _sv="([^"]*)"/)[2] | en text |
| let | linkedRecordTitleEnglish | js | response.body.match(/bookTitle _en="([^"]*)" _sv="([^"]*)"/)[1] | Title for the book |
| let | linkedRecordTitleSwedish | js | response.body.match(/bookTitle _en="([^"]*)" _sv="([^"]*)"/)[2] | Boktitel |
| let | linkedRecordTitleSwedish | js | response.body.match(/<colour _en="([^"]*)" _sv="([^"]*)" _value_en="([^"]*)" _value_sv="([^"]*)">([^"]*)<\/colour>/)[1] | Text for:fitnesseCollectionVarText |
| let | linkedRecordTitleSwedish | js | response.body.match(/<colour _en="([^"]*)" _sv="([^"]*)" _value_en="([^"]*)" _value_sv="([^"]*)">([^"]*)<\/colour>/)[2] | Text för:fitnesseCollectionVarText |
| let | linkedRecordTitleSwedish | js | response.body.match(/<colour _en="([^"]*)" _sv="([^"]*)" _value_en="([^"]*)" _value_sv="([^"]*)">([^"]*)<\/colour>/)[3] | blue |
| let | linkedRecordTitleSwedish | js | response.body.match(/<colour _en="([^"]*)" _sv="([^"]*)" _value_en="([^"]*)" _value_sv="([^"]*)">([^"]*)<\/colour>/)[4] | blå |
| let | linkedRecordTitleSwedish | js | response.body.match(/<colour _en="([^"]*)" _sv="([^"]*)" _value_en="([^"]*)" _value_sv="([^"]*)">([^"]*)<\/colour>/)[5] | blue |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[1] | Resource link |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[2] | Resurslänk |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[3] | binary |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[4] | $binaryRecordId |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[5] | image/jpeg |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[6] | GET |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[7] | read |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[8] | binary/$binaryRecordId/master |
| let | linkedRecordTitleSwedish | js | response.body.match(/<master _en="([^"]*)" _sv="([^"]*)"><linkedRecordType>([^"]*)<\/linkedRecordType><linkedRecordId>([^"]*)<\/linkedRecordId><mimeType>([^"]*)<\/mimeType><actionLinks><read><requestMethod>([^"]*)<\/requestMethod><rel>([^"]*)<\/rel><url>[^"]*\/rest\/record\/([^"]*)<\/url><accept>([^"]*)<\/accept><\/read><\/actionLinks><\/master>/)[9] | image/jpeg |
*!

!***> Case 2
| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl} |
| setHeaders | authToken:$adminAuthToken!-
-!Accept: application/vnd.cora.recordList-decorated+json |
| GET | /rest/record/searchResult/fitnesseSearch?searchData=%7B%22name%22%3A%22fitnesseSearch%22%2C%22children%22%3A%5B%7B%22name%22%3A%22include%22%2C%22children%22%3A%5B%7B%22name%22%3A%22includePart%22%2C%22children%22%3A%5B%7B%22name%22%3A%22fitnesseSearchTerm%22%2C%22value%22%3A%22**%22%7D%5D%7D%5D%7D%5D%7D | 200 | Content-Type: application\/vnd\.cora\.recordList-decorated\+json |  |
| let | linkedRecordTitleSwedish | js | response.body.match(/"fitnesseTextVar","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}/)[1] | en text |
| let | linkedRecordTitleEnglish | js | response.body.match(/"fitnesseTextVar","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}/)[2] | a text |
| let | linkedRecordTitleSwedish | js | response.body.match(/"bookTitle","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}/)[1] | Boktitel |
| let | linkedRecordTitleEnglish | js | response.body.match(/"bookTitle","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}/)[2] | Title for the book |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"name":"colour","attributes":{"_value_en":"([^"]*)","_sv":"([^"]*)","_value_sv":"([^"]*)","_en":"([^"]*)"},"value":"([^"]*)"}/)[1] | blue |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"name":"colour","attributes":{"_value_en":"([^"]*)","_sv":"([^"]*)","_value_sv":"([^"]*)","_en":"([^"]*)"},"value":"([^"]*)"}/)[2] | Text för:fitnesseCollectionVarText |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"name":"colour","attributes":{"_value_en":"([^"]*)","_sv":"([^"]*)","_value_sv":"([^"]*)","_en":"([^"]*)"},"value":"([^"]*)"}/)[3] | blå |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"name":"colour","attributes":{"_value_en":"([^"]*)","_sv":"([^"]*)","_value_sv":"([^"]*)","_en":"([^"]*)"},"value":"([^"]*)"}/)[4] | Text for:fitnesseCollectionVarText |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"name":"colour","attributes":{"_value_en":"([^"]*)","_sv":"([^"]*)","_value_sv":"([^"]*)","_en":"([^"]*)"},"value":"([^"]*)"}/)[5] | blue |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[1] | binary |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[2] | $binaryRecordId |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[3] | image/jpeg |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[4] | GET |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[5] | read |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[6] | binary/$binaryRecordId/master |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[7] | image/jpeg |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[8] | Resurslänk |
| let | linkedRecordTitleSwedish | js | response.body.match(/{"children":\[{"name":"linkedRecordType","value":"([^"]*)"},{"name":"linkedRecordId","value":"([^"]*)"},{"name":"mimeType","value":"([^"]*)"}\],"actionLinks":{"read":{"requestMethod":"([^"]*)","rel":"([^"]*)","url":"[^"]*\/rest\/record\/([^"]*)","accept":"([^"]*)"}},"name":"master","attributes":{"_sv":"([^"]*)","_en":"([^"]*)"}}/)[9] | Resource link |
*!

-----

!***> Clean up
!| RecordEndpointFixture |
|authToken|type|id|testDeleteRecord?|getStatusType?|
|$adminAuthToken|fitnesseRecordType|$recordId||OK|
|$adminAuthToken|demo|demoForFitnesse||OK|
|$adminAuthToken|binary|$binaryRecordId||OK|
*!