---
Static
---
!2 Read
 * '''Case 1:''' It must be possible to read a resource in the archive

!***> '''Case 2'''

!define createBinaryGeneric {!-{"name":"binary","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"genericBinary"}]}]},{"name":"originalFileName","value":"sonGokuCloud.jpg"},{"name":"expectedFileSize","value":"110104"}],"attributes":{"type":"generic"}}-!}
!define recordType {binary}
!define createData createBinaryGeneric
!define expectedAnswer {}
!define expectedCreateResult {CREATED}

!define archiveFileName {binary:$createdRecordId-master}
!define archiveVersion1 {v1}
!define archiveVersion2 {v1}

!include -seamless .HelperPages.createRecord

!***> Upload image

(Uses a stream generated at the server)

!| RecordEndpointFixture |
| authToken | type | id | fileName | testUpload? | getStatusType? |
| $adminAuthToken | binary | $createdRecordId | sonGokuCloud.jpg | | OK |

*!
!include -seamless .HelperPages.showFileVersion

Show file structure after storing a new record
!include -seamless .HelperPages.archiveFile

!***> Download image

(Uses a stream generated at the server)

!| RecordEndpointFixture |
| authToken | type | id | resourceName | testDownload? | getContentLength? | getContentDisposition? | getStatusType? |
| $adminAuthToken | binary | $createdRecordId | master | | | | OK |

*!

!***> Clean up created data

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | binary | $createdRecordId | | OK |

*!

*!
