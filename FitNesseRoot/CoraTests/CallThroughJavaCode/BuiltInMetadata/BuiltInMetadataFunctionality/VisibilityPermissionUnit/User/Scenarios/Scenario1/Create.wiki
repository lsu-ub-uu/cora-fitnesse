---
Static
---
!4 Create
#
 * '''Case 1''': User1 should be able to create a published record with a permission unit it have access to
 * '''Case 2''': User1 should not be able to create a published record with a permission unit it does not have access to
 * '''Case 3''': --
 * '''Case 4''': --
 * '''Case 5''':--
#
!***> '''Case 1''' User1 should be able to create a published record with a permission unit it have access to (fitnessePermissionUnit1)
!define currentAuthToken {$adminAuthToken}
!define recordType {fitnesseRecordTypeWithVisibility}
!define createData {!-{"name":"fitnesseGroupWithRecordInfoVisibility","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"fitnesseValidationTypeForRecordTypeWithVisibility"}]},{"name":"visibility","value":"published"},{"name":"permissionUnit","children":[{"name":"linkedRecordType","value":"permissionUnit"},{"name":"linkedRecordId","value":"fitnessePermissionUnit1"}]}]},{"name":"fitnesseTextVar","value":"entext"}]}-!}
!define expectedResponseRegex {"name":"visibility","value":"published" AND "name":"tsVisibility","value":"!-\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z-!"}
!define expectedCreateResult {CREATED}
!define createdRecordId {$createCase1RecordId}

!include -seamless .CoraTests.CallThroughJavaCode.BuiltInMetadata.BuiltInMetadataFunctionality.Visibility.User.Actions.CreateRecordAndEnsureResponse

*!
!***> '''Case 2''' User1 should not be able to create a published record with a permission unit it does not have access to (fitnessePermissionUnit3)
!define recordType {fitnesseRecordTypeWithVisibility}
!define createData {!-{"name":"fitnesseGroupWithRecordInfoVisibility","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"fitnesseValidationTypeForRecordTypeWithVisibility"}]},{"name":"visibility","value":"published"},{"name":"permissionUnit","children":[{"name":"linkedRecordType","value":"permissionUnit"},{"name":"linkedRecordId","value":"fitnessePermissionUnit3"}]}]},{"name":"fitnesseTextVar","value":"entext"}]}-!}
!define createdRecordId {$shouldFailId}
!define expectedCreateResult {FORBIDDEN}

!include -seamless .CoraTests.CallThroughJavaCode.BuiltInMetadata.BuiltInMetadataFunctionality.Visibility.User.Actions.CreateRecord

*!
#!***> '''Case 3''' User2 creating a record with no visibility value should set visibility to its default value (unpublished)
#!define currentAuthToken {$userAuthToken}
#!define createData {!-{"name":"fitnesseGroupWithRecordInfoVisibility","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"fitnesseValidationTypeForRecordTypeWithVisibility"}]}]},{"name":"fitnesseTextVar","value":"en annan text"}]}-!}
#!define expectedResponseRegex {"name":"visibility","value":"unpublished" AND "name":"tsVisibility","value":"!-\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z-!"}
#!define expectedCreateResult {CREATED}
#!define createdRecordId {$createCase3RecordId}
#
#!include -seamless .CoraTests.CallThroughJavaCode.BuiltInMetadata.BuiltInMetadataFunctionality.Visibility.User.Actions.CreateRecordAndEnsureResponse
#
#*!
#!***> '''Case 4''' User2 creating a record with a visibility value other than ''unpublished'' should have this value reverted to the default (unpublished)
#!define currentAuthToken {$userAuthToken}
#!define case4CreateData {!-{"name":"fitnesseGroupWithRecordInfoVisibility","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"fitnesseValidationTypeForRecordTypeWithVisibility"}]},{"name":"visibility","value":"published"}]},{"name":"fitnesseTextVar","value":"en text"}]}-!}
#!define expectedCase4ResponseRegex {"name":"visibility","value":"unpublished" AND "name":"tsVisibility","value":"!-\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z-!"}
#!define expectedCreateResult {CREATED}
#!define createdRecordId {$createCase4RecordId}
#
#!include -seamless .CoraTests.CallThroughJavaCode.BuiltInMetadata.BuiltInMetadataFunctionality.Visibility.User.Actions.CreateRecordAndEnsureResponse
#
#*!
#!***> '''Case 5''' A guest should not be able to create a record regardless of visibility status due to permissionTerm limitation
#!define currentAuthToken {$guestAuthToken}
#!define createData {!-{"name":"fitnesseGroupWithRecordInfoVisibility","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"fitnesseValidationTypeForRecordTypeWithVisibility"}]},{"name":"visibility","value":"published"}]},{"name":"fitnesseTextVar","value":"en text"}]}-!}
#!define expectedCreateResult {FORBIDDEN}
#!define createdRecordId {$createCase5RecordId}
#
#!include -seamless .CoraTests.CallThroughJavaCode.BuiltInMetadata.BuiltInMetadataFunctionality.Visibility.User.Actions.CreateRecord
#*!