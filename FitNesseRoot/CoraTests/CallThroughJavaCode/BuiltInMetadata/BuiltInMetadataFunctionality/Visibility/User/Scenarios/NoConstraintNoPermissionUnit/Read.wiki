---
Static
---
!4 Read
 * '''Case 1''': An admin should be able to read records with any visibility
 * '''Case 2''': A user should only be able to read records it is allowed by visibility permission term (published, unpublished)
 * '''Case 3''': A guest should only be able to read records it is allowed by visibility permission term (published)

!***> '''Case 1''': An admin should be able to read records with any visibility
!define currentAuthToken {$adminAuthToken}
!define expectedUnpublishedStatus {OK}
!define expectedPublishedStatus {OK}
!define expectedHiddenStatus {OK}

!include -seamless .CoraTests.CallThroughJavaCode.BuiltInMetadata.BuiltInMetadataFunctionality.Visibility.User.Actions.ReadRecord

*!
!***> '''Case 2''': A user should only be able to read records it is allowed by visibility permission term (published, unpublished)
!define currentAuthToken {$userAuthToken}
!define expectedUnpublishedStatus {OK}
!define expectedPublishedStatus {OK}
!define expectedHiddenStatus {FORBIDDEN}

!include -seamless .CoraTests.CallThroughJavaCode.BuiltInMetadata.BuiltInMetadataFunctionality.Visibility.User.Actions.ReadRecord

*!
!***> '''Case 3''': A guest should only be able to read published records
!define currentAuthToken {$guestAuthToken}
!define expectedUnpublishedStatus {FORBIDDEN}
!define expectedPublishedStatus {OK}
!define expectedHiddenStatus {FORBIDDEN}

!include -seamless .CoraTests.CallThroughJavaCode.BuiltInMetadata.BuiltInMetadataFunctionality.Visibility.User.Actions.ReadRecord

*!