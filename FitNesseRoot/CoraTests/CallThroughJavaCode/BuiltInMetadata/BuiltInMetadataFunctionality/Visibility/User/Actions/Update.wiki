---
Static
---
# * '''Case 1''': An admin updating a record without providing a visibility value, the visibility value should remain unchanged, retaining the value from the previous version and the timestamp should not be updated.
# * '''Case 2''': An admin updating a record with a new visibility value, the update should successfully apply the provided value and the timestamp should be updated.
# * '''Case 3''': A user updating a record without providing a visibility value, the visibility value should remain unchanged, retaining the value from the previous version.
# * '''Case 4''': A user updating a record with a visibility value different from the existing one, the update should not alter the current visibility value.
#
!***> '''Case 1''' An admin updating a record without providing a visibility value, the visibility value should remain unchanged, retaining the value from the previous version and the timestamp should not be updated.
!define recordType {fitnesseRecordTypeWithVisibility}

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | ${recordType} | $createCase2RecordId | ${case1UpdateData} | $case1UpdateResponse= | OK |

#### Assert visibility and tsVisibility is unchanged when updating with the already existing visibility value (published)
!| script | ExtractSubstringUsingRegex |
| ensure | match found using text | $case1UpdateResponse | and includes and not excludes | ${expectedCase1UpdateResponseRegex} |

*!
!***> '''Case 2''' An admin updating a record with a new visibility value, the update should successfully apply the provided value and the timestamp should be updated.
!define case2UpdateData {!-{"name":"fitnesseGroupWithRecordInfoVisibility","children":[{"name":"recordInfo","children":[{"name":"ignoreOverwriteProtection","value":"true"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"fitnesseValidationTypeForRecordTypeWithVisibility"}]},{"name":"visibility","value":"unpublished"},{"name":"tsVisibility","value":"2025-04-14T08:53:03.010225Z"},{"name":"id","value":"-!$fitnesseWithRecordInfoVisibilityPublishedRecordId!-"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"fitnesseRecordTypeWithVisibility"}]},{"name":"createdBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}]},{"name":"tsCreated","value":"2025-04-14T08:53:03.010323Z"},{"name":"updated","repeatId":"0","children":[{"name":"updatedBy","children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}]},{"name":"tsUpdated","value":"2025-04-14T08:53:03.010323Z"}]}]},{"name":"fitnesseTextVar","value":"entext"}]}-!}
!define recordType {fitnesseRecordTypeWithVisibility}

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | ${recordType} | $createCase2RecordId | ${case2UpdateData} | $case2UpdateResponse= | OK |

#### Save the updated timestamp so it can be used to assert update does not change this value
!| script | ExtractSubstringUsingRegex |
| $updateCase2TsVisibility= | get substring using text | $case2UpdateResponse | and regex | "name":"tsVisibility","value":"\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z" |

#### Assert visibility and tsVisibility is changed when updating with a new visibility value (hidden)
!| script | ExtractSubstringUsingRegex |
| ensure | match found using text | $case2UpdateResponse | and includes and not excludes | ${expectedCase2UpdateResponseRegex} |

*!
!***> '''Case 3''' A user updating a record without providing a visibility value, the visibility value should remain unchanged, retaining the value from the previous version.
!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $userAuthToken | ${recordType} | $createCase2RecordId | ${case3UpdateData} | $case3UpdateResponse= | OK |

!| script | ExtractSubstringUsingRegex |
| ensure | match found using text | $case3UpdateResponse | and includes and not excludes | ${expectedCase3UpdateResponseRegex} |

*!
!***> '''Case 4''' A user updating a record with a visibility value different from the existing one (published), the update should not alter the current visibility value (unpublished) or the timestamp.
!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $userAuthToken | ${recordType} | $createCase2RecordId | ${case4UpdateData} | $case4UpdateResponse= | OK |

#### Assert visibility and tsVisibility is unchanged when updating with the already existing visibility value (hidden)
!| script | ExtractSubstringUsingRegex |
| ensure | match found using text | $case4UpdateResponse | and includes and not excludes | ${expectedCase4UpdateResponseRegex} |
*!
