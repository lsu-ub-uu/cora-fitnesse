---
Test
---
!2 Visibility tests
!style_note[Scenario: Visibility is set up to have ''recordPartConstraint'' set to '''WRITE''' and Admin have write permissions for visibility whereas User does not]

!3 CRUD tests
!style_note[Ensure that the visibility setting behavior relies on the currently active permissions.]

!include -seamless .CoraTests.CallThroughJavaCode.BuiltInMetadata.BuiltInMetadataFunctionality.Visibility.User.Actions.Create
----
!include -seamless .CoraTests.CallThroughJavaCode.BuiltInMetadata.BuiltInMetadataFunctionality.Visibility.User.Actions.Read
----
!include -seamless .CoraTests.CallThroughJavaCode.BuiltInMetadata.BuiltInMetadataFunctionality.Visibility.User.Actions.Update
----
!include -seamless .CoraTests.CallThroughJavaCode.BuiltInMetadata.BuiltInMetadataFunctionality.Visibility.User.Actions.Delete
----
!***> TODO STUFF
'''TODO:''' 
1. add variable with record part read constraint to record type
2. add permissionTerm

!4 Read

!4 List
 data utan visibility, du får föregående visibility
 data med visibility, ok
 data utan visibility, ej rättighet
 data med visibility, ej rättighet

!4 Search


!3 Level 2, permission units and no record part constraint for visibility

!3 Level 3, write record part constraint for visibility

!3 Level 4, visibility and permissionUnits

!3 Level 5, write record part constraint for visibility and permissionUnits


!4 Extra test: test if a record is published, eventual readRecorPartPermissions are take it into account.

*!