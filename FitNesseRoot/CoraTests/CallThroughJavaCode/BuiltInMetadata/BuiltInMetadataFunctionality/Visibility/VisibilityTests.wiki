---
Static
---
!2 Visibility tests

'''TODO:''' 
1. add variable with record part read constraint to record type
2. add permissionTerm

recordType.useVisibility == true

!3 Level 1, no permission units and no record part constraint for visibility

!4 Create
 * '''Case 1''': data utan visibility, ok
 * '''Case 2''': data med visibility, ok
 * '''Case 3''': data utan visibility, ej rättighet
 * '''Case 4''': data med visibility, ej rättighet
 
!***> '''Case 1'''
# Instance with missing visibility field
!define createData {!-{"name":"fitnesseGroupWithRecordInfoVisibility","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"fitnesseValidationTypeForRecordTypeWithVisibility"}]}]},{"name":"fitnesseTextVar","value":"en annan text"}]}-!}
!define recordType {fitnesseRecordTypeWithVisibility}
!| ChildComparerFixture |
| authToken | type | json | testCreateAndStoreRecord? | getStatusType? | getCreatedId? |
| $adminAuthToken | ${recordType} | ${createData} |  | ${expectedCreateResult} | $fitnesseWithRecordInfoVisibilityMissingRecordId= |
*!
!***> '''Case2'''
# Instance with visibility set to published
!define createData {!-{"name":"fitnesseGroupWithRecordInfoVisibility","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"fitnesseValidationTypeForRecordTypeWithVisibility"}]},{"name":"visibility","value":"published"}]},{"name":"fitnesseTextVar","value":"en text"}]}-!}
!define recordType {fitnesseRecordTypeWithVisibility}
!| ChildComparerFixture |
| authToken | type | json | testCreateAndStoreRecord? | getStatusType? | getCreatedId? |
| $adminAuthToken | ${recordType} | ${createData} |  | ${expectedCreateResult} | $fitnesseWithRecordInfoVisibilityPublishedRecordId= |
*!

!4 Update
 data utan visibility, du får föregående visibility
 data med visibility, ok
 data utan visibility, ej rättighet
 data med visibility, ej rättighet

!4 Read

!4 List
 data utan visibility, du får föregående visibility
 data med visibility, ok
 data utan visibility, ej rättighet
 data med visibility, ej rättighet

!4 Search


!3 Level 2, permission units and no record part constraint for visibility

!3 Level 3, write record part constraint for visibility

!3 Level 4, visibility and permissionUnits

!3 Level 5, write record part constraint for visibility and permissionUnits


!4 Extra test: test if a record is published, eventual readRecorPartPermissions are take it into account.

