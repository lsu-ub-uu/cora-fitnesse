---
Test
---
!2 Visibility tests

'''TODO:''' 
1. add variable with record part read constraint to record type
2. add permissionTerm

!4 Create
 * '''Case 1''': Creating a record with no visibility value should set visibility to its default value (unpublished)
 * '''Case 2''': Creating a record with a visibility value should have this value in its data after creation
 * '''Case 3''': A guest creating a record with no visibility value should set visibility to its default value (unpublished)
 * '''Case 4''': A guest Creating a record with a visibility value should have this value reverted to the default (unpublished)
 
!***> '''Case 1''' Creating a record with no visibility value should set visibility to its default value (unpublished)
# Instance with missing visibility field
!define createData {!-{"name":"fitnesseGroupWithRecordInfoVisibility","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"fitnesseValidationTypeForRecordTypeWithVisibility"}]}]},{"name":"fitnesseTextVar","value":"en annan text"}]}-!}
!define recordType {fitnesseRecordTypeWithVisibility}
!| ChildComparerFixture |
| authToken | type | json | testCreateAndStoreRecord? | getStatusType? | getCreatedId? |
| $adminAuthToken | ${recordType} | ${createData} | $unpublishedResponseBody= | ${expectedCreateResult} | $fitnesseWithRecordInfoVisibilityMissingRecordId= |

!define expectedUnpublishedResponseRegex {(?=.*"name":"visibility","value":"unpublished")(?=.*"name":"tsVisibility","value":"!-\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z-!")}
!| script | ExtractSubstringUsingRegex |
| ensure | match found using text | $unpublishedResponseBody | and regex | ${expectedUnpublishedResponseRegex} |

*!
!***> '''Case 2''' Creating a record with a visibility value should have this value in its data after creation
# Instance with visibility set to published
!define createData {!-{"name":"fitnesseGroupWithRecordInfoVisibility","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"fitnesseValidationTypeForRecordTypeWithVisibility"}]},{"name":"visibility","value":"published"}]},{"name":"fitnesseTextVar","value":"en text"}]}-!}
!define recordType {fitnesseRecordTypeWithVisibility}
!| ChildComparerFixture |
| authToken | type | json | testCreateAndStoreRecord? | getStatusType? | getCreatedId? |
| $adminAuthToken | ${recordType} | ${createData} | $publishedResponseBody= | ${expectedCreateResult} | $fitnesseWithRecordInfoVisibilityPublishedRecordId= |

!define expectedPublishedResponseRegex {(?=.*"name":"visibility","value":"published")(?=.*"name":"tsVisibility","value":"!-\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z-!")}
!| script | ExtractSubstringUsingRegex |
| ensure | match found using text | $publishedResponseBody | and regex | ${expectedPublishedResponseRegex} |

*!
!***> '''Case 3''' A guest creating a record with no visibility value should set visibility to its default value (unpublished)
!define createData {!-{"name":"fitnesseGroupWithRecordInfoVisibility","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"fitnesseValidationTypeForRecordTypeWithVisibility"}]}]},{"name":"fitnesseTextVar","value":"en annan text"}]}-!}
!define recordType {fitnesseRecordTypeWithVisibility}
!| ChildComparerFixture |
| authToken | type | json | testCreateAndStoreRecord? | getStatusType? | getCreatedId? |
| $guestToken | ${recordType} | ${createData} | $unpublishedGuestResponseBody= | ${expectedCreateResult} | $fitnesseWithRecordInfoVisibilityMissingRecordId= |

!define expectedUnpublishedResponseRegex {(?=.*"name":"visibility","value":"unpublished")(?=.*"name":"tsVisibility","value":"!-\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z-!")}
!| script | ExtractSubstringUsingRegex |
| ensure | match found using text | $unpublishedGuestResponseBody | and regex | ${expectedUnpublishedResponseRegex} |

*!
!***> '''Case 4''' A guest Creating a record with a visibility value should have this value reverted to the default (unpublished)
!define createData {!-{"name":"fitnesseGroupWithRecordInfoVisibility","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"fitnesseValidationTypeForRecordTypeWithVisibility"}]},{"name":"visibility","value":"published"}]},{"name":"fitnesseTextVar","value":"en text"}]}-!}
!define recordType {fitnesseRecordTypeWithVisibility}
!| ChildComparerFixture |
| authToken | type | json | testCreateAndStoreRecord? | getStatusType? | getCreatedId? |
| $guestToken | ${recordType} | ${createData} | $publishedGuestResponseBody= | ${expectedCreateResult} | $fitnesseWithRecordInfoVisibilityPublishedRecordId= |

!define expectedPublishedResponseRegex {(?=.*"name":"visibility","value":"unpublished")(?=.*"name":"tsVisibility","value":"!-\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z-!")}
!| script | ExtractSubstringUsingRegex |
| ensure | match found using text | $publishedGuestResponseBody | and regex | ${expectedPublishedGuestResponseRegex} |

*!

!4 Update
 data utan visibility, du får föregående visibility
 data med visibility, ok
 data utan visibility, ej rättighet
 data med visibility, ej rättighet

!4 Read

!4 List
 data utan visibility, du får föregående visibility
 data med visibility, ok
 data utan visibility, ej rättighet
 data med visibility, ej rättighet

!4 Search


!3 Level 2, permission units and no record part constraint for visibility

!3 Level 3, write record part constraint for visibility

!3 Level 4, visibility and permissionUnits

!3 Level 5, write record part constraint for visibility and permissionUnits


!4 Extra test: test if a record is published, eventual readRecorPartPermissions are take it into account.

