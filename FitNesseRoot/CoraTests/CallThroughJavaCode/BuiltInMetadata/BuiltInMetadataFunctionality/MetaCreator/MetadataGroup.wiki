---
Test
---
!contents -R2 -g -p -f -h
| import |
| se.uu.ub.cora.fitnesseintegration |

!1 Testing metacompleter and creator for metadataGroup
If text ids are not provided when creating a metadataGroup, the text ids are added and the texts are created in storage if they do not already exist.

Read texts to make sure they do not exist

!***> Read fitnesseBookGroupText and fitnesseBookGroupDefText

!| RecordEndpointFixture |
| id | type | testReadRecord? | getStatusType? |
| fitnesseBookGroupText | text | | NOT_FOUND |
| fitnesseBookGroupDefText | text | | NOT_FOUND |

*!
When a metadataGroup is created, two presentationGroups are automatically created, one for input and one for output.

Read pGroups to make sure they do not exist

!***> Read fitnesseBookPGroup and fitnesseBookOutputPGroup

!| RecordEndpointFixture |
| id | type | testReadRecord? | getStatusType? |
| fitnesseBookPGroup | presentation | | NOT_FOUND |
| fitnesseBookOutputPGroup | presentation | | NOT_FOUND |

*!
!2 Create two new metadataTextVariables to use as children in metadataGroup
!***> Create a new metadataTextVariable (fitnesseTestTextVar and testTitleTextVar)

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"fitnesseTestTextVar"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataTextVariable"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"fintnesseTest"},{"name":"regEx","value":"(^[0-9A-Za-z:-_]{2,50}$)"}],"name":"metadata","attributes":{"type":"textVariable"}} | | CREATED |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"fitnesseBookCollection"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataItemCollection"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"fitnesseBook"},{"children":[{"repeatId":"0","children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"aFitnesseItem"}],"name":"ref"}],"name":"collectionItemReferences"}],"name":"metadata","attributes":{"type":"itemCollection"}} | | CREATED |

*!
!2 Create a new metadataGroup
!***> Create a new metadataGroup (fitnesseBookGroup)

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"fitnesseBookGroup"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"fitnesseBook"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"recordInfoGroup"}],"name":"ref"}],"name":"childReference"},{"repeatId":"1","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"fitnesseTestTextVar"}],"name":"ref"}],"name":"childReference"},{"repeatId":"2","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"fitnesseBookCollectionVar"}],"name":"ref"}],"name":"childReference"}],"name":"childReferences"}],"name":"metadata","attributes":{"type":"group"}} | | CREATED |

*!
Read fitnesseBookGroup to see that links to texts have been added to the metadata

!***> Read fitnesseBookGroup

!| RecordEndpointFixture |
| id | type | testReadRecord? | getStatusType? |
| fitnesseBookGroup | metadata | =~/"name":"linkedRecordId","value":"fitnesseBookGroupText".*"name":"textId".*"name":"linkedRecordId","value":"fitnesseBookGroupDefText".*"name":"defTextId"/ | OK |

*!
Read texts again to see that they have been created

!***> Read fitnesseBookGroupText and fitnesseBookGroupDefText

!| RecordEndpointFixture |
| id | type | testReadRecord? | getStatusType? |
| fitnesseBookGroupText | text | | OK |
| fitnesseBookGroupDefText | text | | OK |

*!
Read presentationGroups again to see that they have been created

!***> Read fitnesseBookPGroup and fitnesseBookOutputPGroup

!| RecordEndpointFixture |
| id | type | testReadRecord? | getStatusType? |
| fitnesseBookPGroup | presentation | | OK |
| fitnesseBookOutputPGroup | presentation | | OK |

*!
!***> Load fitnesseBookOutputPGroup to use in tests

!| RecordEndpointFixture |
| type | id | testReadRecordAndStoreJson? |
| presentation | fitnesseBookOutputPGroup | |

*!
!***> Check children in fitnesseBookOutputPGroup

!| PresentationGroupFixture |
| linkedRecordType | linkedRecordId | numberOfRefs? |
| presentation | recordInfoOutputPGroup | 1 |
| presentation | fitnesseTestOutputPVar | 1 |
| presentation | fitnesseBookOutputPCollVar | 1 |

*!
!***> Load fitnesseBookPGroup to use in tests

!| RecordEndpointFixture |
| type | id | testReadRecordAndStoreJson? |
| presentation | fitnesseBookPGroup | |

*!
!***> Check children in fitnesseBookPGroup

!| PresentationGroupFixture |
| linkedRecordType | linkedRecordId | numberOfRefs? |
| presentation | recordInfoPGroup | 1 |
| presentation | fitnesseTestPVar | 1 |
| presentation | fitnesseBookPCollVar | 1 |

*!
!1 Reset testdata
Remove data created for this test

!***> Delete created metadataGroup, presentationGroups and texts

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | presentation | fitnesseBookPGroup | | OK |
| $adminAuthToken | presentation | fitnesseBookOutputPGroup | | OK |
| $adminAuthToken | metadata | fitnesseBookGroup | | OK |
| $adminAuthToken | text | fitnesseBookGroupText | | OK |
| $adminAuthToken | text | fitnesseBookGroupDefText | | OK |
| $adminAuthToken | presentation | fitnesseTestPVar | | OK |
| $adminAuthToken | presentation | fitnesseTestOutputPVar | | OK |
| $adminAuthToken | metadata | fitnesseTestTextVar | | OK |
| $adminAuthToken | presentation | fitnesseBookOutputPCollVar | | OK |
| $adminAuthToken | presentation | fitnesseBookPCollVar | | OK |
| $adminAuthToken | metadata | fitnesseBookCollectionVar | | OK |
| $adminAuthToken | metadata | fitnesseBookCollection | | OK |
| $adminAuthToken | text | fitnesseBookCollectionText | | OK |
| $adminAuthToken | text | fitnesseBookCollectionDefText | | OK |
| $adminAuthToken | metadata | aFitnesseItem | | OK |
| $adminAuthToken | text | aFitnesseItemText | | OK |
| $adminAuthToken | text | aFitnesseItemDefText | | OK |
| $adminAuthToken | text | fitnesseTestTextVarText | | OK |
| $adminAuthToken | text | fitnesseTestTextVarDefText | | OK |
| $adminAuthToken | text | fitnesseBookCollectionVarDefText | | OK |
| $adminAuthToken | text | fitnesseBookCollectionVarText | | OK |

*!
!2 Create a new metadataGroup with excludePGroupCreation option set to true
!***> Create a new metadataGroup (fitnesseWithNoPGroupsBookGroup)

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"fitnesseWithNoPGroupsBookGroup"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"fitnesseBook"},{"name":"excludePGroupCreation","value":"true"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"recordInfoGroup"}],"name":"ref"}],"name":"childReference"}],"name":"childReferences"}],"name":"metadata","attributes":{"type":"group"}} | | CREATED |

*!
Read fitnesseWithNoPGroupsBookGroup to see that links to texts have been added to the metadata

!***> Read fitnesseWithNoPGroupsBookGroup

!| RecordEndpointFixture |
| id | type | testReadRecord? | getStatusType? |
| fitnesseWithNoPGroupsBookGroup | metadata | =~/"name":"linkedRecordId","value":"fitnesseWithNoPGroupsBookGroupText".*"name":"textId".*"name":"linkedRecordId","value":"fitnesseWithNoPGroupsBookGroupDefText".*name":"defTextId"/ | OK |

*!
Read texts again to see that they have been created

!***> Read fitnesseWithNoPGroupsBookGroupText and fitnesseWithNoPGroupsBookGroupDefText

!| RecordEndpointFixture |
| id | type | testReadRecord? | getStatusType? |
| fitnesseWithNoPGroupsBookGroupText | text | | OK |
| fitnesseWithNoPGroupsBookGroupDefText | text | | OK |

*!
Read presentationGroups to see that they have NOT been created

!***> Read fitnesseWithNoPGroupsBookPGroup and fitnesseWithNoPGroupsBookOutputPGroup

!| RecordEndpointFixture |
| id | type | testReadRecord? | getStatusType? |
| fitnesseWithNoPGroupsBookPGroup | presentation | | NOT_FOUND |
| fitnesseWithNoPGroupsBookOutputPGroup | presentation | | NOT_FOUND |

*!
!1 Reset testdata
Remove data created for this test

!***> Delete created metadataGroup, presentationGroups and texts

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | metadata | fitnesseWithNoPGroupsBookGroup | | OK |
| $adminAuthToken | text | fitnesseWithNoPGroupsBookGroupText | | OK |
| $adminAuthToken | text | fitnesseWithNoPGroupsBookGroupDefText | | OK |

*!
