!contents -R2 -g -p -f -h
| import |
| se.uu.ub.cora.fitnesseintegration |

!1 Metadata consistency test
A metadataGroup that has a parent cannot contain children that are not present i the parent metadataGroup

!***> Create textVariables testCakeNameTextVar and testCakeColourTextVar

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testCakeNameTextVar"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataTextVariable"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testCakeName"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"someTestText"}],"name":"textId"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"someTestDefText"}],"name":"defTextId"},{"name":"regEx","value":".*"}],"name":"metadata","attributes":{"type":"textVariable"}} | | CREATED |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testCakeColourTextVar"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataTextVariable"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testCakeColour"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"someTestText"}],"name":"textId"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"someTestDefText"}],"name":"defTextId"},{"name":"regEx","value":".*"}],"name":"metadata","attributes":{"type":"textVariable"}} | | CREATED |

*!
Create testCakeGroup, which contains child testCakeNameTextVar

!***> Create a metadataGroup testCakeGroup

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testCakeGroup"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"someTestText"}],"name":"textId"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"someTestDefText"}],"name":"defTextId"},{"name":"nameInData","value":"testCake"},{"name":"excludePGroupCreation","value":"true"},{"children":[{"repeatId":"1","children":[{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testCakeNameTextVar"}],"name":"ref"},{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"}],"name":"childReference"}],"name":"childReferences"}],"name":"metadata","attributes":{"type":"group"}} | | CREATED |

*!
Try to create testChocolateCake with two children, one that does not exist in parent group testCakeGroup. This should fail.

!***> Create a metadataGroups testChocolateCake

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testCakeChocolateGroup"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"someTestText"}],"name":"textId"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"someTestDefText"}],"name":"defTextId"},{"name":"nameInData","value":"testCake"},{"name":"excludePGroupCreation","value":"true"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testCakeGroup"}],"name":"refParentId"},{"children":[{"repeatId":"1","children":[{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testCakeNameTextVar"}],"name":"ref"},{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"}],"name":"childReference"},{"repeatId":"2","children":[{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testCakeColourTextVar"}],"name":"ref"},{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"}],"name":"childReference"}],"name":"childReferences"}],"name":"metadata","attributes":{"type":"group"}} | Error creating new record for recordType: metadataGroup. Data is not valid: childItem: testCakeColour does not exist in parent | BAD_REQUEST |

*!
Create testChocolateCakeGroup, this time with only the child that is present in the parent. This is ok.

!***> Create a metadataGroup testChocolateCakeGroup

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testCakeChocolateGroup"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"someTestText"}],"name":"textId"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"someTestDefText"}],"name":"defTextId"},{"name":"nameInData","value":"testCake"},{"name":"excludePGroupCreation","value":"true"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testCakeGroup"}],"name":"refParentId"},{"children":[{"repeatId":"1","children":[{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testCakeNameTextVar"}],"name":"ref"},{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"}],"name":"childReference"}],"name":"childReferences"}],"name":"metadata","attributes":{"type":"group"}} | | CREATED |

*!
Update  testChocolateCakeGroup, trying to add the child that does not exist in the parent. This should fail.

!***> Update metadataGroup testChocolateCakeGroup

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | metadata | testCakeChocolateGroup | {"children":[{"children":[{"name":"id","value":"testCakeChocolateGroup"},{"children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"metadata"}],"name":"type"},{"children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}],"name":"createdBy"},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testCake"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"someTestText"}],"name":"textId"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"someTestDefText"}],"name":"defTextId"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testCakeGroup"}],"name":"refParentId"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testCakeNameTextVar"}],"name":"ref"}],"name":"childReference"},{"repeatId":"1","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testCakeColourTextVar"}],"name":"ref"}],"name":"childReference"}],"name":"childReferences"}],"name":"metadata","attributes":{"type":"group"}} | Error updating record with recordType: metadataGroup and recordId: testCakeChocolateGroup. Data is not valid: childItem: testCakeColour does not exist in parent | BAD_REQUEST |

*!
Update testCakeGroup and add the extra child that we want to add to testChocolateCakeGroup

!***> Update metadataGroup testCakeGroup

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | metadata | testCakeGroup | {"children":[{"children":[{"name":"id","value":"testCakeGroup"},{"children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"metadata"}],"name":"type"},{"children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}],"name":"createdBy"},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testCake"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"someTestText"}],"name":"textId"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"someTestDefText"}],"name":"defTextId"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testCakeNameTextVar"}],"name":"ref"}],"name":"childReference"},{"repeatId":"1","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testCakeColourTextVar"}],"name":"ref"}],"name":"childReference"}],"name":"childReferences"}],"name":"metadata","attributes":{"type":"group"}} | | OK |

*!
Update testChocolateCakeGroup again, adding the extra child. This time it should be ok, since we also added it to the parent.

!***> Update metadataGroup testChocolateCakeGroup again

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | metadata | testCakeChocolateGroup | {"children":[{"children":[{"name":"id","value":"testCakeChocolateGroup"},{"children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"metadata"}],"name":"type"},{"children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}],"name":"createdBy"},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testCake"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"someTestText"}],"name":"textId"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"someTestDefText"}],"name":"defTextId"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testCakeGroup"}],"name":"refParentId"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testCakeNameTextVar"}],"name":"ref"}],"name":"childReference"},{"repeatId":"1","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testCakeColourTextVar"}],"name":"ref"}],"name":"childReference"}],"name":"childReferences"}],"name":"metadata","attributes":{"type":"group"}} | | OK |

*!
!2 Clean up created data
!***> Clean up created data

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | metadata | testCakeChocolateGroup | | OK |
| $adminAuthToken | metadata | testCakeGroup | | OK |
| $adminAuthToken | presentation | testCakeNamePVar | | OK |
| $adminAuthToken | presentation | testCakeNameOutputPVar | | OK |
| $adminAuthToken | presentation | testCakeColourPVar | | OK |
| $adminAuthToken | presentation | testCakeColourOutputPVar | | OK |
| $adminAuthToken | metadata | testCakeNameTextVar | | OK |
| $adminAuthToken | metadata | testCakeColourTextVar | | OK |
| $adminAuthToken | text | someTestText | | OK |
| $adminAuthToken | text | someTestDefText | | OK |

*!
