---
Test
---
add tests for:

 * searchTerms connected to choice from a collection

!1 Testing search type final
Searching in Cora is based on two parts, retrieving specific data from a record for indexing, and searching in the indexed data. The data that is to be retrieved from a record is controlled by metadata, more precisely when a defined variable is added to a metadataGroup, a link to a collectIndexTerm may also be added indicating that this variable is to be retrieved when collecting data for indexing.

The example for this test will use testNews as recordType.

!2 Create metadata for data to index
Basic layout of testNews

| comment | |
| testNewsGroup | |
| | recordInfoGroup (1-1) | |
| | testNewsTitleTextVar (1-1) > testNewsTitleIndexTerm | |
| | testNewsSubTitleTextVar (0-X) > testNewsSubTitleIndexTerm | |
| | testNewsSectionGroup (0-X) | |
| | | testNewsHeadingTextVar (1-1) > testNewsHeadingIndexTerm |
| | testNewsContentTextVar (0-1) > testNewsContentStringIndexTerm & testNewsContentTextIndexTerm | |

!***> Create metadata for recordType testNews

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | recordType | {"children":[{"name":"abstract","value":"false"},{"children":[{"name":"id","value":"testNews"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"recordType"}],"name":"validationType"}],"name":"recordInfo"},{"name":"userSuppliedId","value":"true"},{"repeatId":"0","name":"groupOfRecordType","value":"metadata"},{"name":"public","value":"false"},{"name":"storeInArchive","value":"false"}],"name":"recordType"} | | CREATED |
| $adminAuthToken | validationType | {"name":"validationType","children":[{"name":"recordInfo","children":[{"name":"id","value":"testNews"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"validationType"}],"name":"validationType"}]},{"name":"textId","children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"fitnesseText"}]},{"name":"defTextId","children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"fitnesseText"}]},{"name":"newMetadataId","children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testNewsNewGroup"}]},{"name":"metadataId","children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testNewsGroup"}]},{"name":"newPresentationFormId","children":[{"name":"linkedRecordType","value":"presentation"},{"name":"linkedRecordId","value":"recordTypePGroup"}]},{"name":"presentationFormId","children":[{"name":"linkedRecordType","value":"presentation"},{"name":"linkedRecordId","value":"recordTypePGroup"}]},{"name":"validatesRecordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testNews"}]}]} | | CREATED |


*!
!***> Create metadataTextVariable testNewsTitleTextVar, testNewsSubTitleTextVar, testNewsHeadingTextVar

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testNewsTitleTextVar"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataTextVariable"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNewsTitle"},{"name":"regEx","value":"(^[0-9A-Za-z:-_\\s]{2,50}$)"}],"name":"metadata","attributes":{"type":"textVariable"}} | | CREATED |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testNewsSubTitleTextVar"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataTextVariable"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNewsSubTitle"},{"name":"regEx","value":"(^[0-9A-Za-z:-_\\s]{2,50}$)"}],"name":"metadata","attributes":{"type":"textVariable"}} | | CREATED |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testNewsHeadingTextVar"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataTextVariable"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNewsHeading"},{"name":"regEx","value":"(^[0-9A-Za-z:-_\\s]{2,50}$)"}],"name":"metadata","attributes":{"type":"textVariable"}} | | CREATED |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testNewsContentTextVar"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataTextVariable"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNewsContent"},{"name":"regEx","value":"(^[0-9A-Za-z:-_\\s]{2,500}$)"}],"name":"metadata","attributes":{"type":"textVariable"}} | | CREATED |

*!
!***> Create collectIndexTerms testNewsTitleIndexTerm, testNewsSubTitleIndexTerm, testNewsHeadingIndexTerm

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | collectTerm | {"children":[{"children":[{"name":"id","value":"testNewsTitleIndexTerm"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"collectIndexTerm"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNewsTitleIndexTerm"},{"children":[{"name":"indexFieldName","value":"newsTitle"},{"name":"indexType","value":"indexTypeText"}],"name":"extraData"}],"name":"collectTerm","attributes":{"type":"index"}} | | CREATED |
| $adminAuthToken | collectTerm | {"children":[{"children":[{"name":"id","value":"testNewsSubTitleIndexTerm"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"collectIndexTerm"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNewsSubTitleIndexTerm"},{"children":[{"name":"indexFieldName","value":"newsSubTitle"},{"name":"indexType","value":"indexTypeText"}],"name":"extraData"}],"name":"collectTerm","attributes":{"type":"index"}} | | CREATED |
| $adminAuthToken | collectTerm | {"children":[{"children":[{"name":"id","value":"testNewsHeadingIndexTerm"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"collectIndexTerm"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNewsHeadingIndexTerm"},{"children":[{"name":"indexFieldName","value":"newsHeading"},{"name":"indexType","value":"indexTypeText"}],"name":"extraData"}],"name":"collectTerm","attributes":{"type":"index"}} | | CREATED |

*!
!***> Create collectIndexTerms testNewsContentStringIndexTerm and testNewsContentTextIndexTerm - different index types

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | collectTerm | {"children":[{"children":[{"name":"id","value":"testNewsContentStringIndexTerm"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"collectIndexTerm"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNewsContentStringIndexTerm"},{"children":[{"name":"indexFieldName","value":"newsContent"},{"name":"indexType","value":"indexTypeString"}],"name":"extraData"}],"name":"collectTerm","attributes":{"type":"index"}} | | CREATED |
| $adminAuthToken | collectTerm | {"children":[{"children":[{"name":"id","value":"testNewsContentTextIndexTerm"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"collectIndexTerm"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNewsContentTextIndexTerm"},{"children":[{"name":"indexFieldName","value":"newsContent"},{"name":"indexType","value":"indexTypeText"}],"name":"extraData"}],"name":"collectTerm","attributes":{"type":"index"}} | | CREATED |

*!
!***> Create metadataGroup testNewsSectionGroup

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testNewsSectionGroup"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNewsSectionGroup"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testNewsHeadingTextVar"}],"name":"ref"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testNewsHeadingIndexTerm"}],"name":"childRefCollectTerm","attributes":{"type":"index"}}],"name":"childReference"}],"name":"childReferences"}],"name":"metadata","attributes":{"type":"group"}} | | CREATED |

*!
!***> Add testNewsTitleTextVar to  autocreated testNews(New)Group with a link to testNewsTitleSearchTerm

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | metadata | testNewsNewGroup | {"children":[{"children":[{"name":"id","value":"testNewsNewGroup"},{"children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"metadata"}],"name":"type"},{"children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}],"name":"createdBy"},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNews"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"testNewsNewGroupText"}],"name":"textId"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"testNewsNewGroupDefText"}],"name":"defTextId"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"recordInfoNewGroup"}],"name":"ref"}],"name":"childReference"},{"repeatId":"1","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testNewsTitleTextVar"}],"name":"ref"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testNewsTitleIndexTerm"}],"name":"childRefCollectTerm","attributes":{"type":"index"}}],"name":"childReference"},{"repeatId":"2","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"X"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testNewsSubTitleTextVar"}],"name":"ref"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testNewsSubTitleIndexTerm"}],"name":"childRefCollectTerm","attributes":{"type":"index"}}],"name":"childReference"},{"repeatId":"3","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"X"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testNewsSectionGroup"}],"name":"ref"}],"name":"childReference"},{"repeatId":"4","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testNewsContentTextVar"}],"name":"ref"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testNewsContentStringIndexTerm"}],"name":"childRefCollectTerm","attributes":{"type":"index"}},{"repeatId":"1","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testNewsContentTextIndexTerm"}],"name":"childRefCollectTerm","attributes":{"type":"index"}}],"name":"childReference"}],"name":"childReferences"},{"name":"excludePGroupCreation","value":"true"}],"name":"metadata","attributes":{"type":"group"}} | | OK |
| $adminAuthToken | metadata | testNewsGroup | {"children":[{"children":[{"name":"id","value":"testNewsGroup"},{"children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"metadata"}],"name":"type"},{"children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}],"name":"createdBy"},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNews"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"testNewsGroupText"}],"name":"textId"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"testNewsGroupDefText"}],"name":"defTextId"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"recordInfoGroup"}],"name":"ref"}],"name":"childReference"},{"repeatId":"1","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testNewsTitleTextVar"}],"name":"ref"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testNewsTitleIndexTerm"}],"name":"childRefCollectTerm","attributes":{"type":"index"}}],"name":"childReference"},{"repeatId":"2","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"X"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testNewsSubTitleTextVar"}],"name":"ref"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testNewsSubTitleIndexTerm"}],"name":"childRefCollectTerm","attributes":{"type":"index"}}],"name":"childReference"},{"repeatId":"3","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"X"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testNewsSectionGroup"}],"name":"ref"}],"name":"childReference"},{"repeatId":"4","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testNewsContentTextVar"}],"name":"ref"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testNewsContentStringIndexTerm"}],"name":"childRefCollectTerm","attributes":{"type":"index"}},{"repeatId":"1","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testNewsContentTextIndexTerm"}],"name":"childRefCollectTerm","attributes":{"type":"index"}}],"name":"childReference"}],"name":"childReferences"},{"name":"excludePGroupCreation","value":"true"}],"name":"metadata","attributes":{"type":"group"}} | | OK |

*!
A search in Cora needs metadata for the searchForm, a fully defined metadataGroup, and a fully defined presentation (not yet added):

!2 Create metadata for a new search
Three different parts are needed to perform a search: An instance of recordType search, containing a list of recordTypes to search in and a link to a metadataGroup. The second part is the metadataGroup (linked from search),!-
-!its child metadataGroups and the metadataTextVariables defining the search parameters that can be used in this search. The third part is the searchTerms which are read based on the nameInData from each search parameter, and contains information about the indexType that is used to index the data. All this information is used to compose the search query correctly.

!3 Create metadataTextVariables and metadataGroups
!***> Create metadataTextVariable (testSearchTitleTextVar) Note, nameInData is must be the id of the searchTerm we want to search in

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testSearchTitleTextVar"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataTextVariable"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNewsTitleSearchTerm"},{"name":"regEx","value":".*"}],"name":"metadata","attributes":{"type":"textVariable"}} | | CREATED |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testSearchSubTitleTextVar"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataTextVariable"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNewsSubTitleSearchTerm"},{"name":"regEx","value":".*"}],"name":"metadata","attributes":{"type":"textVariable"}} | | CREATED |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testSearchHeadingTextVar"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataTextVariable"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNewsHeadingSearchTerm"},{"name":"regEx","value":".*"}],"name":"metadata","attributes":{"type":"textVariable"}} | | CREATED |

*!
!***> Create metadataTextVariable testSearchContentStringTextVar and testSearchContentTextTextVar. Note, nameInData is must be the id of the searchTerm we want to search in

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testSearchContentStringTextVar"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataTextVariable"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNewsContentStringSearchTerm"},{"name":"regEx","value":".*"}],"name":"metadata","attributes":{"type":"textVariable"}} | | CREATED |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testSearchContentTextTextVar"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataTextVariable"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testNewsContentTextSearchTerm"},{"name":"regEx","value":".*"}],"name":"metadata","attributes":{"type":"textVariable"}} | | CREATED |

*!
!***> Create a metadataGroup(testNewsSearchIncludePartGroup, testNewsSearchIncludeGroup, testNewsSearchGroup, testPaginatedNewsGroup)  

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testNewsSearchIncludePartGroup"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"includePart"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testSearchTitleTextVar"}],"name":"ref"}],"name":"childReference"},{"repeatId":"1","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testSearchSubTitleTextVar"}],"name":"ref"}],"name":"childReference"},{"repeatId":"2","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testSearchHeadingTextVar"}],"name":"ref"}],"name":"childReference"},{"repeatId":"3","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testSearchContentStringTextVar"}],"name":"ref"}],"name":"childReference"},{"repeatId":"4","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testSearchContentTextTextVar"}],"name":"ref"}],"name":"childReference"}],"name":"childReferences"}],"name":"metadata","attributes":{"type":"group"}} | | CREATED |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testNewsSearchIncludeGroup"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"include"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testNewsSearchIncludePartGroup"}],"name":"ref"}],"name":"childReference"}],"name":"childReferences"}],"name":"metadata","attributes":{"type":"group"}} | | CREATED |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testNewsSearchGroup"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"searchNewsExtended"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testNewsSearchIncludeGroup"}],"name":"ref"}],"name":"childReference"},{"repeatId":"1","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"searchRowsNumberVar"}],"name":"ref"}],"name":"childReference"},{"repeatId":"2","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"searchStartNumberVar"}],"name":"ref"}],"name":"childReference"}],"name":"childReferences"}],"name":"metadata","attributes":{"type":"group"}} | | CREATED |

*!
!3 Create searchTerms
!***> Create searchTerm testNewsTitleSearchTerm, testNewsSubTitleSearchTerm, testNewsHeadingSearchTerm

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | searchTerm | {"children":[{"children":[{"name":"id","value":"testNewsTitleSearchTerm"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"searchTerm"}],"name":"validationType"}],"name":"recordInfo"},{"name":"searchTermType","value":"final"},{"children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testNewsTitleIndexTerm"}],"name":"indexTerm"}],"name":"searchTerm"} | | CREATED |
| $adminAuthToken | searchTerm | {"children":[{"children":[{"name":"id","value":"testNewsSubTitleSearchTerm"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"searchTerm"}],"name":"validationType"}],"name":"recordInfo"},{"name":"searchTermType","value":"final"},{"children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testNewsSubTitleIndexTerm"}],"name":"indexTerm"}],"name":"searchTerm"} | | CREATED |
| $adminAuthToken | searchTerm | {"children":[{"children":[{"name":"id","value":"testNewsHeadingSearchTerm"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"searchTerm"}],"name":"validationType"}],"name":"recordInfo"},{"name":"searchTermType","value":"final"},{"children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testNewsHeadingIndexTerm"}],"name":"indexTerm"}],"name":"searchTerm"} | | CREATED |

*!
!***> Create searchTerm testNewsContentStringSearchTerm and testNewsContentTextSearchTerm

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | searchTerm | {"children":[{"children":[{"name":"id","value":"testNewsContentStringSearchTerm"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"searchTerm"}],"name":"validationType"}],"name":"recordInfo"},{"name":"searchTermType","value":"final"},{"children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testNewsContentStringIndexTerm"}],"name":"indexTerm"}],"name":"searchTerm"} | | CREATED |
| $adminAuthToken | searchTerm | {"children":[{"children":[{"name":"id","value":"testNewsContentTextSearchTerm"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"searchTerm"}],"name":"validationType"}],"name":"recordInfo"},{"name":"searchTermType","value":"final"},{"children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testNewsContentTextIndexTerm"}],"name":"indexTerm"}],"name":"searchTerm"} | | CREATED |

*!
!3 Create a new search that uses the metadataGroup created above
a search is automatically created for each recordType (testNewsSearch), so we call this one testNewsExtendedSearch

!***> Create data of recordType search

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | search | {"children":[{"children":[{"name":"id","value":"testNewsExtendedSearch"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"search"}],"name":"validationType"}],"name":"recordInfo"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testNewsSearchGroup"}],"name":"metadataId"},{"children":[{"name":"linkedRecordType","value":"presentation"},{"name":"linkedRecordId","value":"testNewsSearchPGroup"}],"name":"presentationId"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testNews"}],"name":"recordTypeToSearchIn"},{"name":"searchGroup","value":"autocomplete"}],"name":"search"} | | CREATED |
| $adminAuthToken | search | {"children":[{"children":[{"name":"id","value":"testPaginatedNewsExtendedSearch"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"search"}],"name":"validationType"}],"name":"recordInfo"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testNewsSearchGroup"}],"name":"metadataId"},{"children":[{"name":"linkedRecordType","value":"presentation"},{"name":"linkedRecordId","value":"testNewsSearchPGroup"}],"name":"presentationId"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testNews"}],"name":"recordTypeToSearchIn"},{"name":"searchGroup","value":"autocomplete"}],"name":"search"} | | CREATED |

*!
then it is possible to do the search:

!2 Perform a search before any data is indexed for the configured searchterms
Some search implementations might not handle searching before any data has been indexed, this test makes sure we get back a result with no hits instead of an error. It is for instance possible to get these kind of errors when using Solr in schemaless mode, if it is not handled correctly server side, as Solr autoconfigures fields based on indexed data and will throw an error on searches using autoconfigured fields that has had no data indexed for them yet.

!***> Test searching before any data is indexed

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | testNewsExtendedSearch | {"name":"searchNewsExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testNewsTitleSearchTerm","value":"NOT_FOUND"}]}]}]} | =~/"data":\[\],"totalNo":"0"/ | OK |

*!
!2 Perform a search on deleted data
When a record is deleted it is removed from the index.

!***> Create and remove a testNews, then search should give no hits

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | testNews | {"children":[{"children":[{"name":"id","value":"news0"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"testNews"}],"name":"validationType"}],"name":"recordInfo"},{"name":"testNewsTitle","value":"En titel"}],"name":"testNews"} | | CREATED |

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | testNews | news0 | | OK |

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | testNewsExtendedSearch | {"name":"searchNewsExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testNewsTitleSearchTerm","value":"En*"}]}]}]} | =~/"data":\[\],"totalNo":"0"/ | OK |

*!
!2 Perform searches
!3 Create testNews to create index data
!***> Create test data news1 (title), news2 (title), newsSub1(title, subTitle, subTitle), newsHeading (title, subTitle, subTitle, section (title) )

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | testNews | {"children":[{"children":[{"name":"id","value":"news1"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"testNews"}],"name":"validationType"}],"name":"recordInfo"},{"name":"testNewsTitle","value":"En titel"}],"name":"testNews"} | | CREATED |
| $adminAuthToken | testNews | {"children":[{"children":[{"name":"id","value":"news2"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"testNews"}],"name":"validationType"}],"name":"recordInfo"},{"name":"testNewsTitle","value":"En annan"},{"repeatId":"0","name":"testNewsSubTitle","value":"One sub title"}],"name":"testNews"} | | CREATED |
| $adminAuthToken | testNews | {"children":[{"children":[{"name":"id","value":"newsSub1"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"testNews"}],"name":"validationType"}],"name":"recordInfo"},{"name":"testNewsTitle","value":"A title with a sub title"},{"repeatId":"0","name":"testNewsSubTitle","value":"A sub title"},{"repeatId":"1","name":"testNewsSubTitle","value":"The second sub title"}],"name":"testNews"} | | CREATED |
| $adminAuthToken | testNews | {"children":[{"children":[{"name":"id","value":"newsHeading1"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"testNews"}],"name":"validationType"}],"name":"recordInfo"},{"name":"testNewsTitle","value":"A title with a heading"},{"repeatId":"0","name":"testNewsSubTitle","value":"One sub title with a heading"},{"repeatId":"1","name":"testNewsSubTitle","value":"One second sub title with a heading"},{"repeatId":"0","children":[{"name":"testNewsHeading","value":"A news heading"}],"name":"testNewsSectionGroup"}],"name":"testNews"} | | CREATED |
| $adminAuthToken | testNews | {"children":[{"children":[{"name":"id","value":"newsContent"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"testNews"}],"name":"validationType"}],"name":"recordInfo"},{"name":"testNewsTitle","value":"A title with a sub title"},{"name":"testNewsContent","value":"These are some very important news from the past week"}],"name":"testNews"} | | CREATED |

*!
Searching for non existing value

!***> A search with no results

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | testNewsExtendedSearch | {"name":"searchNewsExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testNewsTitleSearchTerm","value":"NOT_FOUND"}]}]}]} | =~/"data":\[\],"totalNo":"0"/ | OK |

*!
Partial search in value indexed as string

!***> A search searching for title using "En*"

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | testNewsExtendedSearch | {"name":"searchNewsExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testNewsTitleSearchTerm","value":"En*"}]}]}]} | =~/"toNo":"2"/ | OK |

*!
Search for different values indexed from repeating data (same record, two different sub titles)

!***> A search searching for subTitle using "A title with a sub title" and then "The second sub title" both should give the same result

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | testNewsExtendedSearch | {"name":"searchNewsExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testNewsSubTitleSearchTerm","value":"\"A sub title\""}]}]}]} | =~/"name":"id","value":"newsSub1".*"totalNo":"1","containDataOfType":"mix"/ | OK |
| $adminAuthToken | testNewsExtendedSearch | {"name":"searchNewsExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testNewsSubTitleSearchTerm","value":"\"The second sub title\""}]}]}]} | =~/"name":"id","value":"newsSub1".*"totalNo":"1","containDataOfType":"mix"/ | OK |

*!
!***> A search searching for title AND subTitle

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | testNewsExtendedSearch | {"name":"searchNewsExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testNewsTitleSearchTerm","value":"En*"},{"name":"testNewsSubTitleSearchTerm","value":"*sub title"}]}]}]} | =~/"toNo":"1"/ | OK |

*!
Search in value indexed as text

!***> A search searching for testNewsHeadingSearchTerm

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | testNewsExtendedSearch | {"name":"searchNewsExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testNewsHeadingSearchTerm","value":"\"A news heading\""}]}]}]} | =~/"toNo":"1"/ | OK |

*!
The following two tests is used to show two things. !-
-!1. The same value is possible to index more than once, using different indexTerms. TextContent is index twice, using one indexTerm of indexType string and one indexTerm of indexType text.!-
-!2. Depending on indexType the same search string gives different results.

!***> A search searching for testNewsContentStringSearchTerm

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | testNewsExtendedSearch | {"name":"searchNewsExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testNewsContentStringSearchTerm","value":"\"These are some very important news from the past week\""}]}]}]} | =~/"toNo":"1"/ | OK |
| $adminAuthToken | testNewsExtendedSearch | {"name":"searchNewsExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testNewsContentStringSearchTerm","value":"\"These are some\""}]}]}]} | =~/"toNo":"0"/ | OK |

*!
!***> A search searching for testNewsContentTextSearchTerm

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | testNewsExtendedSearch | {"name":"searchNewsExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testNewsContentTextSearchTerm","value":"\"These are some very important news from the past week\""}]}]}]} | =~/"toNo":"1"/ | OK |
| $adminAuthToken | testNewsExtendedSearch | {"name":"searchNewsExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testNewsContentTextSearchTerm","value":"\"These are some\""}]}]}]} | =~/"toNo":"1"/ | OK |

*!
!2 Limit search results by start and number of matches
!***> Limit the number of matches to return

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | testNewsExtendedSearch | {"name":"searchNewsExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testNewsTitleSearchTerm","value":"*"}]}]},{"name":"rows","value":"50"}]} | =~/"fromNo":"1".+"totalNo":"5".+"toNo":"5"/ | OK |
| $adminAuthToken | testNewsExtendedSearch | {"name":"searchNewsExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testNewsTitleSearchTerm","value":"*"}]}]},{"name":"rows","value":"1"}]} | =~/"fromNo":"1".+"totalNo":"5".+"toNo":"1"/ | OK |

*!
!***> Start from some given position

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | testNewsExtendedSearch | {"name":"searchNewsExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testNewsTitleSearchTerm","value":"*"}]}]},{"name":"start","value":"2"}]} | =~/"fromNo":"2".+"totalNo":"5".+"toNo":"5"/ | OK |

*!
!***> Start from some given position and limit number of rows to read

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | testNewsExtendedSearch | {"name":"searchNewsExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testNewsTitleSearchTerm","value":"*"}]}]},{"name":"rows","value":"2"},{"name":"start","value":"2"}]} | =~/"fromNo":"2".+"totalNo":"5".+"toNo":"3"/ | OK |

*!
!2 Perform incorrect searches
The searchForm has to be filled out correctly or the search will not be done, but instead errors returned

!***> Test searches that will not work (nonExisting searchId, missing searchData(json), broken searchData(json), not valid searchData(json)

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | aSearchIdThatDoesNotExist | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"text","value":""}]}]}]} | Error searching record with searchId: aSearchIdThatDoesNotExist. Not found. | NOT_FOUND |
| $adminAuthToken | aSearchId | | Error searching record with searchId: aSearchId. Unable to parse json string | BAD_REQUEST |
| $adminAuthToken | aSearchId | {"NOTname":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"text","value":""}]}]}]} | Error searching record with searchId: aSearchId. Error parsing jsonObject: Group data must contain key: name | BAD_REQUEST |
| $userAuthToken | testNewsExtendedSearch | {"name":"search","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"text","value":""}]}]}]} | | FORBIDDEN |

*!
!1 Reset testdata
Remove data created for this test

!***> Delete created data

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | testNews | news1 | | OK |
| $adminAuthToken | testNews | news2 | | OK |
| $adminAuthToken | testNews | newsSub1 | | OK |
| $adminAuthToken | testNews | newsHeading1 | | OK |
| $adminAuthToken | testNews | newsContent | | OK |

*!
!***> Delete metadata for created search

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | search | testPaginatedNewsExtendedSearch | | OK |
| $adminAuthToken | text | testPaginatedNewsExtendedSearchText | | OK |
| $adminAuthToken | text | testPaginatedNewsExtendedSearchDefText | | OK |
| $adminAuthToken | search | testNewsExtendedSearch | | OK |
| $adminAuthToken | text | testNewsExtendedSearchText | | OK |
| $adminAuthToken | text | testNewsExtendedSearchDefText | | OK |
| $adminAuthToken | search | testNewsSearch | | OK |
| $adminAuthToken | text | testNewsSearchText | | OK |
| $adminAuthToken | text | testNewsSearchDefText | | OK |
| $adminAuthToken | presentation | testNewsSearchPGroup | | OK |
| $adminAuthToken | presentation | testNewsSearchOutputPGroup | | OK |
| $adminAuthToken | metadata | testNewsSearchGroup | | OK |
| $adminAuthToken | presentation | testNewsSearchIncludePGroup | | OK |
| $adminAuthToken | presentation | testNewsSearchIncludeOutputPGroup | | OK |
| $adminAuthToken | metadata | testNewsSearchIncludeGroup | | OK |
| $adminAuthToken | presentation | testNewsSearchIncludePartPGroup | | OK |
| $adminAuthToken | presentation | testNewsSearchIncludePartOutputPGroup | | OK |
| $adminAuthToken | metadata | testNewsSearchIncludePartGroup | | OK |
| $adminAuthToken | presentation | testSearchTitlePVar | | OK |
| $adminAuthToken | presentation | testSearchTitleOutputPVar | | OK |
| $adminAuthToken | metadata | testSearchTitleTextVar | | OK |
| $adminAuthToken | presentation | testSearchSubTitlePVar | | OK |
| $adminAuthToken | presentation | testSearchSubTitleOutputPVar | | OK |
| $adminAuthToken | metadata | testSearchSubTitleTextVar | | OK |
| $adminAuthToken | presentation | testSearchHeadingPVar | | OK |
| $adminAuthToken | presentation | testSearchHeadingOutputPVar | | OK |
| $adminAuthToken | metadata | testSearchHeadingTextVar | | OK |
| $adminAuthToken | presentation | testSearchContentStringOutputPVar | | OK |
| $adminAuthToken | presentation | testSearchContentStringPVar | | OK |
| $adminAuthToken | metadata | testSearchContentStringTextVar | | OK |
| $adminAuthToken | presentation | testSearchContentTextOutputPVar | | OK |
| $adminAuthToken | presentation | testSearchContentTextPVar | | OK |
| $adminAuthToken | metadata | testSearchContentTextTextVar | | OK |

*!
!***> Delete metadata for recordType testNews and autocreated surrounding metadata

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | validationType | testNews | | OK |
| $adminAuthToken | recordType | testNews | | OK |
| $adminAuthToken | presentation | testNewsNewPGroup | | OK |
| $adminAuthToken | presentation | testNewsPGroup | | OK |
| $adminAuthToken | presentation | testNewsOutputPGroup | | OK |
| $adminAuthToken | presentation | testNewsMenuPGroup | | OK |
| $adminAuthToken | presentation | testNewsListPGroup | | OK |
| $adminAuthToken | presentation | testNewsAutocompletePGroup | | OK |
| $adminAuthToken | metadata | testNewsNewGroup | | OK |
| $adminAuthToken | metadata | testNewsGroup | | OK |
| $adminAuthToken | presentation | testNewsSectionPGroup | | OK |
| $adminAuthToken | presentation | testNewsSectionOutputPGroup | | OK |
| $adminAuthToken | metadata | testNewsSectionGroup | | OK |
| $adminAuthToken | presentation | testNewsSubTitlePVar | | OK |
| $adminAuthToken | presentation | testNewsSubTitleOutputPVar | | OK |
| $adminAuthToken | metadata | testNewsSubTitleTextVar | | OK |
| $adminAuthToken | text | testNewsText | | OK |
| $adminAuthToken | text | testNewsDefText | | OK |
| $adminAuthToken | text | testNewsGroupDefText | | OK |
| $adminAuthToken | text | testNewsGroupText | | OK |
| $adminAuthToken | text | testNewsNewGroupText | | OK |
| $adminAuthToken | text | testNewsNewGroupDefText | | OK |

*!
!***> Delete metadata for additional metadata added to testNews

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | presentation | testNewsTitlePVar | | OK |
| $adminAuthToken | presentation | testNewsTitleOutputPVar | | OK |
| $adminAuthToken | metadata | testNewsTitleTextVar | | OK |
| $adminAuthToken | presentation | testNewsHeadingPVar | | OK |
| $adminAuthToken | presentation | testNewsHeadingOutputPVar | | OK |
| $adminAuthToken | metadata | testNewsHeadingTextVar | | OK |
| $adminAuthToken | presentation | testNewsContentOutputPVar | | OK |
| $adminAuthToken | presentation | testNewsContentPVar | | OK |
| $adminAuthToken | metadata | testNewsContentTextVar | | OK |
| $adminAuthToken | text | testNewsTitleTextVarText | | OK |
| $adminAuthToken | text | testNewsTitleTextVarDefText | | OK |

*!
!***> Delete searchTerm

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | searchTerm | testNewsTitleSearchTerm | | OK |
| $adminAuthToken | searchTerm | testNewsSubTitleSearchTerm | | OK |
| $adminAuthToken | searchTerm | testNewsHeadingSearchTerm | | OK |
| $adminAuthToken | searchTerm | testNewsContentStringSearchTerm | | OK |
| $adminAuthToken | searchTerm | testNewsContentTextSearchTerm | | OK |

*!
!***> Delete collectIndexTerms

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | collectTerm | testNewsTitleIndexTerm | | OK |
| $adminAuthToken | collectTerm | testNewsSubTitleIndexTerm | | OK |
| $adminAuthToken | collectTerm | testNewsHeadingIndexTerm | | OK |
| $adminAuthToken | collectTerm | testNewsContentStringIndexTerm | | OK |
| $adminAuthToken | collectTerm | testNewsContentTextIndexTerm | | OK |

*!
!2 
!2 Searching in different recordTypes
A search is defining a list of recordTypes to search in, and a performed search should only search in those recordTypes.

!***> Create metadata for recordType testArticle and testStudentThesis

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | recordType | {"children":[{"name":"abstract","value":"false"},{"children":[{"name":"id","value":"testArticle"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"recordType"}],"name":"validationType"}],"name":"recordInfo"},{"name":"userSuppliedId","value":"true"},{"repeatId":"0","name":"groupOfRecordType","value":"metadata"},{"name":"public","value":"false"},{"name":"storeInArchive","value":"false"}],"name":"recordType"} | | CREATED |
| $adminAuthToken | recordType | {"children":[{"name":"abstract","value":"false"},{"children":[{"name":"id","value":"testStudentThesis"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"recordType"}],"name":"validationType"}],"name":"recordInfo"},{"name":"userSuppliedId","value":"true"},{"repeatId":"0","name":"groupOfRecordType","value":"metadata"},{"name":"public","value":"false"},{"name":"storeInArchive","value":"false"}],"name":"recordType"} | | CREATED |
| $adminAuthToken | validationType | {"name":"validationType","children":[{"name":"recordInfo","children":[{"name":"id","value":"testArticle"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"validationType"}],"name":"validationType"}]},{"name":"textId","children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"fitnesseText"}]},{"name":"defTextId","children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"fitnesseText"}]},{"name":"newMetadataId","children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testArticleNewGroup"}]},{"name":"metadataId","children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testArticleGroup"}]},{"name":"newPresentationFormId","children":[{"name":"linkedRecordType","value":"presentation"},{"name":"linkedRecordId","value":"recordTypePGroup"}]},{"name":"presentationFormId","children":[{"name":"linkedRecordType","value":"presentation"},{"name":"linkedRecordId","value":"recordTypePGroup"}]},{"name":"validatesRecordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testArticle"}]}]} | | CREATED |
| $adminAuthToken | validationType | {"name":"validationType","children":[{"name":"recordInfo","children":[{"name":"id","value":"testStudentThesis"},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}]},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"validationType"}],"name":"validationType"}]},{"name":"textId","children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"fitnesseText"}]},{"name":"defTextId","children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"fitnesseText"}]},{"name":"newMetadataId","children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testStudentThesisNewGroup"}]},{"name":"metadataId","children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testStudentThesisGroup"}]},{"name":"newPresentationFormId","children":[{"name":"linkedRecordType","value":"presentation"},{"name":"linkedRecordId","value":"recordTypePGroup"}]},{"name":"presentationFormId","children":[{"name":"linkedRecordType","value":"presentation"},{"name":"linkedRecordId","value":"recordTypePGroup"}]},{"name":"validatesRecordType","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testStudentThesis"}]}]} | | CREATED |

*!
!***> Create metadataTextVariable testTitleTextVar

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testTitleTextVar"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataTextVariable"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testTitle"},{"name":"regEx","value":"(^[0-9A-Za-z:-_\\s]{2,50}$)"}],"name":"metadata","attributes":{"type":"textVariable"}} | | CREATED |

*!
!***> Create collectIndexTerm testTitleIndexTerm

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | collectTerm | {"children":[{"children":[{"name":"id","value":"testTitleIndexTerm"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"collectIndexTerm"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testTitleIndexTerm"},{"children":[{"name":"indexFieldName","value":"testTitle"},{"name":"indexType","value":"indexTypeText"}],"name":"extraData"}],"name":"collectTerm","attributes":{"type":"index"}} | | CREATED |

*!
!***> Update autocreated metadataGroups for testArticle and testStudentThesis and add testTitleTextVar

!| RecordEndpointFixture |
| authToken | type | id | json | testUpdateRecord? | getStatusType? |
| $adminAuthToken | metadata | testArticleNewGroup | {"children":[{"children":[{"name":"id","value":"testArticleNewGroup"},{"children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"metadata"}],"name":"type"},{"children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}],"name":"createdBy"},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testArticle"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"testArticleNewGroupText"}],"name":"textId"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"testArticleNewGroupDefText"}],"name":"defTextId"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"recordInfoNewGroup"}],"name":"ref"}],"name":"childReference"},{"repeatId":"1","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testTitleTextVar"}],"name":"ref"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testTitleIndexTerm"}],"name":"childRefCollectTerm","attributes":{"type":"index"}}],"name":"childReference"}],"name":"childReferences"},{"name":"excludePGroupCreation","value":"true"}],"name":"metadata","attributes":{"type":"group"}} | | OK |
| $adminAuthToken | metadata | testArticleGroup | {"children":[{"children":[{"name":"id","value":"testArticleGroup"},{"children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"metadata"}],"name":"type"},{"children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}],"name":"createdBy"},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testArticle"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"testArticleGroupText"}],"name":"textId"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"testArticleGroupDefText"}],"name":"defTextId"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"recordInfoGroup"}],"name":"ref"}],"name":"childReference"},{"repeatId":"1","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testTitleTextVar"}],"name":"ref"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testTitleIndexTerm"}],"name":"childRefCollectTerm","attributes":{"type":"index"}}],"name":"childReference"}],"name":"childReferences"},{"name":"excludePGroupCreation","value":"true"}],"name":"metadata","attributes":{"type":"group"}} | | OK |
| $adminAuthToken | metadata | testStudentThesisNewGroup | {"children":[{"children":[{"name":"id","value":"testStudentThesisNewGroup"},{"children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"metadata"}],"name":"type"},{"children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}],"name":"createdBy"},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testStudentThesis"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"testStudentThesisNewGroupText"}],"name":"textId"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"testStudentThesisNewGroupDefText"}],"name":"defTextId"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"recordInfoNewGroup"}],"name":"ref"}],"name":"childReference"},{"repeatId":"1","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testTitleTextVar"}],"name":"ref"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testTitleIndexTerm"}],"name":"childRefCollectTerm","attributes":{"type":"index"}}],"name":"childReference"}],"name":"childReferences"},{"name":"excludePGroupCreation","value":"true"}],"name":"metadata","attributes":{"type":"group"}} | | OK |
| $adminAuthToken | metadata | testStudentThesisGroup | {"children":[{"children":[{"name":"id","value":"testStudentThesisGroup"},{"children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"metadata"}],"name":"type"},{"children":[{"name":"linkedRecordType","value":"user"},{"name":"linkedRecordId","value":"131313"}],"name":"createdBy"},{"name":"tsCreated","value":"2017-10-01T00:00:00.000000Z"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testStudentThesis"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"testStudentThesisGroupText"}],"name":"textId"},{"children":[{"name":"linkedRecordType","value":"text"},{"name":"linkedRecordId","value":"testStudentThesisGroupDefText"}],"name":"defTextId"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"recordInfoGroup"}],"name":"ref"}],"name":"childReference"},{"repeatId":"1","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testTitleTextVar"}],"name":"ref"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testTitleIndexTerm"}],"name":"childRefCollectTerm","attributes":{"type":"index"}}],"name":"childReference"}],"name":"childReferences"},{"name":"excludePGroupCreation","value":"true"}],"name":"metadata","attributes":{"type":"group"}} | | OK |

*!
!2 Create metadata for two new searches, searching in different recordTypes
!3 Create metadataTextVariables and metadataGroups
!***> Create metadataTextVariable (testTitleSearchTitleTextVar) Note, nameInData is must be the id of the searchTerm we want to search in

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testTitleSearchTitleTextVar"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataTextVariable"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"testTitleSearchTerm"},{"name":"regEx","value":".*"}],"name":"metadata","attributes":{"type":"textVariable"}} | | CREATED |

*!
!***> Create a metadataGroup(testTitleSearchIncludePartGroup, testTitleSearchIncludeGroup, testTitleSearchGroup) for search form

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testTitleSearchIncludePartGroup"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"includePart"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"0"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testTitleSearchTitleTextVar"}],"name":"ref"}],"name":"childReference"}],"name":"childReferences"}],"name":"metadata","attributes":{"type":"group"}} | | CREATED |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testTitleSearchIncludeGroup"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"include"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testTitleSearchIncludePartGroup"}],"name":"ref"}],"name":"childReference"}],"name":"childReferences"}],"name":"metadata","attributes":{"type":"group"}} | | CREATED |
| $adminAuthToken | metadata | {"children":[{"children":[{"name":"id","value":"testTitleSearchGroup"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"metadataGroup"}],"name":"validationType"}],"name":"recordInfo"},{"name":"nameInData","value":"searchTitleExtended"},{"children":[{"repeatId":"0","children":[{"name":"repeatMin","value":"1"},{"name":"repeatMax","value":"1"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testTitleSearchIncludeGroup"}],"name":"ref"}],"name":"childReference"}],"name":"childReferences"}],"name":"metadata","attributes":{"type":"group"}} | | CREATED |

*!
!3 Create searchTerms
!***> Create searchTerm testTitleSearchTerm

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | searchTerm | {"children":[{"children":[{"name":"id","value":"testTitleSearchTerm"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"searchTerm"}],"name":"validationType"}],"name":"recordInfo"},{"name":"searchTermType","value":"final"},{"children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"testTitleIndexTerm"}],"name":"indexTerm"}],"name":"searchTerm"} | | CREATED |

*!
!3 Create new searches that uses the metadataGroup created above
a search is automatically created for each recordType (testArticleSearch and testStudentThesisSearch), so we call these testArticleExtendedSearch and testStudentThesisExtendedSearch. We also create testTitleExtendedSearch that searches both in recordType testArticle and recordType testStudentThesis

!***> Create data of recordType search

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | search | {"children":[{"children":[{"name":"id","value":"testArticleExtendedSearch"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"search"}],"name":"validationType"}],"name":"recordInfo"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testTitleSearchGroup"}],"name":"metadataId"},{"children":[{"name":"linkedRecordType","value":"presentation"},{"name":"linkedRecordId","value":"testTitleSearchPGroup"}],"name":"presentationId"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testArticle"}],"name":"recordTypeToSearchIn"},{"name":"searchGroup","value":"autocomplete"}],"name":"search"} | | CREATED |
| $adminAuthToken | search | {"children":[{"children":[{"name":"id","value":"testStudentThesisExtendedSearch"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"search"}],"name":"validationType"}],"name":"recordInfo"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testTitleSearchGroup"}],"name":"metadataId"},{"children":[{"name":"linkedRecordType","value":"presentation"},{"name":"linkedRecordId","value":"testTitleSearchPGroup"}],"name":"presentationId"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testStudentThesis"}],"name":"recordTypeToSearchIn"},{"name":"searchGroup","value":"autocomplete"}],"name":"search"} | | CREATED |
| $adminAuthToken | search | {"children":[{"children":[{"name":"id","value":"testTitleExtendedSearch"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"search"}],"name":"validationType"}],"name":"recordInfo"},{"children":[{"name":"linkedRecordType","value":"metadata"},{"name":"linkedRecordId","value":"testTitleSearchGroup"}],"name":"metadataId"},{"children":[{"name":"linkedRecordType","value":"presentation"},{"name":"linkedRecordId","value":"testTitleSearchPGroup"}],"name":"presentationId"},{"repeatId":"0","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testArticle"}],"name":"recordTypeToSearchIn"},{"repeatId":"1","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"testStudentThesis"}],"name":"recordTypeToSearchIn"},{"name":"searchGroup","value":"autocomplete"}],"name":"search"} | | CREATED |

*!
!2 Perform searches
!3 Create testArticle and testStudentThesis to create index data
!***> Create test data

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | testArticle | {"children":[{"children":[{"name":"id","value":"article1"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"testArticle"}],"name":"validationType"}],"name":"recordInfo"},{"name":"testTitle","value":"En titel"}],"name":"testArticle"} | | CREATED |
| $adminAuthToken | testStudentThesis | {"children":[{"children":[{"name":"id","value":"studentThesis1"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"testSystem"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"testStudentThesis"}],"name":"validationType"}],"name":"recordInfo"},{"name":"testTitle","value":"En titel"}],"name":"testStudentThesis"} | | CREATED |

*!
When searching using articleExtendedSearch we should only get the article as a result, and when searching using testStudentThesisExtendedSearch we should only get the student thesis, even though they have the same title. This is because the search specifies what recordType to search in. When searching using titleSearch we should get both, since that search specifies testArticle AND testStudentThesis as recordTypes to search in.

!***> One search searching for title in article and on search searching for title in student thesis

!| RecordEndpointFixture |
| authToken | searchId | json | testSearchRecord? | getStatusType? |
| $adminAuthToken | testArticleExtendedSearch | {"name":"searchTitleExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testTitleSearchTerm","value":"En titel"}]}]}]} | =~/"toNo":"1"/ | OK |
| $adminAuthToken | testStudentThesisExtendedSearch | {"name":"searchTitleExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testTitleSearchTerm","value":"En titel"}]}]}]} | =~/"toNo":"1"/ | OK |
| $adminAuthToken | testTitleExtendedSearch | {"name":"searchTitleExtended","children":[{"name":"include","children":[{"name":"includePart","children":[{"name":"testTitleSearchTerm","value":"En titel"}]}]}]} | =~/"toNo":"2"/ | OK |

*!
!1 Reset testdata
Remove data created for this test

!***> Delete created data

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | testArticle | article1 | | OK |
| $adminAuthToken | testStudentThesis | studentThesis1 | | OK |

*!
!***> Delete metadata for created search

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | search | testArticleSearch | | OK |
| $adminAuthToken | text | testArticleSearchText | | OK |
| $adminAuthToken | text | testArticleSearchDefText | | OK |
| $adminAuthToken | search | testArticleExtendedSearch | | OK |
| $adminAuthToken | text | testArticleExtendedSearchText | | OK |
| $adminAuthToken | text | testArticleExtendedSearchDefText | | OK |
| $adminAuthToken | search | testStudentThesisExtendedSearch | | OK |
| $adminAuthToken | text | testStudentThesisExtendedSearchText | | OK |
| $adminAuthToken | text | testStudentThesisExtendedSearchDefText | | OK |
| $adminAuthToken | search | testStudentThesisSearch | | OK |
| $adminAuthToken | text | testStudentThesisSearchText | | OK |
| $adminAuthToken | text | testStudentThesisSearchDefText | | OK |
| $adminAuthToken | search | testTitleExtendedSearch | | OK |
| $adminAuthToken | text | testTitleExtendedSearchText | | OK |
| $adminAuthToken | text | testTitleExtendedSearchDefText | | OK |
| $adminAuthToken | presentation | testTitleSearchPGroup | | OK |
| $adminAuthToken | presentation | testTitleSearchOutputPGroup | | OK |
| $adminAuthToken | presentation | testTitleSearchIncludePGroup | | OK |
| $adminAuthToken | presentation | testTitleSearchIncludeOutputPGroup | | OK |
| $adminAuthToken | presentation | testTitleSearchIncludePartPGroup | | OK |
| $adminAuthToken | presentation | testTitleSearchIncludePartOutputPGroup | | OK |
| $adminAuthToken | presentation | testTitleSearchTitlePVar | | OK |
| $adminAuthToken | presentation | testTitleSearchTitleOutputPVar | | OK |
| $adminAuthToken | metadata | testTitleSearchGroup | | OK |
| $adminAuthToken | metadata | testTitleSearchIncludeGroup | | OK |
| $adminAuthToken | metadata | testTitleSearchIncludePartGroup | | OK |
| $adminAuthToken | metadata | testTitleSearchTitleTextVar | | OK |

*!
!***> Delete metadata for recordType testArticle and testStudentThesis and autocreated surrounding metadata

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | validationType | testArticle | | OK |
| $adminAuthToken | validationType | testStudentThesis | | OK |
| $adminAuthToken | recordType | testArticle | | OK |
| $adminAuthToken | recordType | testStudentThesis | | OK |
| $adminAuthToken | presentation | testArticleNewPGroup | | OK |
| $adminAuthToken | presentation | testArticlePGroup | | OK |
| $adminAuthToken | presentation | testArticleOutputPGroup | | OK |
| $adminAuthToken | presentation | testArticleMenuPGroup | | OK |
| $adminAuthToken | presentation | testArticleListPGroup | | OK |
| $adminAuthToken | presentation | testArticleAutocompletePGroup | | OK |
| $adminAuthToken | metadata | testArticleNewGroup | | OK |
| $adminAuthToken | metadata | testArticleGroup | | OK |
| $adminAuthToken | presentation | testStudentThesisNewPGroup | | OK |
| $adminAuthToken | presentation | testStudentThesisPGroup | | OK |
| $adminAuthToken | presentation | testStudentThesisOutputPGroup | | OK |
| $adminAuthToken | presentation | testStudentThesisMenuPGroup | | OK |
| $adminAuthToken | presentation | testStudentThesisListPGroup | | OK |
| $adminAuthToken | presentation | testStudentThesisAutocompletePGroup | | OK |
| $adminAuthToken | metadata | testStudentThesisNewGroup | | OK |
| $adminAuthToken | metadata | testStudentThesisGroup | | OK |
| $adminAuthToken | presentation | testTitlePVar | | OK |
| $adminAuthToken | presentation | testTitleOutputPVar | | OK |
| $adminAuthToken | metadata | testTitleTextVar | | OK |
| $adminAuthToken | text | testArticleText | | OK |
| $adminAuthToken | text | testArticleDefText | | OK |
| $adminAuthToken | text | testArticleGroupDefText | | OK |
| $adminAuthToken | text | testArticleGroupText | | OK |
| $adminAuthToken | text | testArticleNewGroupText | | OK |
| $adminAuthToken | text | testArticleNewGroupDefText | | OK |
| $adminAuthToken | text | testTitleTextVarText | | OK |
| $adminAuthToken | text | testTitleTextVarDefText | | OK |
| $adminAuthToken | text | testStudentThesisText | | OK |
| $adminAuthToken | text | testStudentThesisDefText | | OK |
| $adminAuthToken | text | testStudentThesisGroupDefText | | OK |
| $adminAuthToken | text | testStudentThesisGroupText | | OK |
| $adminAuthToken | text | testStudentThesisNewGroupText | | OK |
| $adminAuthToken | text | testStudentThesisNewGroupDefText | | OK |

*!
!***> Delete searchTerm

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | searchTerm | testTitleSearchTerm | | OK |

*!
!***> Delete collectIndexTerms

!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | collectTerm | testTitleIndexTerm | | OK |

*!
