---
Help: Testing search
Suite
---
!contents -R2 -g -p -f -h
!1 Search

To create a search you need to define a [[search][.CoraTests.CallThroughJavaCode.BuiltInMetadata.BasicMetadata.Search]] instance. An instance also relies on a number of other components to function properly such as [[searchTerms][.CoraTests.CallThroughJavaCode.BuiltInMetadata.BasicMetadata.SearchTerm]], [[indexTerms][.CoraTests.CallThroughJavaCode.BuiltInMetadata.BasicMetadata.IndexTerm]].
When an instance is created you need to define which [[record type][.CoraTests.CallThroughJavaCode.BuiltInMetadata.BasicMetadata.RecordType]](s) to search. You must also define a [[metadata group][.CoraTests.CallThroughJavaCode.BuiltInMetadata.BasicMetadata.MetadataGroup]] and a presentation group to use, the metadata group in expected to have the following structure:

!4 Example of a person search
{{{
personSearchGroup → personSearchIncludeGroup → personSearchIncludePartGroup
}}}
The idea behind this structure is that it should also be possible to add an excludeGroup where you can specify criteria to exclude matches. Within the includeGroup you can then add different includePartsGroup where OR-conditions should apply between them.
Within the includePartGroup, you specify the variables that should be searchable. These variables must have a nameInData that matches a search term.

!***> Example where publicPersonSearchTextVar, personIdSearchTextVar, and personGeneralSearchTextVar are searchable fields (a somewhat minimized version):
{{{
{
  "name": "metadata",
  "children": [
    {
      "name": "recordInfo",
      "children": [
        {
          "name": "id",
          "value": "publicPersonSearchIncludePartGroup"
        }
      ]
    },
    {
      "name": "childReferences",
      "children": [
        {
          "name": "childReference",
          "children": [
            {
              "name": "ref",
              "children": [
                {
                  "name": "linkedRecordType",
                  "value": "metadataTextVariable"
                },
                {
                  "name": "linkedRecordId",
                  "value": "publicPersonSearchTextVar"
                }
              ]
            }
          ],
          "repeatId": "0"
        },
        {
          "name": "childReference",
          "children": [
            {
              "name": "ref",
              "children": [
                {
                  "name": "linkedRecordType",
                  "value": "metadataTextVariable"
                },
                {
                  "name": "linkedRecordId",
                  "value": "personIdSearchTextVar"
                }
              ]
            }
          ],
          "repeatId": "1"
        },
        {
          "name": "childReference",
          "children": [
            {
              "name": "ref",
              "children": [
                {
                  "name": "linkedRecordType",
                  "value": "metadataTextVariable"
                },
                {
                  "name": "linkedRecordId",
                  "value": "personGeneralSearchTextVar"
                }
              ]
            }
          ],
          "repeatId": "2"
        }
      ]
    }
  ],
  "attributes": {
    "type": "group"
  }
}
}}}
*!
Tests for setting up and running searches can be found [[here.][>SearchFinal]]
