---
Static
---

!define createBinaryGeneric {!-{"name":"binary","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"genericBinary"}]}]},{"name":"adminInfo","children":[{"name":"visibility","value":"unpublished"}]},{"name":"originalFileName","value":"-!${originalFileName}!-"},{"name":"expectedFileSize","value":"-!${expectedFileSize}!-"}],"attributes":{"type":"generic"}}-!}
!define recordType {binary}
!define createData createBinaryGeneric
!define expectedAnswer {}
!define expectedCreateResult {CREATED}
!***> Create record, for recordType ${recordType}

!| ChildComparerFixture |
| authToken | type | json | testCreateAndStoreRecord? | getStatusType? | getCreatedId? |
| ${currentAuthToken} | ${recordType} | ${createData} | ${expectedAnswer} | ${expectedCreateResult} | $tmpRecordId1= |


!define recordId {$tmpRecordId1}
*!
!***> Upload image

!| RecordEndpointFixture |
| authToken | type | id | fileName | testUpload? | getStatusType? |
| $adminAuthToken | binary | $tmpRecordId1 | ${originalFileName} | | OK |

*!
!***> Wait and validate record has been updated using image analyzer and converted to the different representations

TODO: ResourceLink cannot be validated. Change CompareFixture in order to be able to validate it.

!| WaitForRegExReadResultFixture |
| authToken | recordType | recordId | sleepTime | maxNumberOfCalls | regEx | waitUntilUntilRegExpFoundInReadRecord? |
| $adminAuthToken | binary | $tmpRecordId1 | 500 | 50 | \"name\":\"jp2\" | Found |

!define expectedUpdatedData {!-{"children":[{"children":[{"name":"originalFileName","value":"-!${originalFileName}!-"},{"name":"resourceId","value":"$tmpRecordId1-master"},{"name":"fileSize","value":"-!${expectedFileSize}!-"},{"name":"mimeType","value":"-!${expectedMimeType}!-"},{"name":"height","value":"-!${expectedHeight}!-"},{"name":"width","value":"-!${expectedWidth}!-"},{"name":"resolution","value":"-!${expectedResolution}!-"},{"name":"checksum","value":"-!${expectedChecksumSha512}!-"},{"name":"checksumType","value":"SHA-512"}],"name":"master"},{"children":[{"name":"resourceId","value":"$tmpRecordId1-thumbnail"},{"name":"fileSize","value":"-!${thumbnailFileSize}!-"},{"name":"mimeType","value":"-!${thumbnailMimeType}!-"},{"name":"height","value":"-!${thumbnailHeight}!-"},{"name":"width","value":"-!${thumbnailWidth}!-"}],"name":"thumbnail"},{"children":[{"name":"resourceId","value":"$tmpRecordId1-medium"},{"name":"fileSize","value":"-!${mediumFileSize}!-"},{"name":"mimeType","value":"-!${mediumMimeType}!-"},{"name":"height","value":"-!${mediumHeight}!-"},{"name":"width","value":"-!${mediumWidth}!-"}],"name":"medium"},{"children":[{"name":"resourceId","value":"$tmpRecordId1-large"},{"name":"fileSize","value":"-!${largeFileSize}!-"},{"name":"mimeType","value":"-!${largeMimeType}!-"},{"name":"height","value":"-!${largeHeight}!-"},{"name":"width","value":"-!${largeWidth}!-"}],"name":"large"},{"children":[{"name":"resourceId","value":"$tmpRecordId1-jp2"},{"name":"fileSize","value":"-!${jp2FileSize}!-"},{"name":"mimeType","value":"-!${jp2MimeType}!-"},{"name":"height","value":"-!${jp2Height}!-"},{"name":"width","value":"-!${jp2Width}!-"}],"name":"jp2"}],"name":"binary"}-!}
!define expectedCompareResult {!-OK-!}
!define expectedActionResult {!-Action read_incoming_links is missing.-!}
!define expectedPermissionResult {}
!define recordPermissions {!-{"read":[],"write":[]}-!}
!include -seamless .HelperPages.readCheck
*!