---
Test
---
!2 IIIF protocol in binary for images
A binary record for an image has information about how to access the image using the IIIF protocol. This information can be found as IIIF in the top level element otherProtocols. 
Other protocols contain information about how to access the image using the IIIF protocol, if:
 * a JP2 representation has been generated for the uploaded file
 and 
 * the user has the required permissions to read it
 or 
 * the binary is published. 
All cases will make sure there is no IIIF protocol information when the binary record is created, or when the file is first uploaded.
 * '''Case 1:''' When reading a "published" image with a Jp2 representation, IIIF protocol information must be present. It must have a server and identifier properties in it. 
 * '''Case 2:''' When reading an "unpublished" image with a Jp2 representation IIIF protocol information should not be present. 
 * '''Case 3:''' When reading an any other binary that is not an image then IIIF protocol information should not be present.
 
!***> Setup
!define unpublishedBinary {!-{"name":"binary","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"genericBinary"}]}]},{"name":"adminInfo","children":[{"name":"visibility","value":"unpublished"}]},{"name":"originalFileName","value":"-!${originalFileName}!-"},{"name":"expectedFileSize","value":"-!${expectedFileSize}!-"}],"attributes":{"type":"generic"}}-!}
!define publishedBinary {!-{"name":"binary","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"genericBinary"}]}]},{"name":"adminInfo","children":[{"name":"visibility","value":"published"}]},{"name":"originalFileName","value":"-!${originalFileName}!-"},{"name":"expectedFileSize","value":"-!${expectedFileSize}!-"}],"attributes":{"type":"generic"}}-!}
*!


!***> '''Case 1'''
!*< definition
!define originalFileName {aTiff.tiff}
!define createData publishedBinary
*!
!include -seamless .CoraTests.CallThroughJavaCode.Data.Binary.CreateBinaryUploadImageAndWait

!| ChildComparerFixture                                                                                                                                  |
|authToken          |type         |id         |testReadAndStoreRecord?                                                                                   |
|${currentAuthToken}|${recordType}|${recordId}|=~/[!-"otherProtocols":\{"iiif":\{"server":"${systemUnderTestUrl}iiif\/","identifier":"binary:\d*"\}\}-!]/|

!define iiifServerUrl (${systemUnderTestUrl}iiif/)

!define expectedXpath {//otherProtocols/iiif/server[text() = '${iiifServerUrl}']
//otherProtocols/iiif/identifier[text() = '${recordId}']}
!include -seamless .HelperPages.readRecordInXML

!include -seamless .HelperPages.deleteRecord
*!

!***> '''Case 2'''
!*< definition
!define originalFileName {aTiff.tiff}
!define createData publishedBinary
*!
!include -seamless .CoraTests.CallThroughJavaCode.Data.Binary.CreateBinaryUploadImageAndWait

!| ChildComparerFixture |
| authToken | type | id | testReadAndStoreRecord? |
| ${currentAuthToken} | ${recordType} | ${recordId} |=~/!-r"(?!iiif)\b\w+\b-!/ |

!define iiifServerUrl (${systemUnderTestUrl}iiif/)

!define expectedXpath {count(//otherProtocols) = 0}
!include -seamless .HelperPages.readRecordInXML

!include -seamless .HelperPages.deleteRecord
*!

!***> '''Case 3'''
!define originalFileName {aZip.zip}
!define createData unpublishedBinary

!include -seamless .CoraTests.CallThroughJavaCode.Data.Binary.CreateBinaryAndUploadFile

!| ChildComparerFixture                                                                                                                                           |
|authToken          |type         |id         |testReadAndStoreRecord?                                                                                            |
|${currentAuthToken}|${recordType}|${recordId}|=~/[!-^(?!.*"otherProtocols":\{"iiif":\{"server":"${systemUnderTestUrl}iiif\/","identifier":"binary:\d*"\}\}).*-!]/|

!define expectedXpath {count(//otherProtocols) = 0}
!include -seamless .HelperPages.readRecordInXML

!include -seamless .HelperPages.deleteRecord
*!

