---
Test
---
!2 IIIF for binary images
Other protocols with information about how to access a binary for an image using IIIF will be present in the returned record of a Read, if the image has a JP2 representation generated and if the user has specific rights to read it or if the binary is published. 

 * '''Case 1:''' When reading a "published" image with a Jp2 representation an IIIF protocol information must be present. It must have a server and identifier properties in it. 
 * '''Case 2:''' (NOT IMPLEMENTED YET) When reading an "unpublished" image with a Jp2 representation an IIIF protocol information should not be present. 
 * '''Case 3:''' When reading an any other binary that is not an image then IIIF protocol information should not be present.
 
!***> Setup
!define unpublishedBinary {!-{"name":"binary","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"genericBinary"}]}]},{"name":"adminInfo","children":[{"name":"visibility","value":"unpublished"}]},{"name":"originalFileName","value":"-!${originalFileName}!-"},{"name":"expectedFileSize","value":"-!${expectedFileSize}!-"}],"attributes":{"type":"generic"}}-!}
!define publishedBinary {!-{"name":"binary","children":[{"name":"recordInfo","children":[{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"systemOne"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"genericBinary"}]}]},{"name":"adminInfo","children":[{"name":"visibility","value":"unpublished"}]},{"name":"originalFileName","value":"-!${originalFileName}!-"},{"name":"expectedFileSize","value":"-!${expectedFileSize}!-"}],"attributes":{"type":"generic"}}-!}
*!


!***> '''Case 1'''
!*< definition
!define originalFileName {aTiff.tiff}
!define createData publishedBinary
*!
!include -seamless .CoraTests.CallThroughJavaCode.Data.Binary.CreateBinaryUploadImageAndWait

!| ChildComparerFixture                                                                                                                                  |
|authToken          |type         |id         |testReadAndStoreRecord?                                                                                   |
|${currentAuthToken}|${recordType}|${recordId}|=~/[!-"otherProtocols":\{"iiif":\{"server":"${systemUnderTestUrl}iiif\/","identifier":"binary:\d*"\}\}-!]/|

!define iiifServerUrl (${systemUnderTestUrl}iiif/)

!define expectedXpath {//otherProtocols/iiif/server[text() = '${iiifServerUrl}']
//otherProtocols/iiif/identifier[text() = '${recordId}']}
!include -seamless .HelperPages.readRecordInXML

!include -seamless .HelperPages.deleteRecord
*!

!***> '''Case 2''' (NOT IMPLEMENTED YET)
#!*< definition
#!define originalFileName {aTiff.tiff}
#!define createData publishedBinary
#*!
#!include -seamless .CoraTests.CallThroughJavaCode.Data.Binary.CreateBinaryUploadImageAndWait
#
#!| ChildComparerFixture |
#| authToken | type | id | testReadAndStoreRecord? |
#| ${currentAuthToken} | ${recordType} | ${recordId} |=~/[!-"otherProtocols":\{"iiif":\{"server":"${systemUnderTestUrl}iiif\/","identifier":"binary:\d*"\}\}-!]/ |
#
#!define iiifServerUrl (${systemUnderTestUrl}iiif/)
#
#!define expectedXpath {count(//otherProtocols) = 0}
#!include -seamless .HelperPages.readRecordInXML
#
#!include -seamless .HelperPages.deleteRecord
*!

!***> '''Case 3'''
!define originalFileName {aZip.zip}
!define createData unpublishedBinary

!include -seamless .CoraTests.CallThroughJavaCode.Data.Binary.CreateBinaryAndUploadFile

!| ChildComparerFixture                                                                                                                                           |
|authToken          |type         |id         |testReadAndStoreRecord?                                                                                            |
|${currentAuthToken}|${recordType}|${recordId}|=~/[!-^(?!.*"otherProtocols":\{"iiif":\{"server":"${systemUnderTestUrl}iiif\/","identifier":"binary:\d*"\}\}).*-!]/|

!define expectedXpath {count(//otherProtocols) = 0}
!include -seamless .HelperPages.readRecordInXML

!include -seamless .HelperPages.deleteRecord
*!

