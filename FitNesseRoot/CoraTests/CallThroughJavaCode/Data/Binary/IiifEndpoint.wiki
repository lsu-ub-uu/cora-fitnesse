---
Test
---
!2 IIIF Endpoint
The IIIF Endpoint implements the IIIF Image API. Refer to the [[IIIF Image API documentation][https://iiif.io/api/image/3.0/]].

!3 In the context of Cora
Cora provides the capability to expose all images using the IIIF Image API. This feature is only available for the JP2 representation of the original image.

!4 Permissions
Currently, only "published" images are accessible via the IIIF endpoint. In the future, access to "unpublished" images will also be possible, provided the user has the appropriate permissions.

!3 Design
To implement the IIIF Image API, we utilize an open-source image server [[iipsrv][https://github.com/ruven/iipsrv.git]]. While "iipsrv" implements the IIIF Image API, it may not fully adhere to the standard. Additionally, to manage permissions and conceal internal configurations, we've developed a "proxy" within the spider package. This proxy ensures that only authorized users can access images, marking a significant improvement over previous versions of Cora. At the front end, an HTTP endpoint receives incoming calls and forwards them to the proxy.

!3 Viewer
The choice of viewer is yet to be finalized, but we are considering using the [[iipmooviewer][https://github.com/ruven/iipmooviewer.git]] in jsClient.


 * '''Case 1:''' Some test case 
 * '''Case 2:''' Some other test case
 
!***> IIIF test setup
This setup upload an image and supply the information we need for the upcoming tests such as 
record id ($tmpRecordId1), iiif server url etc.
!define originalFileName {aTiff.tiff}
!define expectedChecksumSha512 {18e566f03b75c25ae68f7a543c1e31d4afd7d8934912a80b96005e4cbd664e268fd12d23e5687a1f62c93119c254ea52e56d398d17b5fea8987d8d96cc25115d}
!define expectedFileSize {54452040}

!include -seamless .CoraTests.CallThroughJavaCode.Data.Binary.UploadImageAndWait

!define iiifServerUrl {!-http://systemone-iiif:8080/iiif/-!}
*!
 

!***> '''Case 1'''

*!

!***> '''Case 2'''

*!

