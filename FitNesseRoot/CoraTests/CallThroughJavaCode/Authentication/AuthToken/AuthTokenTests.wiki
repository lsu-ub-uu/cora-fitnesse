---
Test
---
 * '''Case 1: ''' It should be possible to read public data without supplying an authToken
 * '''Case 2: ''' An invalid token should result in an ''UNAUTHORIZED'' response from the system
 * '''Case 3: ''' An authToken should contain all expected data attached to the token when its created
 * '''Case 4: ''' It must be possible to renew the authToken within the ''validUntil'' time limit
 * '''Case 7: ''' Creating data using an authToken should result in the userId automatically being attached to "createdBy"
 !style_red[* '''Case 5: ''' It must not be possible to renew the authToken after the ''validUntil'' time limit is reached]
 !style_red[* '''Case 6: ''' It must not be possible to renew the authToken after the ''renewUntil'' time limit is reached]

!***> '''Case 1: ''' It should be possible to read public data without supplying an authToken
!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| | metadata | idTextVar | | OK |
*!

!***> '''Case 2: ''' An invalid token should result in an UNAUTHORIZED response from the system
!| RecordEndpointFixture |
| authToken | type | id | testReadRecord? | getStatusType? |
| dummyUnauthenticatedToken | metadata | idTextVar | | UNAUTHORIZED |
*!

!***> '''Case 3: ''' An authToken should contain all expected data attached to the token when its created
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${appTokenVerifierUrl}rest |
| setHeader | Accept:application/vnd.uub.authToken+json!-
-!Content-Type:application/vnd.uub.login|
| setBody | systemoneAdmin@system.cora.uu.se!-
-!5d3f3ed4-4931-4924-9faa-8eaf5ac6457e |
| POST | /apptoken | 201 | | $loginResult= |
| let | userId | js | response.body.match(/userId","value":"([^"]+)"}/)[1] | 141414 |
| let | loginId | js | response.body.match(/loginId","value":"([^"]+)"}/)[1] | systemoneAdmin@system.cora.uu.se |
| let | lastName | js | response.body.match(/firstName","value":"([^"]+)"}/)[1] | SystemOne |
| let | lastName | js | response.body.match(/lastName","value":"([^"]+)"}/)[1] | Admin |
| let | authToken | js | response.body.match(/name":"(authToken)"}/)[1] | authToken |
| let | createdAuthToken | js | response.body.match(/token","value":"([^"]+)"}/)[1] | |
| let | refreshUrl | js | response.body.match(/url":"([^"]+)"}/)[1] | |

!| script | ExtractSubstringUsingRegex |
| ensure | match found using text | $loginResult | and regex | "token","value":"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})" |
| ensure | match found using text | $loginResult | and regex | "validUntil","value":"\d{13}" |
| ensure | match found using text | $loginResult | and regex | "renewUntil","value":"\d{13}" |
| ensure | match found using text | $loginResult | and regex | "actionLinks":\{"renew":\{"requestMethod":"POST","rel":"renew","url":"http:\/\/[a-zA-Z0-9.-]+(:[0-9]{1,5})?\/login\/rest\/authToken\/[a-f0-9\\-]{36}","accept":"application\/vnd\.uub\.authToken\+json"\},"delete":\{"requestMethod":"DELETE","rel":"delete","url":"http:\/\/[a-zA-Z0-9.-]+(:[0-9]{1,5})?\/login\/rest\/authToken\/[a-f0-9\\-]{36}"\}\}\} |
*!

!***> '''Case 4: ''' It must be possible to renew the authToken within the ''validUntil'' time limit
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${appTokenVerifierUrl}rest |
| setHeader | Accept:application/vnd.uub.authToken+json!-
-!Content-Type:application/vnd.uub.login !- 
-!authToken:!-%createdAuthToken% -!|
| POST | %refreshUrl% | 200 | | $loginResult= |
| let | userId | js | response.body.match(/userId","value":"([^"]+)"}/)[1] | 141414 |
| let | loginId | js | response.body.match(/loginId","value":"([^"]+)"}/)[1] | systemoneAdmin@system.cora.uu.se |
| let | lastName | js | response.body.match(/firstName","value":"([^"]+)"}/)[1] | SystemOne |
| let | lastName | js | response.body.match(/lastName","value":"([^"]+)"}/)[1] | Admin |
| let | authToken | js | response.body.match(/name":"(authToken)"}/)[1] | authToken |
| let | renewedAuthToken | js | response.body.match(/token","value":"([^"]+)"}/)[1] | |

!| script | ExtractSubstringUsingRegex |
| ensure | match found using text | $loginResult | and regex | "token","value":"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})" |
| ensure | match found using text | $loginResult | and regex | "validUntil","value":"\d{13}" |
| ensure | match found using text | $loginResult | and regex | "renewUntil","value":"\d{13}" |
| ensure | match found using text | $loginResult | and regex | "actionLinks":\{"renew":\{"requestMethod":"POST","rel":"renew","url":"http:\/\/[a-zA-Z0-9.-]+(:[0-9]{1,5})?\/login\/rest\/authToken\/[a-f0-9\\-]{36}","accept":"application\/vnd\.uub\.authToken\+json"\},"delete":\{"requestMethod":"DELETE","rel":"delete","url":"http:\/\/[a-zA-Z0-9.-]+(:[0-9]{1,5})?\/login\/rest\/authToken\/[a-f0-9\\-]{36}"\}\}\} |
*!

!***> '''Case 7: ''' Creating data using an authToken should result in the userId automatically being attached to "createdBy"
!define expectedAdminResponse {!-{"children":[{"children":[{"name":"id","value":"myAuthText"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"textSystemOne"}],"name":"validationType"}],"name":"recordInfo"},{"children":[{"name":"text","value":"Min svenska text"}],"name":"textPart","attributes":{"type":"default","lang":"sv"}}],"name":"text"}-!}
!define expecteduserResponse {!-{"children":[{"children":[{"name":"id","value":"myAuth3Text"},{"children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}],"name":"dataDivider"},{"children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"textSystemOne"}],"name":"validationType"}],"name":"recordInfo"},{"children":[{"name":"text","value":"Min andra text pÃ¥ svenska"}],"name":"textPart","attributes":{"type":"default","lang":"sv"}},{"children":[{"name":"text","value":"My second text in english"}],"name":"textPart","attributes":{"type":"alternative","lang":"en"}}],"name":"text"}-!}

!| RecordEndpointFixture |
| authToken | type | json | testCreateRecord? | getStatusType? |
| $adminAuthToken | text | ${expectedAdminResponse} | =~/"name":"linkedRecordId",\s*"value":"131313"/ | CREATED |
| $userAuthToken | text | ${expecteduserResponse} | =~/"name":"linkedRecordId",\s*"value":"121212"/ | CREATED |
*!

!***> Clean up created data
!| RecordEndpointFixture |
| authToken | type | id | testDeleteRecord? | getStatusType? |
| $adminAuthToken | text | myAuthText | | OK |
| $userAuthToken | text | myAuth3Text | | OK |
*!