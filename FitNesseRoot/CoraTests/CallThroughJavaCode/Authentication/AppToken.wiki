---
Test
---
!1 AppToken
!2 What is an appToken
An appToken (short for application token) is a form of digital authentication token used in various applications to securely verify the identity of the application itself, rather than a user. Here are some key characteristics and uses of app tokens:

1. '''Authentication and Authorization''': AppTokens are used to authenticate the application making a request to a service or API, ensuring that the application has permission to access certain resources or perform specific actions.

2. '''Security''': By using appTokens, applications can securely interact with APIs and services without exposing sensitive credentials like usernames and passwords. This reduces the risk of credential theft or misuse.

3. '''Access Control''': AppTokens can encapsulate various permissions and roles, allowing fine-grained access control. This means different applications or instances of the same application can have different levels of access to resources based on the token they present.

4. '''Expiration and Renewal''': AppTokens typically have an expiration time to enhance security. After they expire, new tokens must be obtained to continue accessing services. This ensures that even if a token is compromised, its usefulness is limited to a specific time window.

5. '''Applications''': AppTokens are suited for applications, enabling them to operate autonomously within the permissions granted.

!2 Working with appTokens
!3 Create an appToken
Each user is able to create multiple appTokens, by just adding a new appToken and a note in the user configuration and updating the user. Once this is done an appToken is generated and stored (hashed) as a [[systemSecret][.CoraTests.CallThroughJavaCode.Authentication.Password.SystemSecret]]. The response of the update will contain the generated appToken as clear text. This clear text appToken will only be shown once, at '''appTokenClearText''' field, and never again. Make sure to copy it.

!4 Metadata definition included in User
 * '''user'''
   * ''' ... '''
   * '''appTokens''' (group, 0-1, readWrite)
     * '''appToken''' (group, 0-X, noConstraints)
       * '''appTokenLink''' (recordLink(systemSecret), 0-1, readWrite)
       * '''appTokenNote''' (text, 1-1, noConstraints)
       * '''appTokenClearText''' (text, 0-1, noConstraints)

!3 Use an appToken
In order to be authenticated by the system you need to have an [[authToken][.CoraTests.CallThroughJavaCode.Authentication.AuthToken]] . To get an authToken using an appToken you need to make a !style_pass(POST) call to '''${systemUnderTestUrl}rest/login/apptoken/{user}''' using the appToken as payload. The response will contain a valid authToken.
!style_darkRed[At this moment '''Access control''' and  '''Expiration and Renewal''' is not implemented.]

!3 Update the note of an existing appToken
The user is able to update the note of any single appToken of its own. This can be achieve buy changing the note in specific appToken.

!3 Delete an appToken
You can delete an appToken by simply removing its apptoken group in the user configuration and updating the user.

--------
!2 Test cases
 * '''Case 1: ''' It should be possible to create an appToken. The appTokenClearText of the apptoken should be visible at the time of its creation.
 * '''Case 2: ''' It should be possible to login using a created appToken.
 * '''Case 3: ''' It should be possible to read the note for an apptoken. There must be no appTokenClearText present in the data.
 * '''Case 4: ''' It should be possible to delete an appToken.
 * '''Case 5: ''' It should be possible to update the note of an apptoken.
 * '''Case 6: ''' When creating an appToken and supplying an appToken in clear text (using appTokenClearText), the appTokenClearText in the response must be only the newly generated one and not the supplied one.
 * '''Case 7: ''' When updating an appToken and supplying an existing appToken in clear text (using appTokenClearText), appTokenClearText must never be stored and visible in the response.

!3 User tests
!***> '''Case 1: ''' It should be possible to create an appToken. The appTokenClearText of the apptoken should be visible at the time of its creation.
!| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl}rest/ |
| setHeader | Accept:application/vnd.uub.record+json!-
-!Content-Type:application/vnd.uub.record+json!-
-!authToken:$adminAuthToken |
| setBody | {"name":"user","children":[{"name":"recordInfo","children":[{"name":"ignoreOverwriteProtection","value":"true"},{"name":"id","value":"131313"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"user"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"systemOneUser"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]}]},{"name":"loginId","value":"fitnesseAdmin@system.cora.uu.se"},{"name":"userFirstname","value":"Fitnesse"},{"name":"userLastname","value":"Admin"},{"name":"userRole","repeatId":"1","children":[{"name":"userRole","children":[{"name":"linkedRecordType","value":"permissionRole"},{"name":"linkedRecordId","value":"everything"}]},{"name":"permissionTermRulePart","repeatId":"0","children":[{"name":"rule","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"systemPermissionTerm"}]},{"name":"value","repeatId":"0","value":"system.*"}]}]},{"name":"userRole","repeatId":"3603423986673","children":[{"name":"userRole","children":[{"name":"linkedRecordType","value":"permissionRole"},{"name":"linkedRecordId","value":"binaryUserRole"}]}]},{"name":"activeStatus","value":"active"},{"name":"appTokens","children":[{"name":"appToken","repeatId":"0","children":[{"name":"appTokenLink","children":[{"name":"linkedRecordType","value":"systemSecret"},{"name":"linkedRecordId","value":"systemSecret:3452556002950361"}]},{"name":"appTokenNote","value":"Token for development"}]},{"name":"appToken","repeatId":"1","children":[{"name":"appTokenNote","value":"My admin device"}]}]},{"name":"usePassword","value":"false"}],"attributes":{"type":"systemOneUser"}} |
| POST | /record/user/131313 | 200 | | |
| let | appUserToken | js | response.body.match(/"appTokenClearText","value":"([^"]+)"}/)[1] | |
*!

!***> '''Case 2: ''' It should be possible to login using a created appToken.
!| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${appTokenVerifierUrl}rest/ |
| setHeader | Accept:application/vnd.uub.authentication+json!-
-!Content-Type:application/vnd.uub.login |
| setBody | fitnesseAdmin@system.cora.uu.se!-
-!%appUserToken% |
| POST | /apptoken | 201 | | $loginResult= |
| let | generatedAuthToken | js | response.body.match(/"name":"token","value":"([^"]+)"}/)[1] | |
| let | token | js | response.body.search(/name":"token","value":"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})"}/) | 41 |
| let | userId | js | response.body.match(/userId","value":"([^"]+)"}/)[1] | 131313 |
| let | loginId | js | response.body.match(/"name":"loginId","value":"([^"]+)"}/)[1] | fitnesseAdmin@system.cora.uu.se |
| let | firstName | js | response.body.match(/firstName","value":"([^"]+)"}/)[1] | Fitnesse |
| let | lastName | js | response.body.match(/lastName","value":"([^"]+)"}/)[1] | Admin |
| let | authToken | js | response.body.match(/name":"(authToken)"}/)[1] | authToken |

!| script | ExtractSubstringUsingRegex |
| ensure | match found using text | $loginResult | and regex | "token","value":"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})" |
| ensure | match found using text | $loginResult | and regex | "validUntil","value":"\d{13}" |
| ensure | match found using text | $loginResult | and regex | "renewUntil","value":"\d{13}" |
*!

!***> '''Case 3: ''' It should be possible to read the note for an apptoken. There must be no appTokenClearText present in the data.
!| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl}rest/ |
| setHeader | Accept:application/vnd.uub.record+json!-
-!Content-Type:application/vnd.uub.record+json!-
-!authToken:%generatedAuthToken% |
| GET | /record/user/131313 | 200 | | |
| let | noteShouldExist | js | var regExp = new RegExp('"My admin device"') ; regExp.test(response.body) | true |
| let | appTokenClearTextShouldNotExist | js | var regExp = new RegExp('"appTokenClearText"') ; regExp.test(response.body) | false |
*!

!***> '''Case 4: ''' It should be possible to delete an appToken.
!| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl}rest/ |
| setHeader | Accept:application/vnd.uub.record+json!-
-!Content-Type:application/vnd.uub.record+json!-
-!authToken:%generatedAuthToken% |
| setBody | {"name":"user","children":[{"name":"recordInfo","children":[{"name":"ignoreOverwriteProtection","value":"true"},{"name":"id","value":"131313"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"user"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"systemOneUser"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]}]},{"name":"loginId","value":"fitnesseAdmin@system.cora.uu.se"},{"name":"userFirstname","value":"Fitnesse"},{"name":"userLastname","value":"Admin"},{"name":"userRole","repeatId":"1","children":[{"name":"userRole","children":[{"name":"linkedRecordType","value":"permissionRole"},{"name":"linkedRecordId","value":"everything"}]},{"name":"permissionTermRulePart","repeatId":"0","children":[{"name":"rule","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"systemPermissionTerm"}]},{"name":"value","repeatId":"0","value":"system.*"}]}]},{"name":"userRole","repeatId":"3603423986673","children":[{"name":"userRole","children":[{"name":"linkedRecordType","value":"permissionRole"},{"name":"linkedRecordId","value":"binaryUserRole"}]}]},{"name":"activeStatus","value":"active"},{"name":"appTokens","children":[{"name":"appToken","repeatId":"0","children":[{"name":"appTokenLink","children":[{"name":"linkedRecordType","value":"systemSecret"},{"name":"linkedRecordId","value":"systemSecret:3452556002950361"}]},{"name":"appTokenNote","value":"Token for development"}]}]},{"name":"usePassword","value":"false"}],"attributes":{"type":"systemOneUser"}} |
| POST | /record/user/131313 | 200 | | |
| let | appUserTokenShouldNotExist | js | var regExp = new RegExp('"My admin device"') ; regExp.test(response.body) | false |
*!

!***> '''Case 5: ''' It should be possible to update the note of an apptoken.
!| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl}rest/ |
| setHeader | Accept:application/vnd.uub.record+json!-
-!Content-Type:application/vnd.uub.record+json!-
-!authToken:%generatedAuthToken% |
| setBody | {"name":"user","children":[{"name":"recordInfo","children":[{"name":"ignoreOverwriteProtection","value":"true"},{"name":"id","value":"131313"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"user"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"systemOneUser"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]}]},{"name":"loginId","value":"fitnesseAdmin@system.cora.uu.se"},{"name":"userFirstname","value":"Fitnesse"},{"name":"userLastname","value":"Admin"},{"name":"userRole","repeatId":"1","children":[{"name":"userRole","children":[{"name":"linkedRecordType","value":"permissionRole"},{"name":"linkedRecordId","value":"everything"}]},{"name":"permissionTermRulePart","repeatId":"0","children":[{"name":"rule","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"systemPermissionTerm"}]},{"name":"value","repeatId":"0","value":"system.*"}]}]},{"name":"userRole","repeatId":"3603423986673","children":[{"name":"userRole","children":[{"name":"linkedRecordType","value":"permissionRole"},{"name":"linkedRecordId","value":"binaryUserRole"}]}]},{"name":"activeStatus","value":"active"},{"name":"appTokens","children":[{"name":"appToken","repeatId":"0","children":[{"name":"appTokenLink","children":[{"name":"linkedRecordType","value":"systemSecret"},{"name":"linkedRecordId","value":"systemSecret:3452556002950361"}]},{"name":"appTokenNote","value":"An updated note"}]}]},{"name":"usePassword","value":"false"}],"attributes":{"type":"systemOneUser"}} |
| POST | /record/user/131313 | 200 | | |
| let | noteShouldHaveBeenUpdated | js | var regExp = new RegExp('"An updated note"') ; regExp.test(response.body) | true |
*!

!***> '''Case 6: ''' When creating an appToken and supplying an appToken in clear text (using appTokenClearText), the appTokenClearText in the response must be only the newly generated one and not the supplied one.
!| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl}rest/ |
| setHeader | Accept:application/vnd.uub.record+json!-
-!Content-Type:application/vnd.uub.record+json!-
-!authToken:$adminAuthToken |
| setBody | {"name":"user","children":[{"name":"recordInfo","children":[{"name":"ignoreOverwriteProtection","value":"true"},{"name":"id","value":"131313"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"user"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"systemOneUser"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]}]},{"name":"loginId","value":"fitnesseAdmin@system.cora.uu.se"},{"name":"userFirstname","value":"Fitnesse"},{"name":"userLastname","value":"Admin"},{"name":"userRole","repeatId":"1","children":[{"name":"userRole","children":[{"name":"linkedRecordType","value":"permissionRole"},{"name":"linkedRecordId","value":"everything"}]},{"name":"permissionTermRulePart","repeatId":"0","children":[{"name":"rule","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"systemPermissionTerm"}]},{"name":"value","repeatId":"0","value":"system.*"}]}]},{"name":"userRole","repeatId":"3603423986673","children":[{"name":"userRole","children":[{"name":"linkedRecordType","value":"permissionRole"},{"name":"linkedRecordId","value":"binaryUserRole"}]}]},{"name":"activeStatus","value":"active"},{"name":"appTokens","children":[{"name":"appToken","repeatId":"0","children":[{"name":"appTokenLink","children":[{"name":"linkedRecordType","value":"systemSecret"},{"name":"linkedRecordId","value":"systemSecret:3452556002950361"}]},{"name":"appTokenNote","value":"Token for development"}]},{"name":"appToken","repeatId":"1","children":[{"name":"appTokenNote","value":"My admin device"},{"name":"appTokenClearText","value":"00000000-1111-2222-3333-444444444444"}]}]},{"name":"usePassword","value":"false"}],"attributes":{"type":"systemOneUser"}} |
| POST | /record/user/131313 | 200 | | |
| let | appTokenClearTextShouldOnlyExistOnce | js | var regExp = new RegExp('^(?!.*appTokenClearText.*appTokenClearText).*appTokenClearText.*$') ; regExp.test(response.body) | true |
| let | suppliedAppTokenClearTextShouldNotExist | js | var regExp = new RegExp('"00000000-1111-2222-3333-444444444444"') ; regExp.test(response.body) | false |

!5 '''Read the record again to assert appTokenClearText is not present in the data.'''
!| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl}rest/ |
| setHeader | Accept:application/vnd.uub.record+json!-
-!Content-Type:application/vnd.uub.record+json!-
-!authToken:%generatedAuthToken% |
| GET | /record/user/131313 | 200 | | |
| let | appTokenClearTextShouldNotExist | js | var regExp = new RegExp('"appTokenClearText"') ; regExp.test(response.body) | false |
*!

!***> '''Case 7: ''' When updating an appToken and supplying an existing appToken in clear text (using appTokenClearText), appTokenClearText must never be stored and visible in the response.
!| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl}rest/ |
| setHeader | Accept:application/vnd.uub.record+json!-
-!Content-Type:application/vnd.uub.record+json!-
-!authToken:%generatedAuthToken% |
| setBody | {"name":"user","children":[{"name":"recordInfo","children":[{"name":"ignoreOverwriteProtection","value":"true"},{"name":"id","value":"131313"},{"name":"type","children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"user"}]},{"name":"validationType","children":[{"name":"linkedRecordType","value":"validationType"},{"name":"linkedRecordId","value":"systemOneUser"}]},{"name":"dataDivider","children":[{"name":"linkedRecordType","value":"system"},{"name":"linkedRecordId","value":"cora"}]}]},{"name":"loginId","value":"fitnesseAdmin@system.cora.uu.se"},{"name":"userFirstname","value":"Fitnesse"},{"name":"userLastname","value":"Admin"},{"name":"userRole","repeatId":"1","children":[{"name":"userRole","children":[{"name":"linkedRecordType","value":"permissionRole"},{"name":"linkedRecordId","value":"everything"}]},{"name":"permissionTermRulePart","repeatId":"0","children":[{"name":"rule","children":[{"name":"linkedRecordType","value":"collectTerm"},{"name":"linkedRecordId","value":"systemPermissionTerm"}]},{"name":"value","repeatId":"0","value":"system.*"}]}]},{"name":"userRole","repeatId":"3603423986673","children":[{"name":"userRole","children":[{"name":"linkedRecordType","value":"permissionRole"},{"name":"linkedRecordId","value":"binaryUserRole"}]}]},{"name":"activeStatus","value":"active"},{"name":"appTokens","children":[{"name":"appToken","repeatId":"0","children":[{"name":"appTokenLink","children":[{"name":"linkedRecordType","value":"systemSecret"},{"name":"linkedRecordId","value":"systemSecret:3452556002950361"}]},{"name":"appTokenNote","value":"Token for development"},{"name":"appTokenClearText","value":"00000000-1111-2222-3333-444444444444"}]}]},{"name":"usePassword","value":"false"}],"attributes":{"type":"systemOneUser"}} |
| POST | /record/user/131313 | 200 | | |
| let | suppliedAppTokenClearTextShouldNotExist | js | var regExp = new RegExp('"appTokenClearText"') ; regExp.test(response.body) | false |

!5 '''Read the record again to assert appTokenClearText is not present in the data.'''
!| Table:smartrics.rest.fitnesse.fixture.RestFixture | ${systemUnderTestUrl}rest/ |
| setHeader | Accept:application/vnd.uub.record+json!-
-!Content-Type:application/vnd.uub.record+json!-
-!authToken:%generatedAuthToken% |
| GET | /record/user/131313 | 200 | | |
| let | appTokenClearTextShouldNotExist | js | var regExp = new RegExp('"appTokenClearText"') ; regExp.test(response.body) | false |
*!
