---
Static
---
!3 Password Login

!4 Password management
 * '''Case 1:''' It must be possible to set a password for a user and the user must be able to log in with that password
 * '''Case 2:''' It should be possible to change the password
   * It should be possible to log in with the new password
   * It should not be possible to log in with the old password
 * '''Case 3:''' It should be possible to remove a password
   * When a password is removed, a user can no longer log in
 * '''Case 4:''' The ability to manage passwords must be controlled by set rights
 
!4 REST API
 * '''Case 1:''' It must be possible to log in with a username and password
 * '''Case 2:''' A user (outside SWAMID) without a password should not be able to log in
 * '''Case 3:''' A user marked as inactive should not be able to log in
 * '''Case 4:''' There are limits on how many login attempts are allowed
   * Five failed attempts are followed by a period of time when the login is unavailable for a user

#!4 Assumptions:
# * No user is used when calling REST API in order to achieve to be unauthorized for systemSecret.
# * All json payloads sent to REST API uses same systemSecret minimal group. We just want at json that can be convreted to a DataGroup, we do not need that it validates.
# 
!***> Case 1
#!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${appTokenVerifierUrl}rest/    |
#| setHeader | Accept:application/vnd.uub.record+json!-
#-!Content-Type:application/vnd.uub.record+json|
#| setBody | ${systemSecretMinimalGroup} |
#| POST | /loginPassword/ | 200 | | |
*!