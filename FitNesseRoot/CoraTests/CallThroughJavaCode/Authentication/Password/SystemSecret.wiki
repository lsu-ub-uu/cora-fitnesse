---
Static
---
!3 System secret
System secrte is an internal record type used to store secrets. It uses a hash with salt algorithm to secure the secret. 
Since the record type is intended only to be used internally, we restrict all actions calls to systemSecret record type in a way that no user is able to access and manage system secrets. 

 * '''Case 1: ''' When the user is unauthorized
  * '''Case 1a:''' '''Create''' of systemSecret responds with Unauthorized 401.
  * '''Case 1b:''' '''Read''' of systemSecret responds with Unauthorized 401.
  * '''Case 1c:''' '''Read list''' of systemSecret Cora responds with Unauthorized 401.
  * '''Case 1d:''' '''Read incomming links''' of systemSecret Cora responds with Unauthorized 401.
  * '''Case 1e:''' '''Update''' of systemSecret Cora responds with Unauthorized 401.
  * '''Case 1f:''' '''Validate''' of systemSecret Cora responds with Unauthorized 401.
  * '''Case 1g:''' '''Delete''' of systemSecret Cora responds with Unauthorized 401.
  * '''Case 1h:''' '''Search''' of systemSecret Cora responds with Unauthorized 401.
  * '''Case 1i:''' '''Index batch job''' of systemSecret Cora responds with Unauthorized 401.
  * '''Case 1j:''' '''Workorder''' "index" of systemSecret Cora responds with Unauthorized 401.
 
 * '''Case 2: ''' When the user is authorized
  * '''Case 2a:''' '''Create''' of systemSecret responds with Forbidden 403.
  * '''Case 2b:''' '''Read''' of systemSecret responds with Forbidden 403.
  * '''Case 2c:''' '''Read list''' of systemSecret responds with Forbidden 403.
  * '''Case 2d:''' '''Read incomming links''' of systemSecret Cora responds with Forbidden 403.
  * '''Case 2e:''' '''Update''' of systemSecret Cora responds with Forbidden 403.
  * '''Case 2f:''' '''Validate''' of systemSecret Cora responds with Forbidden 403.
  * '''Case 2g:''' '''Delete''' of systemSecret Cora responds with Forbidden 403.
  * '''Case 2h:''' '''Search''' of systemSecret Cora responds with Forbidden 403.
  * '''Case 2i:''' '''Index batch job''' of systemSecret Cora responds with Forbidden 403.
  * '''Case 2j:''' '''Workorder''' (index) of systemSecret Cora responds with Forbidden 403.
 
#Set fitnesse empty authToken header (unauthorized)
#!| Table:smartrics.rest.fitnesse.fixture.RestFixtureConfig | |
#| restfixture.default.headers | |
!4 Case 1 assumptions:
 * No user is used when calling REST API in order to achieve to be unauthorized for systemSecret.
 * All json payloads sent to REST API uses same systemSecret minimal group. We just want at json that can be convreted to a DataGroup, we do not need that it validates.
 
!***> Case 1a Create
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| setHeader | Content-Type:application/vnd.uub.record+json|
| setBody | ${systemSecretMinimalGroup} |
| POST | /record/systemSecret | 401 | | |
*!
!***> Case 1b Read
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| GET |/record/systemSecret/someRecordId| 401 | | |
*!
!***> Case 1c Read list
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| setHeader | Content-Type:application/vnd.uub.recordList+json|
| GET |/record/systemSecret| 401 | | |
*!
!***> Case 1d Read incomming links
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| GET |/record/systemSecret/someRecordId/incomingLinks| 401 | | |
*!
!***> Case 1e Update
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| setHeader | Content-Type:application/vnd.uub.record+json|
| setBody | ${systemSecretMinimalGroup} |
| POST |/record/systemSecret/someRecordId| 401 | | |
*!
!***> Case 1f Validate
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| setHeader | Content-Type:application/vnd.uub.record+json|
| setBody | ${systemSecretMinimalGroup} |
| POST |/record/systemSecret| 401 | | |
*!
!***> Case 1g Delete
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| DELETE |/record/systemSecret/someRecordId| 401 | | |
*!
!***> Case 1h Search HOW DO WE STOP CREATION OF SEARCHS FOR SYSTEMSECRETS???
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| setHeader | Content-Type:application/vnd.uub.recordList+json|
| GET |/record/searchResult/someSearchId| 401 | | |
*!
!***> Case 1i Index batch job
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| setHeader | Content-Type:application/vnd.uub.record+json|
| setBody | ${systemSecretMinimalGroup} |
| POST |/record/index/systemSecret| 401 | | |
*!
!***> Case 1j WorkOrder (index)
!define minimalWorkOrder {!-{"children":[{"children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"systemSecret"}],"name":"recordType"},{"name":"recordId","value":"somesystemSecretid"},{"name":"type","value":"index"}],"name":"workOrder"}-!}
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| setHeader | Content-Type:application/vnd.uub.record+json|
| setBody | ${minimalWorkOrder} |
| POST |/record/workOrder| 401 | | |
*!

!4 Case 2 assumptions:
 * Fitnesse user is used when calling REST API in order to achieve to be authorized for systemSecret.
 * All json payloads sent to REST API uses same systemSecret minimal group. We just want at json that can be convreted to a DataGroup, we do not need that it validates.
 
!***> Case 2a Create
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| setHeader | Content-Type:application/vnd.uub.record+json|
| setBody | ${systemSecretMinimalGroup} |
| POST | /record/systemSecret | 403 | | |
*!
!***> Case 2b Read
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| GET |/record/systemSecret/someRecordId| 403 | | |
*!
!***> Case 2c Read list
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| setHeader | Content-Type:application/vnd.uub.recordList+json|
| GET |/record/systemSecret| 403 | | |
*!
!***> Case 2d Read incomming links
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| GET |/record/systemSecret/someRecordId/incomingLinks| 403 | | |
*!
!***> Case 2e Update
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| setHeader | Content-Type:application/vnd.uub.record+json|
| setBody | ${systemSecretMinimalGroup} |
| POST |/record/systemSecret/someRecordId| 403 | | |
*!
!***> Case 2f Validate
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| setHeader | Content-Type:application/vnd.uub.record+json|
| setBody | ${systemSecretMinimalGroup} |
| POST |/record/systemSecret| 403 | | |
*!
!***> Case 2g Delete
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| DELETE |/record/systemSecret/someRecordId| 403 | | |
*!
!***> Case 2h Search HOW DO WE STOP CREATION OF SEARCHS FOR SYSTEMSECRETS???
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| setHeader | Content-Type:application/vnd.uub.recordList+json|
| GET |/record/searchResult/someSearchId| 403 | | |
*!
!***> Case 2i Index batch job
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| setHeader | Content-Type:application/vnd.uub.record+json|
| setBody | ${systemSecretMinimalGroup} |
| POST |/record/index/systemSecret| 403 | | |
*!
!***> Case 2j WorkOrder (index)
!define minimalWorkOrder {!-{"children":[{"children":[{"name":"linkedRecordType","value":"recordType"},{"name":"linkedRecordId","value":"systemSecret"}],"name":"recordType"},{"name":"recordId","value":"somesystemSecretid"},{"name":"type","value":"index"}],"name":"workOrder"}-!}
!| Table:smartrics.rest.fitnesse.fixture.RestFixture|${systemUnderTestUrl}rest/    |
| setHeader | Content-Type:application/vnd.uub.record+json|
| setBody | ${minimalWorkOrder} |
| POST |/record/workOrder| 403 | | |
*!