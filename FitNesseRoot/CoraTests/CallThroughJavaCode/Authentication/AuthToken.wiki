---
Test
---
!1 AuthToken
The authToken is a secure key used to access the API after a successful login. When you log in to the system, the API generates and returns an authToken.

This token has a limited lifespan and must be renewed to remain active. The token's validity is managed by two timestamps:
 *'''validUntil''': This timestamp represents the session limit. The token must be renewed before this time expires, otherwise, it becomes invalid for renewal.
 *'''renewUntil''': This timestamp indicates the maximum allowable period for renewing the token. After this time is reached, the token cannot be renewed further, and a new token must be generated.
 
!*** '''authToken response example'''
{{{
{
    "authentication": {
        "data": {
            "children": [
                {
                    "name": "token",
                    "value": "ab28b7f6-75fd-418b-b6b4-f771ffaa11c0"
                },
                {
                    "name": "validUntil",
                    "value": "1740389200195"
                },
                {
                    "name": "renewUntil",
                    "value": "1740475000195"
                },
                {
                    "name": "userId",
                    "value": "SomeUserId"
                },
                {
                    "name": "loginId",
                    "value": "someLogin@someExampleServer.com"
                },
                {
                    "name": "firstName",
                    "value": "Afirstname"
                },
                {
                    "name": "lastName",
                    "value": "Somelastname"
                },
                {
                    "repeatId": "1",
                    "children": [
                        {
                            "name": "linkedRecordType",
                            "value": "permissionUnit"
                        },
                        {
                            "name": "linkedRecordId",
                            "value": "somePermissionUnitId"
                        }
                    ],
                    "name": "permissionUnit"
                },
                {
                    "repeatId": "2",
                    "children": [
                        {
                            "name": "linkedRecordType",
                            "value": "permissionUnit"
                        },
                        {
                            "name": "linkedRecordId",
                            "value": "AnotherPermissionUnitId"
                        }
                    ],
                    "name": "permissionUnit"
                }
            ],
            "name": "authToken"
        },
        "actionLinks": {
            "renew": {
                "requestMethod": "POST",
                "rel": "renew",
                "url": "http://someExampleServer.com/login/rest/authToken/82ceefe1-04eb-4fd1-bb10-516be8df3d35",
                "accept": "application/vnd.cora.authentication+json"
            },
            "delete": {
                "requestMethod": "DELETE",
                "rel": "delete",
                "url": "http://someExampleServer.com/login/rest/authToken/82ceefe1-04eb-4fd1-bb10-516be8df3d35"
            }
        }
    }
}
}}}
*!
!***> '''Renew an authToken'''
Renew an authToken by using the tokenId URL that is listed under actionLinks as ''renew'' in the authToken response.

 * !style_code(!style_pass[POST] : {systemUrl}/login/rest/authToken/{tokenId})
 * !style_code(!style_ignore[produces] : application/vnd.cora.authentication+json)
*!
!***> '''Delete an authToken'''
Delete an authToken by using the tokenId URL that is listed under actionLinks as ''delete'' in the authToken response.

 * !style_code(!style_pass[DELETE] : {systemUrl}/login/rest/authToken/{tokenId})
*!
----
!3 Authtoken tests
!include -seamless .CoraTests.CallThroughJavaCode.Authentication.AuthToken.AuthTokenTests